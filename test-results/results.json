{
  "config": {
    "configFile": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/playwright.config.ts",
    "rootDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 5
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "playwright-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/junit.xml"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "setup",
        "name": "setup",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/.*\\.setup\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "api-tests",
        "name": "api-tests",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/api\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "unit-tests",
        "name": "unit-tests",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/unit\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "integration-tests",
        "name": "integration-tests",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/integration\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "e2e-chromium",
        "name": "e2e-chromium",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "e2e-firefox",
        "name": "e2e-firefox",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "e2e-webkit",
        "name": "e2e-webkit",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "mobile-safari",
        "name": "mobile-safari",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.mobile\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "mobile-chrome",
        "name": "mobile-chrome",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.mobile\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "accessibility",
        "name": "accessibility",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/accessibility\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "performance",
        "name": "performance",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/performance\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.1",
    "workers": 5,
    "webServer": null
  },
  "suites": [
    {
      "title": "auth.setup.ts",
      "file": "auth.setup.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "authenticate user",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 16653,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "Starting authentication setup...\n"
                    },
                    {
                      "text": "No TEST_FIREBASE_TOKEN found, attempting sign-in flow...\n"
                    }
                  ],
                  "stderr": [
                    {
                      "text": "❌ Authentication setup failed: Error: Authentication failed: not redirected to authenticated page\n    at \u001b[90mfile:///Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mtests/auth.setup.ts:65:31\n    at \u001b[90mfile:///Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mtests/auth.setup.ts:61:17\n    at \u001b[90m/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/workerMain.js:309:9\n    at \u001b[90m/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/testInfo.js:326:11\n    at TimeoutManager.withRunnable \u001b[90m(/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/timeoutManager.js:67:14\u001b[90m)\u001b[39m\n    at TestInfoImpl._runWithTimeout \u001b[90m(/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/testInfo.js:324:7\u001b[90m)\u001b[39m\n    at \u001b[90m/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/workerMain.js:307:7\n    at WorkerMain._runTest \u001b[90m(/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/workerMain.js:282:5\u001b[90m)\u001b[39m\n    at WorkerMain.runTestGroup \u001b[90m(/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/worker/workerMain.js:194:11\u001b[90m)\u001b[39m\n    at process.<anonymous> \u001b[90m(/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/\u001b[39mnode_modules/\u001b[4mplaywright\u001b[24m/lib/common/process.js:65:22\u001b[90m)\u001b[39m\n"
                    },
                    {
                      "text": "⚠️  Created minimal auth state. Tests requiring authentication will likely fail.\n"
                    },
                    {
                      "text": "    To fix: Set TEST_FIREBASE_TOKEN environment variable\n"
                    }
                  ],
                  "retry": 0,
                  "startTime": "2025-10-08T05:39:38.705Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "17e3fe6f4d9d8bd79c6b-75a0657db6abc6631f47",
          "file": "auth.setup.ts",
          "line": 15,
          "column": 1
        },
        {
          "title": "verify auth state",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 289,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "✓ Auth state file verified\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-10-08T05:39:38.705Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "17e3fe6f4d9d8bd79c6b-1b9bad3e890e28ef7205",
          "file": "auth.setup.ts",
          "line": 109,
          "column": 1
        }
      ]
    },
    {
      "title": "api/auth-upload.test.ts",
      "file": "api/auth-upload.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication API",
          "file": "api/auth-upload.test.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "POST /api/auth/firebase-signin - should authenticate user",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 87,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:19:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                          "column": 35,
                          "line": 19
                        },
                        "snippet": "\u001b[0m \u001b[90m 17 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 20 |\u001b[39m\n \u001b[90m 21 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 22 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'token'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                            "column": 35,
                            "line": 19
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n\u001b[0m \u001b[90m 17 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 20 |\u001b[39m\n \u001b[90m 21 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 22 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'token'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:19:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.188Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                        "column": 35,
                        "line": 19
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-f2e39896d68007fbb632",
              "file": "api/auth-upload.test.ts",
              "line": 11,
              "column": 5
            },
            {
              "title": "POST /api/auth/firebase-verify - should verify token",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 87,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:34:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                          "column": 35,
                          "line": 34
                        },
                        "snippet": "\u001b[0m \u001b[90m 32 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 35 |\u001b[39m\n \u001b[90m 36 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'valid'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                            "column": 35,
                            "line": 34
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n\u001b[0m \u001b[90m 32 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 35 |\u001b[39m\n \u001b[90m 36 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'valid'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:34:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.181Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                        "column": 35,
                        "line": 34
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-5e98bfc254dcf99ba42d",
              "file": "api/auth-upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "GET /api/auth/me - should return current user",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 60,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.181Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-7effdb3c61a7ed06b243",
              "file": "api/auth-upload.test.ts",
              "line": 41,
              "column": 5
            },
            {
              "title": "POST /api/auth/firebase-signin - should reject invalid token",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 69,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:59:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                          "column": 35,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                            "column": 35,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n\u001b[0m \u001b[90m 57 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:59:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.196Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                        "column": 35,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-186f7de7f29926244ebf",
              "file": "api/auth-upload.test.ts",
              "line": 52,
              "column": 5
            },
            {
              "title": "GET /api/auth/me - should reject unauthenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 86,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.184Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-494cdba89298bb825dfe",
              "file": "api/auth-upload.test.ts",
              "line": 65,
              "column": 5
            }
          ]
        },
        {
          "title": "File Upload API",
          "file": "api/auth-upload.test.ts",
          "line": 76,
          "column": 6,
          "specs": [
            {
              "title": "POST /api/upload - should upload Excel file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.690Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-bf120dc1033b3176853b",
              "file": "api/auth-upload.test.ts",
              "line": 79,
              "column": 5
            },
            {
              "title": "POST /api/upload - should upload CSV file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 48,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.712Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-3029ae79604fd2063c89",
              "file": "api/auth-upload.test.ts",
              "line": 98,
              "column": 5
            },
            {
              "title": "POST /api/upload - should reject invalid file type",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 48,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.721Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-af7ae46ee6e74ee58b00",
              "file": "api/auth-upload.test.ts",
              "line": 112,
              "column": 5
            },
            {
              "title": "GET /api/files - should list uploaded files",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.713Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-859dc4c490cd1e0155b0",
              "file": "api/auth-upload.test.ts",
              "line": 130,
              "column": 5
            },
            {
              "title": "GET /api/files/:id - should get file details",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.300Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-85b63f3e2b6f403e0247",
              "file": "api/auth-upload.test.ts",
              "line": 145,
              "column": 5
            },
            {
              "title": "DELETE /api/files/:id - should delete file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-08T05:39:56.743Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-22ab3908e063d5d101d1",
              "file": "api/auth-upload.test.ts",
              "line": 169,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "api/comprehensive.test.ts",
      "file": "api/comprehensive.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "API Tests - Error Management Endpoints",
          "file": "api/comprehensive.test.ts",
          "line": 3,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "GET /api/errors",
              "file": "api/comprehensive.test.ts",
              "line": 4,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve all errors",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:8:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 8
                            },
                            "snippet": "\u001b[0m \u001b[90m  6 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m  7 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  9 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 10 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(errors))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 11 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 8
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m  6 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m  7 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  9 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 10 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(errors))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 11 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:8:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.205Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 8
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-826a0a8d0ee6ee82544b",
                  "file": "api/comprehensive.test.ts",
                  "line": 5,
                  "column": 9
                },
                {
                  "title": "should support pagination",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:16:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 16
                            },
                            "snippet": "\u001b[0m \u001b[90m 14 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 17 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 19 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 16
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 14 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 17 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 19 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:16:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.219Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 16
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7316ff5725f86e315da4",
                  "file": "api/comprehensive.test.ts",
                  "line": 13,
                  "column": 9
                },
                {
                  "title": "should filter by severity",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:28:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 28
                            },
                            "snippet": "\u001b[0m \u001b[90m 26 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?severity=critical'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 30 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 31 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mseverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'critical'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 28
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 26 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?severity=critical'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 30 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 31 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mseverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'critical'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:28:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.213Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 28
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b96418d2c2e853f322b6",
                  "file": "api/comprehensive.test.ts",
                  "line": 25,
                  "column": 9
                },
                {
                  "title": "should filter by error type",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:38:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 38
                            },
                            "snippet": "\u001b[0m \u001b[90m 36 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?errorType=Runtime'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 39 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 40 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 41 |\u001b[39m                 expect(error\u001b[33m.\u001b[39merrorType)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Runtime'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 38
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 36 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?errorType=Runtime'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 39 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 40 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 41 |\u001b[39m                 expect(error\u001b[33m.\u001b[39merrorType)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Runtime'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:38:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.223Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 38
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-af062dd572b081de7064",
                  "file": "api/comprehensive.test.ts",
                  "line": 35,
                  "column": 9
                },
                {
                  "title": "should filter by date range",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:53:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 53
                            },
                            "snippet": "\u001b[0m \u001b[90m 51 |\u001b[39m             )\u001b[33m;\u001b[39m\n \u001b[90m 52 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 54 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m         test(\u001b[32m'should search by message'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 53
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 51 |\u001b[39m             )\u001b[33m;\u001b[39m\n \u001b[90m 52 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 54 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m         test(\u001b[32m'should search by message'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:53:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.251Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 53
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d7ad9324f8f604f0cc2c",
                  "file": "api/comprehensive.test.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should search by message",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 18,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:59:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 59
                            },
                            "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?search=database'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 62 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m.\u001b[39mtoContain(\u001b[32m'database'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 59
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 57 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?search=database'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 62 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m.\u001b[39mtoContain(\u001b[32m'database'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:59:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.743Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 59
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b836803334a29ea3dd90",
                  "file": "api/comprehensive.test.ts",
                  "line": 56,
                  "column": 9
                },
                {
                  "title": "should filter by resolved status",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 17,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 39,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:69:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 69
                            },
                            "snippet": "\u001b[0m \u001b[90m 67 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?resolved=false'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 69 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 70 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 71 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 72 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mresolved)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 69
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 67 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?resolved=false'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 69 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 70 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 71 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 72 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mresolved)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:69:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.748Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 69
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-76498f2f5df5997dda49",
                  "file": "api/comprehensive.test.ts",
                  "line": 66,
                  "column": 9
                },
                {
                  "title": "should filter by store",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 19,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:79:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 79
                            },
                            "snippet": "\u001b[0m \u001b[90m 77 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?store=STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 78 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 80 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 81 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 82 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mstore)\u001b[33m.\u001b[39mtoBe(\u001b[32m'STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 79
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 77 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?store=STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 78 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 80 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 81 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 82 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mstore)\u001b[33m.\u001b[39mtoBe(\u001b[32m'STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:79:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.742Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-c22f3ed15be974d00c96",
                  "file": "api/comprehensive.test.ts",
                  "line": 76,
                  "column": 9
                },
                {
                  "title": "should support sorting",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 20,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:89:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 89
                            },
                            "snippet": "\u001b[0m \u001b[90m 87 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?sortBy=timestamp&order=desc'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 88 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 90 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m\n \u001b[90m 92 |\u001b[39m             \u001b[90m// Verify descending order\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 89
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 87 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?sortBy=timestamp&order=desc'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 88 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 90 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m\n \u001b[90m 92 |\u001b[39m             \u001b[90m// Verify descending order\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:89:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.740Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 89
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b81e04cb9f721a811318",
                  "file": "api/comprehensive.test.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should handle invalid query parameters gracefully",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:103:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 103
                            },
                            "snippet": "\u001b[0m \u001b[90m 101 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=-1&limit=1000'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 102 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 103
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 101 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=-1&limit=1000'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 102 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:103:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:57.744Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 103
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-2c3e3f50d42b17e463a3",
                  "file": "api/comprehensive.test.ts",
                  "line": 100,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/errors",
              "file": "api/comprehensive.test.ts",
              "line": 109,
              "column": 10,
              "specs": [
                {
                  "title": "should create new error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 22,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:124:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 124
                            },
                            "snippet": "\u001b[0m \u001b[90m 122 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 123 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 125 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 126 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'id'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m             expect(created\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(newError\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 124
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 122 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 123 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 125 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 126 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'id'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m             expect(created\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(newError\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:124:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.274Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 124
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-c8324f80276111afc881",
                  "file": "api/comprehensive.test.ts",
                  "line": 110,
                  "column": 9
                },
                {
                  "title": "should validate required fields",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 23,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:141:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 141
                            },
                            "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 141
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 139 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:141:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.290Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 141
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-89df631dbb7625d8e456",
                  "file": "api/comprehensive.test.ts",
                  "line": 131,
                  "column": 9
                },
                {
                  "title": "should validate severity values",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 24,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 50,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:157:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 157
                            },
                            "snippet": "\u001b[0m \u001b[90m 155 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 157 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 158 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m         test(\u001b[32m'should set default values for optional fields'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 155 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 157 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 158 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m         test(\u001b[32m'should set default values for optional fields'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:157:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.277Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-fae957e1836824a1e32b",
                  "file": "api/comprehensive.test.ts",
                  "line": 146,
                  "column": 9
                },
                {
                  "title": "should set default values for optional fields",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:171:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 171
                            },
                            "snippet": "\u001b[0m \u001b[90m 169 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 170 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 171 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 172 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 173 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'timestamp'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 174 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'resolved'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 171
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 169 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 170 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 171 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 172 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 173 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'timestamp'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 174 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'resolved'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:171:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.273Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 171
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-fba30f3c17b74acf2a22",
                  "file": "api/comprehensive.test.ts",
                  "line": 160,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/errors/:id",
              "file": "api/comprehensive.test.ts",
              "line": 179,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve specific error by ID",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 26,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:192:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 192
                            },
                            "snippet": "\u001b[0m \u001b[90m 190 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 191 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m             \u001b[90m// Retrieve the error\u001b[39m\n \u001b[90m 195 |\u001b[39m             \u001b[36mconst\u001b[39m getResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 192
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 190 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 191 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m             \u001b[90m// Retrieve the error\u001b[39m\n \u001b[90m 195 |\u001b[39m             \u001b[36mconst\u001b[39m getResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:192:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.273Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b9e8872c651ae76df63f",
                  "file": "api/comprehensive.test.ts",
                  "line": 180,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 27,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:205:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 205
                            },
                            "snippet": "\u001b[0m \u001b[90m 203 |\u001b[39m         test(\u001b[32m'should return 404 for non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 204 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 205 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 206 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 207 |\u001b[39m\n \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 205
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 203 |\u001b[39m         test(\u001b[32m'should return 404 for non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 204 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 205 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 206 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 207 |\u001b[39m\n \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:205:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.812Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 205
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-cd9d97644dabf433e986",
                  "file": "api/comprehensive.test.ts",
                  "line": 203,
                  "column": 9
                },
                {
                  "title": "should return 400 for invalid ID format",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 30,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:210:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 210
                            },
                            "snippet": "\u001b[0m \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 209 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/invalid-id'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 210 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 211 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 212 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 213 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 210
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 209 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/invalid-id'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 210 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 211 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 212 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 213 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:210:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.816Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-3cefa8e6f6950a4d91ff",
                  "file": "api/comprehensive.test.ts",
                  "line": 208,
                  "column": 9
                }
              ]
            },
            {
              "title": "PATCH /api/errors/:id",
              "file": "api/comprehensive.test.ts",
              "line": 214,
              "column": 10,
              "specs": [
                {
                  "title": "should update error fields",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 29,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:227:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 227
                            },
                            "snippet": "\u001b[0m \u001b[90m 225 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 226 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 227 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 228 |\u001b[39m\n \u001b[90m 229 |\u001b[39m             \u001b[90m// Update error\u001b[39m\n \u001b[90m 230 |\u001b[39m             \u001b[36mconst\u001b[39m updates \u001b[33m=\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 227
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 225 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 226 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 227 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 228 |\u001b[39m\n \u001b[90m 229 |\u001b[39m             \u001b[90m// Update error\u001b[39m\n \u001b[90m 230 |\u001b[39m             \u001b[36mconst\u001b[39m updates \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:227:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.819Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 227
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-601ed3220835338fb17b",
                  "file": "api/comprehensive.test.ts",
                  "line": 215,
                  "column": 9
                },
                {
                  "title": "should validate updated field values",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 28,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 50,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:253:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 253
                            },
                            "snippet": "\u001b[0m \u001b[90m 251 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 252 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 254 |\u001b[39m\n \u001b[90m 255 |\u001b[39m             \u001b[36mconst\u001b[39m invalidUpdate \u001b[33m=\u001b[39m {\n \u001b[90m 256 |\u001b[39m                 severity\u001b[33m:\u001b[39m \u001b[32m'invalid_value'\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 253
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 251 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 252 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 254 |\u001b[39m\n \u001b[90m 255 |\u001b[39m             \u001b[36mconst\u001b[39m invalidUpdate \u001b[33m=\u001b[39m {\n \u001b[90m 256 |\u001b[39m                 severity\u001b[33m:\u001b[39m \u001b[32m'invalid_value'\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:253:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.811Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 253
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7e6243b161f0fc99997b",
                  "file": "api/comprehensive.test.ts",
                  "line": 248,
                  "column": 9
                },
                {
                  "title": "should return 404 when updating non-existent error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 31,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:271:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 271
                            },
                            "snippet": "\u001b[0m \u001b[90m 269 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 270 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 271
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 269 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 270 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:271:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:58.814Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 271
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-065114ac3c547ee455d4",
                  "file": "api/comprehensive.test.ts",
                  "line": 266,
                  "column": 9
                }
              ]
            },
            {
              "title": "DELETE /api/errors/:id",
              "file": "api/comprehensive.test.ts",
              "line": 275,
              "column": 10,
              "specs": [
                {
                  "title": "should delete error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 32,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:288:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 288
                            },
                            "snippet": "\u001b[0m \u001b[90m 286 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 287 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 288 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 289 |\u001b[39m\n \u001b[90m 290 |\u001b[39m             \u001b[90m// Delete error\u001b[39m\n \u001b[90m 291 |\u001b[39m             \u001b[36mconst\u001b[39m deleteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 288
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 286 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 287 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 288 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 289 |\u001b[39m\n \u001b[90m 290 |\u001b[39m             \u001b[90m// Delete error\u001b[39m\n \u001b[90m 291 |\u001b[39m             \u001b[36mconst\u001b[39m deleteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:288:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.337Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 288
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-746cee052db933fa5c87",
                  "file": "api/comprehensive.test.ts",
                  "line": 276,
                  "column": 9
                },
                {
                  "title": "should return 404 when deleting non-existent error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 34,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:301:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 301
                            },
                            "snippet": "\u001b[0m \u001b[90m 299 |\u001b[39m         test(\u001b[32m'should return 404 when deleting non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 300 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 303 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 304 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 301
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 299 |\u001b[39m         test(\u001b[32m'should return 404 when deleting non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 300 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 303 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 304 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:301:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.351Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 301
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-328778905051f6724cce",
                  "file": "api/comprehensive.test.ts",
                  "line": 299,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/errors/bulk",
              "file": "api/comprehensive.test.ts",
              "line": 305,
              "column": 10,
              "specs": [
                {
                  "title": "should create multiple errors in bulk",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 33,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:317:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 317
                            },
                            "snippet": "\u001b[0m \u001b[90m 315 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 316 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 317 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 318 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 319 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'created'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 320 |\u001b[39m             expect(result\u001b[33m.\u001b[39mcreated)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 317
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 315 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 316 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 317 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 318 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 319 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'created'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 320 |\u001b[39m             expect(result\u001b[33m.\u001b[39mcreated)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:317:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.335Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 317
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-4628e2fd6444fb095756",
                  "file": "api/comprehensive.test.ts",
                  "line": 306,
                  "column": 9
                },
                {
                  "title": "should handle validation errors in bulk creation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 35,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:335:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 335
                            },
                            "snippet": "\u001b[0m \u001b[90m 333 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 334 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'invalidIndices'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 335
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 333 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 334 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'invalidIndices'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:335:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.336Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 335
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-56fc2bb8f533dcdd3c2a",
                  "file": "api/comprehensive.test.ts",
                  "line": 325,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/errors/stats",
              "file": "api/comprehensive.test.ts",
              "line": 341,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve error statistics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 36,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:345:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 345
                            },
                            "snippet": "\u001b[0m \u001b[90m 343 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/stats'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 344 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 345 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 346 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 347 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 348 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'bySeverity'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 345
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 343 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/stats'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 344 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 345 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 346 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 347 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 348 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'bySeverity'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:345:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.338Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 345
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-ba04c32485f700228dcb",
                  "file": "api/comprehensive.test.ts",
                  "line": 342,
                  "column": 9
                },
                {
                  "title": "should filter statistics by date range",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 39,
                          "parallelIndex": 1,
                          "status": "skipped",
                          "duration": 0,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.861Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-54ae76231542edb36fdb",
                  "file": "api/comprehensive.test.ts",
                  "line": 354,
                  "column": 9
                },
                {
                  "title": "should provide statistics by store",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 0,
                          "status": "skipped",
                          "duration": 0,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.864Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d716bfbf07c932e81dc7",
                  "file": "api/comprehensive.test.ts",
                  "line": 364,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/errors/export",
              "file": "api/comprehensive.test.ts",
              "line": 373,
              "column": 10,
              "specs": [
                {
                  "title": "should export errors as CSV",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 2,
                          "status": "skipped",
                          "duration": 0,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.859Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-904773b3ad9efcd58cea",
                  "file": "api/comprehensive.test.ts",
                  "line": 374,
                  "column": 9
                },
                {
                  "title": "should export errors as JSON",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 4,
                          "status": "skipped",
                          "duration": 0,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.863Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-17e6161d6ce96b2f14bd",
                  "file": "api/comprehensive.test.ts",
                  "line": 387,
                  "column": 9
                },
                {
                  "title": "should export errors as Excel",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 3,
                          "status": "skipped",
                          "duration": 0,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-08T05:39:59.856Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-41e940fabb361ca58f11",
                  "file": "api/comprehensive.test.ts",
                  "line": 400,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - Store & Kiosk Management",
          "file": "api/comprehensive.test.ts",
          "line": 415,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "GET /api/stores",
              "file": "api/comprehensive.test.ts",
              "line": 416,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve all stores",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-97e76cc571864610d341",
                  "file": "api/comprehensive.test.ts",
                  "line": 417,
                  "column": 9
                },
                {
                  "title": "should support pagination for stores",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-6eb8aefe6b1b15813a8c",
                  "file": "api/comprehensive.test.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should search stores by name",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-490fa9f59640f0cccaf2",
                  "file": "api/comprehensive.test.ts",
                  "line": 433,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/stores",
              "file": "api/comprehensive.test.ts",
              "line": 440,
              "column": 10,
              "specs": [
                {
                  "title": "should create new store",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-e9422782d1e7f3a5e30b",
                  "file": "api/comprehensive.test.ts",
                  "line": 441,
                  "column": 9
                },
                {
                  "title": "should prevent duplicate store numbers",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-3418153c81d4f9022e77",
                  "file": "api/comprehensive.test.ts",
                  "line": 458,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/kiosks",
              "file": "api/comprehensive.test.ts",
              "line": 475,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve all kiosks",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-ee94c2917b8301bfe09f",
                  "file": "api/comprehensive.test.ts",
                  "line": 476,
                  "column": 9
                },
                {
                  "title": "should filter kiosks by store",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-a8ec92cfe72414cc40ad",
                  "file": "api/comprehensive.test.ts",
                  "line": 484,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/kiosks",
              "file": "api/comprehensive.test.ts",
              "line": 495,
              "column": 10,
              "specs": [
                {
                  "title": "should create new kiosk",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-61a4176311800ec6f349",
                  "file": "api/comprehensive.test.ts",
                  "line": 496,
                  "column": 9
                },
                {
                  "title": "should validate kiosk belongs to valid store",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7703eb43687460c0b8f2",
                  "file": "api/comprehensive.test.ts",
                  "line": 512,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - ML Training Endpoints",
          "file": "api/comprehensive.test.ts",
          "line": 528,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/ml/train",
              "file": "api/comprehensive.test.ts",
              "line": 529,
              "column": 10,
              "specs": [
                {
                  "title": "should initiate ML training job",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-6fa65ce4f27e9ef5c75f",
                  "file": "api/comprehensive.test.ts",
                  "line": 530,
                  "column": 9
                },
                {
                  "title": "should validate training configuration",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-a6904a680738b50ca488",
                  "file": "api/comprehensive.test.ts",
                  "line": 549,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/ml/jobs/:jobId",
              "file": "api/comprehensive.test.ts",
              "line": 562,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve training job status",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-77ffc13add5120b669e7",
                  "file": "api/comprehensive.test.ts",
                  "line": 563,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/ml/predict",
              "file": "api/comprehensive.test.ts",
              "line": 588,
              "column": 10,
              "specs": [
                {
                  "title": "should make prediction with trained model",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-54ddf64bf14cf5f6e78b",
                  "file": "api/comprehensive.test.ts",
                  "line": 589,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/ml/models",
              "file": "api/comprehensive.test.ts",
              "line": 609,
              "column": 10,
              "specs": [
                {
                  "title": "should list all trained models",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-a59ec408e2746a1a1ab9",
                  "file": "api/comprehensive.test.ts",
                  "line": 610,
                  "column": 9
                },
                {
                  "title": "should filter models by status",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-fc881699e99686a65349",
                  "file": "api/comprehensive.test.ts",
                  "line": 618,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - AI Analysis Endpoints",
          "file": "api/comprehensive.test.ts",
          "line": 630,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/ai/analyze",
              "file": "api/comprehensive.test.ts",
              "line": 631,
              "column": 10,
              "specs": [
                {
                  "title": "should analyze error with AI",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-28174000bf428efd047b",
                  "file": "api/comprehensive.test.ts",
                  "line": 632,
                  "column": 9
                },
                {
                  "title": "should handle timeout for long-running analysis",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-41bd53d73fb851a76e47",
                  "file": "api/comprehensive.test.ts",
                  "line": 650,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/ai/suggest",
              "file": "api/comprehensive.test.ts",
              "line": 660,
              "column": 10,
              "specs": [
                {
                  "title": "should provide fix suggestions",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-daeceb24340d15d5c9e5",
                  "file": "api/comprehensive.test.ts",
                  "line": 661,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/ai/summarize",
              "file": "api/comprehensive.test.ts",
              "line": 679,
              "column": 10,
              "specs": [
                {
                  "title": "should summarize multiple errors",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-56fc1244ebc327416b60",
                  "file": "api/comprehensive.test.ts",
                  "line": 680,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - File Upload & Processing",
          "file": "api/comprehensive.test.ts",
          "line": 700,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/upload",
              "file": "api/comprehensive.test.ts",
              "line": 701,
              "column": 10,
              "specs": [
                {
                  "title": "should handle Excel file upload",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-90ae420cdaf98d878820",
                  "file": "api/comprehensive.test.ts",
                  "line": 702,
                  "column": 9
                },
                {
                  "title": "should reject files exceeding size limit",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-38a692cfd4c3a2e81d5e",
                  "file": "api/comprehensive.test.ts",
                  "line": 721,
                  "column": 9
                },
                {
                  "title": "should reject unsupported file types",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d570e7b2e3e123999a69",
                  "file": "api/comprehensive.test.ts",
                  "line": 737,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/uploads/:fileId",
              "file": "api/comprehensive.test.ts",
              "line": 754,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve upload status",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-14fb6c543c1e192b9f54",
                  "file": "api/comprehensive.test.ts",
                  "line": 755,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - Authentication & Authorization",
          "file": "api/comprehensive.test.ts",
          "line": 778,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/auth/firebase",
              "file": "api/comprehensive.test.ts",
              "line": 779,
              "column": 10,
              "specs": [
                {
                  "title": "should authenticate with valid Firebase token",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7d77b0ca93ac71aa3d6e",
                  "file": "api/comprehensive.test.ts",
                  "line": 780,
                  "column": 9
                },
                {
                  "title": "should reject invalid token",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d2cd385176120317cca6",
                  "file": "api/comprehensive.test.ts",
                  "line": 794,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/auth/logout",
              "file": "api/comprehensive.test.ts",
              "line": 805,
              "column": 10,
              "specs": [
                {
                  "title": "should logout user",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-6a589d83eb93f3ce0abe",
                  "file": "api/comprehensive.test.ts",
                  "line": 806,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/admin/users",
              "file": "api/comprehensive.test.ts",
              "line": 825,
              "column": 10,
              "specs": [
                {
                  "title": "should require admin role",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-14bd4738c54161693fbf",
                  "file": "api/comprehensive.test.ts",
                  "line": 826,
                  "column": 9
                },
                {
                  "title": "should allow access with admin token",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b246e1b1e50b55b90fca",
                  "file": "api/comprehensive.test.ts",
                  "line": 831,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - Request Validation",
          "file": "api/comprehensive.test.ts",
          "line": 851,
          "column": 6,
          "specs": [
            {
              "title": "should reject requests with invalid Content-Type",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-87886cd6877ccc4901ca",
              "file": "api/comprehensive.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "should validate JSON syntax",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-97983da446fb9a387e6d",
              "file": "api/comprehensive.test.ts",
              "line": 863,
              "column": 5
            },
            {
              "title": "should enforce maximum payload size",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-a0b91dc78fafcff9b4cf",
              "file": "api/comprehensive.test.ts",
              "line": 874,
              "column": 5
            },
            {
              "title": "should validate required headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-832c6f0693991b5ca29f",
              "file": "api/comprehensive.test.ts",
              "line": 888,
              "column": 5
            },
            {
              "title": "should handle missing request body",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-eef4fd0777cdc774340d",
              "file": "api/comprehensive.test.ts",
              "line": 899,
              "column": 5
            },
            {
              "title": "should validate URL parameter formats",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-86b1e09fcf6a2af879c4",
              "file": "api/comprehensive.test.ts",
              "line": 905,
              "column": 5
            },
            {
              "title": "should handle special characters in query params",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-88377a78622cbcae7c04",
              "file": "api/comprehensive.test.ts",
              "line": 911,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Response Format Validation",
          "file": "api/comprehensive.test.ts",
          "line": 921,
          "column": 6,
          "specs": [
            {
              "title": "should return proper Content-Type headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-59603b3260790d73258a",
              "file": "api/comprehensive.test.ts",
              "line": 922,
              "column": 5
            },
            {
              "title": "should include CORS headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-8ff55776b6ac186886cf",
              "file": "api/comprehensive.test.ts",
              "line": 929,
              "column": 5
            },
            {
              "title": "should return consistent error response format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-aa8178300c67933a5590",
              "file": "api/comprehensive.test.ts",
              "line": 940,
              "column": 5
            },
            {
              "title": "should include pagination metadata",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-c9ccf610c22cccca4447",
              "file": "api/comprehensive.test.ts",
              "line": 950,
              "column": 5
            },
            {
              "title": "should return timestamps in ISO format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-670662d45c6fc4c92a3e",
              "file": "api/comprehensive.test.ts",
              "line": 962,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Error Handling",
          "file": "api/comprehensive.test.ts",
          "line": 975,
          "column": 6,
          "specs": [
            {
              "title": "should handle database connection errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-9181693c77af507882e0",
              "file": "api/comprehensive.test.ts",
              "line": 976,
              "column": 5
            },
            {
              "title": "should return 404 for non-existent routes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7e9416be6950b97f8b5f",
              "file": "api/comprehensive.test.ts",
              "line": 984,
              "column": 5
            },
            {
              "title": "should handle malformed route parameters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-0c9ec01c29ac23f6280c",
              "file": "api/comprehensive.test.ts",
              "line": 990,
              "column": 5
            },
            {
              "title": "should provide helpful error messages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-252713f1dae0a64c2e7f",
              "file": "api/comprehensive.test.ts",
              "line": 996,
              "column": 5
            },
            {
              "title": "should handle concurrent request failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-8eb051f301e6d86ccbc8",
              "file": "api/comprehensive.test.ts",
              "line": 1008,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Rate Limiting",
          "file": "api/comprehensive.test.ts",
          "line": 1021,
          "column": 6,
          "specs": [
            {
              "title": "should implement rate limiting",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-9fcd7edcc5bc76598c34",
              "file": "api/comprehensive.test.ts",
              "line": 1022,
              "column": 5
            },
            {
              "title": "should include rate limit headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-60365289d668dea550e7",
              "file": "api/comprehensive.test.ts",
              "line": 1036,
              "column": 5
            },
            {
              "title": "should reset rate limits after time window",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-ba14ad5859432639ba45",
              "file": "api/comprehensive.test.ts",
              "line": 1052,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Pagination Edge Cases",
          "file": "api/comprehensive.test.ts",
          "line": 1069,
          "column": 6,
          "specs": [
            {
              "title": "should handle page=0",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-e85b0025904c14a70225",
              "file": "api/comprehensive.test.ts",
              "line": 1070,
              "column": 5
            },
            {
              "title": "should handle negative page numbers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-9cfa0fb61e5cfeb981aa",
              "file": "api/comprehensive.test.ts",
              "line": 1077,
              "column": 5
            },
            {
              "title": "should handle excessive page numbers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-fedda9b198e9d95b5093",
              "file": "api/comprehensive.test.ts",
              "line": 1083,
              "column": 5
            },
            {
              "title": "should handle limit=0",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-a1c17a897e556c9aecb9",
              "file": "api/comprehensive.test.ts",
              "line": 1093,
              "column": 5
            },
            {
              "title": "should enforce maximum limit",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7807fc8ce4576e4320c8",
              "file": "api/comprehensive.test.ts",
              "line": 1099,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Concurrent Operations",
          "file": "api/comprehensive.test.ts",
          "line": 1112,
          "column": 6,
          "specs": [
            {
              "title": "should handle concurrent reads safely",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-a5f181f18f3fc6dac50f",
              "file": "api/comprehensive.test.ts",
              "line": 1113,
              "column": 5
            },
            {
              "title": "should handle concurrent writes with proper isolation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-ad28bb8a9d4320e5ee9c",
              "file": "api/comprehensive.test.ts",
              "line": 1124,
              "column": 5
            },
            {
              "title": "should prevent race conditions on updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7181ac850876c919c176",
              "file": "api/comprehensive.test.ts",
              "line": 1141,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Cache Control",
          "file": "api/comprehensive.test.ts",
          "line": 1173,
          "column": 6,
          "specs": [
            {
              "title": "should include appropriate cache headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-80992be8c6de070356dd",
              "file": "api/comprehensive.test.ts",
              "line": 1174,
              "column": 5
            },
            {
              "title": "should respect If-None-Match for conditional requests",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7cbdb679074689c0dba7",
              "file": "api/comprehensive.test.ts",
              "line": 1185,
              "column": 5
            },
            {
              "title": "should support If-Modified-Since",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-c4783e112f89d2f6d7c9",
              "file": "api/comprehensive.test.ts",
              "line": 1200,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "unit/utilities.test.ts",
      "file": "unit/utilities.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Unit Tests - Utilities",
          "file": "unit/utilities.test.ts",
          "line": 4,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "cn() - Class Name Utility",
              "file": "unit/utilities.test.ts",
              "line": 5,
              "column": 10,
              "specs": [
                {
                  "title": "should merge class names",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-d2364adc91d1bc657a34",
                  "file": "unit/utilities.test.ts",
                  "line": 6,
                  "column": 9
                },
                {
                  "title": "should handle conditional classes",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-3fb710806b163c4ab796",
                  "file": "unit/utilities.test.ts",
                  "line": 12,
                  "column": 9
                },
                {
                  "title": "should handle undefined and null values",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-808d155c3d78500d3ebe",
                  "file": "unit/utilities.test.ts",
                  "line": 19,
                  "column": 9
                },
                {
                  "title": "should merge tailwind classes correctly",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-e2458050eb5c7543b19e",
                  "file": "unit/utilities.test.ts",
                  "line": 25,
                  "column": 9
                }
              ]
            },
            {
              "title": "buildApiUrl() - API URL Builder",
              "file": "unit/utilities.test.ts",
              "line": 32,
              "column": 10,
              "specs": [
                {
                  "title": "should build API URL with path",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-f38ed53de1e7bdde3361",
                  "file": "unit/utilities.test.ts",
                  "line": 33,
                  "column": 9
                },
                {
                  "title": "should handle paths without leading slash",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-7ffb0d3eb97b144bf2d1",
                  "file": "unit/utilities.test.ts",
                  "line": 44,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "Unit Tests - Error Handling",
          "file": "unit/utilities.test.ts",
          "line": 57,
          "column": 6,
          "specs": [
            {
              "title": "should validate error log structure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-1cc88fefaafb7648de70",
              "file": "unit/utilities.test.ts",
              "line": 58,
              "column": 5
            },
            {
              "title": "should validate severity levels",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-8a80b5a178cf5c6a7256",
              "file": "unit/utilities.test.ts",
              "line": 75,
              "column": 5
            },
            {
              "title": "should validate error types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-c9f91a17c7c37747acd2",
              "file": "unit/utilities.test.ts",
              "line": 83,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Data Validation",
          "file": "unit/utilities.test.ts",
          "line": 92,
          "column": 6,
          "specs": [
            {
              "title": "should validate file upload constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-a38cdfc8325c600dc594",
              "file": "unit/utilities.test.ts",
              "line": 93,
              "column": 5
            },
            {
              "title": "should validate store/kiosk number format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-546f5817792252012266",
              "file": "unit/utilities.test.ts",
              "line": 103,
              "column": 5
            },
            {
              "title": "should validate pagination parameters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-15d4ca2cfb3cf68c64f6",
              "file": "unit/utilities.test.ts",
              "line": 112,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Date/Time Utilities",
          "file": "unit/utilities.test.ts",
          "line": 122,
          "column": 6,
          "specs": [
            {
              "title": "should format dates correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-044002bc1658d95c6b26",
              "file": "unit/utilities.test.ts",
              "line": 123,
              "column": 5
            },
            {
              "title": "should calculate time differences",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-e94cb2fd43e75e6c1339",
              "file": "unit/utilities.test.ts",
              "line": 131,
              "column": 5
            },
            {
              "title": "should validate timestamp ranges",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-c7a6e8a81afafeefe2e2",
              "file": "unit/utilities.test.ts",
              "line": 141,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Filter Logic",
          "file": "unit/utilities.test.ts",
          "line": 151,
          "column": 6,
          "specs": [
            {
              "title": "should filter by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-f1d1dce78e63726142db",
              "file": "unit/utilities.test.ts",
              "line": 152,
              "column": 5
            },
            {
              "title": "should filter by multiple criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-8fb7ee669b8da272463a",
              "file": "unit/utilities.test.ts",
              "line": 164,
              "column": 5
            },
            {
              "title": "should handle empty filter results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-3726fc440f2c0797b224",
              "file": "unit/utilities.test.ts",
              "line": 178,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Search Functionality",
          "file": "unit/utilities.test.ts",
          "line": 188,
          "column": 6,
          "specs": [
            {
              "title": "should search by message content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-077db0c561f1cfc08d67",
              "file": "unit/utilities.test.ts",
              "line": 189,
              "column": 5
            },
            {
              "title": "should be case-insensitive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-11ff6b8dbac62f6aeb59",
              "file": "unit/utilities.test.ts",
              "line": 204,
              "column": 5
            },
            {
              "title": "should handle special characters in search",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-481e6d6865c87d1fcf09",
              "file": "unit/utilities.test.ts",
              "line": 217,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Sorting Logic",
          "file": "unit/utilities.test.ts",
          "line": 229,
          "column": 6,
          "specs": [
            {
              "title": "should sort by timestamp descending",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-a70a6fd638699bd6db5b",
              "file": "unit/utilities.test.ts",
              "line": 230,
              "column": 5
            },
            {
              "title": "should sort by severity priority",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-bbad336dd47590b5bbf9",
              "file": "unit/utilities.test.ts",
              "line": 245,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Export Functionality",
          "file": "unit/utilities.test.ts",
          "line": 263,
          "column": 6,
          "specs": [
            {
              "title": "should format data for CSV export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-a02684fc58a7fe05064b",
              "file": "unit/utilities.test.ts",
              "line": 264,
              "column": 5
            },
            {
              "title": "should escape special characters for CSV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-fe127203a2f9f2bf0e16",
              "file": "unit/utilities.test.ts",
              "line": 278,
              "column": 5
            },
            {
              "title": "should handle null values in CSV export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-048fb9e33fee705786ca",
              "file": "unit/utilities.test.ts",
              "line": 285,
              "column": 5
            },
            {
              "title": "should format timestamps for export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-8e970103f6fa2f79c454",
              "file": "unit/utilities.test.ts",
              "line": 296,
              "column": 5
            },
            {
              "title": "should handle large datasets for export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-1730f06a2a191075ec6c",
              "file": "unit/utilities.test.ts",
              "line": 304,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - URL and Path Utilities",
          "file": "unit/utilities.test.ts",
          "line": 317,
          "column": 6,
          "specs": [
            {
              "title": "should validate URL format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-71b83db0f5fa755fc8fd",
              "file": "unit/utilities.test.ts",
              "line": 318,
              "column": 5
            },
            {
              "title": "should extract query parameters from URL",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-168279c6dc4c32835004",
              "file": "unit/utilities.test.ts",
              "line": 330,
              "column": 5
            },
            {
              "title": "should build URLs with query parameters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-113348991b7f958ed707",
              "file": "unit/utilities.test.ts",
              "line": 339,
              "column": 5
            },
            {
              "title": "should handle URL encoding",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-e255575fc7e935fea25e",
              "file": "unit/utilities.test.ts",
              "line": 350,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Math and Statistics",
          "file": "unit/utilities.test.ts",
          "line": 360,
          "column": 6,
          "specs": [
            {
              "title": "should calculate average severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-ef2b8ed1d12dd83e9e79",
              "file": "unit/utilities.test.ts",
              "line": 361,
              "column": 5
            },
            {
              "title": "should calculate percentage distribution",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-73b5f3c1153614332e5a",
              "file": "unit/utilities.test.ts",
              "line": 376,
              "column": 5
            },
            {
              "title": "should calculate error rate trends",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-8088eef8b05d4bb50b76",
              "file": "unit/utilities.test.ts",
              "line": 391,
              "column": 5
            },
            {
              "title": "should identify outliers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-54c6b586e80095cf9799",
              "file": "unit/utilities.test.ts",
              "line": 403,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - String Utilities",
          "file": "unit/utilities.test.ts",
          "line": 415,
          "column": 6,
          "specs": [
            {
              "title": "should truncate long messages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-f0f7162beeb794a851b9",
              "file": "unit/utilities.test.ts",
              "line": 416,
              "column": 5
            },
            {
              "title": "should sanitize HTML in error messages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-598f444eac896f73f9c0",
              "file": "unit/utilities.test.ts",
              "line": 424,
              "column": 5
            },
            {
              "title": "should format error codes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-8b5a3dbd6838e5daf765",
              "file": "unit/utilities.test.ts",
              "line": 433,
              "column": 5
            },
            {
              "title": "should convert camelCase to readable format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-61b9be4ba2f8807f0f4b",
              "file": "unit/utilities.test.ts",
              "line": 443,
              "column": 5
            },
            {
              "title": "should highlight search terms",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-6020a6f35fc1bf189e24",
              "file": "unit/utilities.test.ts",
              "line": 452,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Array Utilities",
          "file": "unit/utilities.test.ts",
          "line": 464,
          "column": 6,
          "specs": [
            {
              "title": "should remove duplicates from array",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-ff8ed409773675d52e7a",
              "file": "unit/utilities.test.ts",
              "line": 465,
              "column": 5
            },
            {
              "title": "should group errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-5cc3b839195af9316a25",
              "file": "unit/utilities.test.ts",
              "line": 479,
              "column": 5
            },
            {
              "title": "should chunk array into batches",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-2ad152623db632faa1d4",
              "file": "unit/utilities.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "should find intersection of arrays",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-706b85ad6458260d6591",
              "file": "unit/utilities.test.ts",
              "line": 510,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Validation Rules",
          "file": "unit/utilities.test.ts",
          "line": 519,
          "column": 6,
          "specs": [
            {
              "title": "should validate email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-bd358f5e91041727601d",
              "file": "unit/utilities.test.ts",
              "line": 520,
              "column": 5
            },
            {
              "title": "should validate phone numbers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-0d4980ce6d6248a334e6",
              "file": "unit/utilities.test.ts",
              "line": 529,
              "column": 5
            },
            {
              "title": "should validate IP addresses",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-9edd42af98e785514eb7",
              "file": "unit/utilities.test.ts",
              "line": 537,
              "column": 5
            },
            {
              "title": "should validate numeric ranges",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "98ca3563efbcced499b4-bc18f908c861e932631d",
              "file": "unit/utilities.test.ts",
              "line": 545,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "integration/services.test.ts",
      "file": "integration/services.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Integration Tests - Services",
          "file": "integration/services.test.ts",
          "line": 3,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "ML Service Integration",
              "file": "integration/services.test.ts",
              "line": 4,
              "column": 10,
              "specs": [
                {
                  "title": "should train model with valid data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-dc72943eff7c433ba9b1",
                  "file": "integration/services.test.ts",
                  "line": 5,
                  "column": 9
                },
                {
                  "title": "should make predictions with trained model",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-2280da48febaaef80610",
                  "file": "integration/services.test.ts",
                  "line": 25,
                  "column": 9
                },
                {
                  "title": "should handle invalid training data",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-9945e8c1b1d116fc3439",
                  "file": "integration/services.test.ts",
                  "line": 42,
                  "column": 9
                }
              ]
            },
            {
              "title": "AI Service Integration",
              "file": "integration/services.test.ts",
              "line": 58,
              "column": 10,
              "specs": [
                {
                  "title": "should analyze error with AI",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-e386a3497210ea929405",
                  "file": "integration/services.test.ts",
                  "line": 59,
                  "column": 9
                },
                {
                  "title": "should generate error summary",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-712c53325d39405c5235",
                  "file": "integration/services.test.ts",
                  "line": 77,
                  "column": 9
                },
                {
                  "title": "should suggest fixes for error",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-b8698ca93158a212ad68",
                  "file": "integration/services.test.ts",
                  "line": 93,
                  "column": 9
                }
              ]
            },
            {
              "title": "Database Service Integration",
              "file": "integration/services.test.ts",
              "line": 110,
              "column": 10,
              "specs": [
                {
                  "title": "should create and retrieve error",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-ec40ef120e5a8e29f7fd",
                  "file": "integration/services.test.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should update error status",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-4731b6fc543543c4bf7c",
                  "file": "integration/services.test.ts",
                  "line": 138,
                  "column": 9
                },
                {
                  "title": "should delete error",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-6e145e48a14b1f2ff836",
                  "file": "integration/services.test.ts",
                  "line": 165,
                  "column": 9
                },
                {
                  "title": "should handle concurrent database operations",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-1fbd87d124bf1361af34",
                  "file": "integration/services.test.ts",
                  "line": 187,
                  "column": 9
                }
              ]
            },
            {
              "title": "Auth Service Integration",
              "file": "integration/services.test.ts",
              "line": 204,
              "column": 10,
              "specs": [
                {
                  "title": "should authenticate user and create session",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-95d6aaf6e2701208c0c6",
                  "file": "integration/services.test.ts",
                  "line": 205,
                  "column": 9
                },
                {
                  "title": "should reject invalid authentication",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-8baf4b0cc99700632a16",
                  "file": "integration/services.test.ts",
                  "line": 218,
                  "column": 9
                },
                {
                  "title": "should verify admin permissions",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-7ece331a9216775bc772",
                  "file": "integration/services.test.ts",
                  "line": 228,
                  "column": 9
                }
              ]
            },
            {
              "title": "File Upload Integration",
              "file": "integration/services.test.ts",
              "line": 250,
              "column": 10,
              "specs": [
                {
                  "title": "should upload Excel file and process errors",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-489ed4802eabbce29134",
                  "file": "integration/services.test.ts",
                  "line": 251,
                  "column": 9
                },
                {
                  "title": "should upload and analyze log file",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [],
                      "status": "skipped"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-c2cf7ffb524523a0ff30",
                  "file": "integration/services.test.ts",
                  "line": 273,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "Integration Tests - Service Interactions",
          "file": "integration/services.test.ts",
          "line": 299,
          "column": 6,
          "specs": [
            {
              "title": "should chain AI analysis with ML prediction",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-aca80c91c5194d5c65a8",
              "file": "integration/services.test.ts",
              "line": 300,
              "column": 5
            },
            {
              "title": "should upload file and trigger AI analysis",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-3a56ce0e419d3503ed8c",
              "file": "integration/services.test.ts",
              "line": 326,
              "column": 5
            },
            {
              "title": "should process error through complete pipeline",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-b61e7c8ca8bc870fe17d",
              "file": "integration/services.test.ts",
              "line": 353,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Data Consistency",
          "file": "integration/services.test.ts",
          "line": 388,
          "column": 6,
          "specs": [
            {
              "title": "should maintain consistency across store updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-f15772e897fd1f3e9aa9",
              "file": "integration/services.test.ts",
              "line": 389,
              "column": 5
            },
            {
              "title": "should handle transaction rollback on failure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-c7d5129d7b852d05bf89",
              "file": "integration/services.test.ts",
              "line": 421,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Caching and Performance",
          "file": "integration/services.test.ts",
          "line": 450,
          "column": 6,
          "specs": [
            {
              "title": "should cache frequent queries",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-ac93aa1ca1aef6f3c67c",
              "file": "integration/services.test.ts",
              "line": 451,
              "column": 5
            },
            {
              "title": "should handle rate limiting gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-2ec348f0da4fc4624371",
              "file": "integration/services.test.ts",
              "line": 469,
              "column": 5
            },
            {
              "title": "should implement query result pagination efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-9b77c6f119ab584fad50",
              "file": "integration/services.test.ts",
              "line": 481,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Error Recovery",
          "file": "integration/services.test.ts",
          "line": 498,
          "column": 6,
          "specs": [
            {
              "title": "should recover from temporary database errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-756614af99a1d835cc41",
              "file": "integration/services.test.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "should handle circuit breaker pattern",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-b0ec4ac654b504c9e662",
              "file": "integration/services.test.ts",
              "line": 521,
              "column": 5
            },
            {
              "title": "should implement graceful degradation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-a10929f926b60f0aacd6",
              "file": "integration/services.test.ts",
              "line": 536,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Security",
          "file": "integration/services.test.ts",
          "line": 548,
          "column": 6,
          "specs": [
            {
              "title": "should validate authentication tokens",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-77a4e7c6f98578e1d53f",
              "file": "integration/services.test.ts",
              "line": 549,
              "column": 5
            },
            {
              "title": "should prevent SQL injection in queries",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-e4c60378799fd856b106",
              "file": "integration/services.test.ts",
              "line": 555,
              "column": 5
            },
            {
              "title": "should sanitize user input",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-972d2811f58579bf9006",
              "file": "integration/services.test.ts",
              "line": 563,
              "column": 5
            },
            {
              "title": "should enforce CORS policies",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-923e10d707ea5ae87b1b",
              "file": "integration/services.test.ts",
              "line": 580,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Data Validation",
          "file": "integration/services.test.ts",
          "line": 593,
          "column": 6,
          "specs": [
            {
              "title": "should validate required fields on creation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-d51fe3e384c20d376b9c",
              "file": "integration/services.test.ts",
              "line": 594,
              "column": 5
            },
            {
              "title": "should validate data types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-c46804a844d9785ed68e",
              "file": "integration/services.test.ts",
              "line": 607,
              "column": 5
            },
            {
              "title": "should validate enum values",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-58c42c75882542623954",
              "file": "integration/services.test.ts",
              "line": 622,
              "column": 5
            },
            {
              "title": "should enforce maximum string lengths",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-a3870149dc1d63e2c958",
              "file": "integration/services.test.ts",
              "line": 636,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Webhooks and Notifications",
          "file": "integration/services.test.ts",
          "line": 651,
          "column": 6,
          "specs": [
            {
              "title": "should trigger webhook on critical error",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-9380d5e8e93a72e0b8f9",
              "file": "integration/services.test.ts",
              "line": 652,
              "column": 5
            },
            {
              "title": "should send notifications for escalated errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-7504dc04a3d22225ee3b",
              "file": "integration/services.test.ts",
              "line": 668,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Batch Operations",
          "file": "integration/services.test.ts",
          "line": 692,
          "column": 6,
          "specs": [
            {
              "title": "should process batch updates efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-b14615f6cc3078d51fd2",
              "file": "integration/services.test.ts",
              "line": 693,
              "column": 5
            },
            {
              "title": "should handle batch deletion atomically",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-74424d86bc4353090a06",
              "file": "integration/services.test.ts",
              "line": 711,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Real-time Updates",
          "file": "integration/services.test.ts",
          "line": 735,
          "column": 6,
          "specs": [
            {
              "title": "should support server-sent events for real-time updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-cfd2813aecf608052577",
              "file": "integration/services.test.ts",
              "line": 736,
              "column": 5
            },
            {
              "title": "should broadcast changes to connected clients",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-96219e6b8dda80cd15d0",
              "file": "integration/services.test.ts",
              "line": 747,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/auth.test.ts",
      "file": "e2e/auth.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication",
          "file": "e2e/auth.test.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "should display login page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-b3632ded91a045b11c71",
              "file": "e2e/auth.test.ts",
              "line": 13,
              "column": 5
            },
            {
              "title": "should login with Google successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-c9eda9c82b7415788cbd",
              "file": "e2e/auth.test.ts",
              "line": 19,
              "column": 5
            },
            {
              "title": "should display user profile after login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-1f75ccd1ca1ddf8e1733",
              "file": "e2e/auth.test.ts",
              "line": 31,
              "column": 5
            },
            {
              "title": "should logout successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-8a890991481bd1ef7f22",
              "file": "e2e/auth.test.ts",
              "line": 37,
              "column": 5
            },
            {
              "title": "should persist session on page reload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-6264dc899dda68fedc22",
              "file": "e2e/auth.test.ts",
              "line": 47,
              "column": 5
            },
            {
              "title": "should handle authentication errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-3a94c8563e0ac413097a",
              "file": "e2e/auth.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should display login page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-fbab00aee6c2fe55223f",
              "file": "e2e/auth.test.ts",
              "line": 13,
              "column": 5
            },
            {
              "title": "should login with Google successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-9fb2389a1599ad1e6d95",
              "file": "e2e/auth.test.ts",
              "line": 19,
              "column": 5
            },
            {
              "title": "should display user profile after login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-3b3cef84cc9139f29794",
              "file": "e2e/auth.test.ts",
              "line": 31,
              "column": 5
            },
            {
              "title": "should logout successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-ec1d3620870656bf0dff",
              "file": "e2e/auth.test.ts",
              "line": 37,
              "column": 5
            },
            {
              "title": "should persist session on page reload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-f0a01e6e80c30078ac91",
              "file": "e2e/auth.test.ts",
              "line": 47,
              "column": 5
            },
            {
              "title": "should handle authentication errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-01d5d8e246cc3ea9c739",
              "file": "e2e/auth.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should display login page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-914144f47cfab197a478",
              "file": "e2e/auth.test.ts",
              "line": 13,
              "column": 5
            },
            {
              "title": "should login with Google successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-07135b151cf02c22bb8c",
              "file": "e2e/auth.test.ts",
              "line": 19,
              "column": 5
            },
            {
              "title": "should display user profile after login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-d6482ecb3f795c282670",
              "file": "e2e/auth.test.ts",
              "line": 31,
              "column": 5
            },
            {
              "title": "should logout successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-4ff1be09d627874834e7",
              "file": "e2e/auth.test.ts",
              "line": 37,
              "column": 5
            },
            {
              "title": "should persist session on page reload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-c5274c7c262c5c396543",
              "file": "e2e/auth.test.ts",
              "line": 47,
              "column": 5
            },
            {
              "title": "should handle authentication errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "71e7721549f39968c810-5230df695778a29b7870",
              "file": "e2e/auth.test.ts",
              "line": 55,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/dashboard.test.ts",
      "file": "e2e/dashboard.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Error Dashboard",
          "file": "e2e/dashboard.test.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "should display dashboard with error statistics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-66eac2686fc5e85e3da0",
              "file": "e2e/dashboard.test.ts",
              "line": 15,
              "column": 5
            },
            {
              "title": "should display error severity breakdown",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-7f694d232305a353b8f8",
              "file": "e2e/dashboard.test.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should filter errors by store",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-d1502376fd3242b17d83",
              "file": "e2e/dashboard.test.ts",
              "line": 29,
              "column": 5
            },
            {
              "title": "should filter errors by kiosk",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-2b61c3d196674cbceeb8",
              "file": "e2e/dashboard.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should filter errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-aeb5cf3cb8f28e8e6337",
              "file": "e2e/dashboard.test.ts",
              "line": 57,
              "column": 5
            },
            {
              "title": "should filter errors by date range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-f40b4b14884b63a22d49",
              "file": "e2e/dashboard.test.ts",
              "line": 67,
              "column": 5
            },
            {
              "title": "should apply multiple filters together",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-60a309c0af3464cf3303",
              "file": "e2e/dashboard.test.ts",
              "line": 82,
              "column": 5
            },
            {
              "title": "should clear all filters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-c5ae0043822bd0c6579f",
              "file": "e2e/dashboard.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should search errors by keyword",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-3635bc9f8236fe5dab2e",
              "file": "e2e/dashboard.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "should paginate through error results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-e7a01f6f241068b30a71",
              "file": "e2e/dashboard.test.ts",
              "line": 127,
              "column": 5
            },
            {
              "title": "should change items per page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-d1cf5d79fc5bc6468ca5",
              "file": "e2e/dashboard.test.ts",
              "line": 139,
              "column": 5
            },
            {
              "title": "should sort errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-ed032b10ddb4df52d2ff",
              "file": "e2e/dashboard.test.ts",
              "line": 149,
              "column": 5
            },
            {
              "title": "should sort errors by date",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-6d11f8392618a9db72a3",
              "file": "e2e/dashboard.test.ts",
              "line": 162,
              "column": 5
            },
            {
              "title": "should export errors to CSV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-7cb5deb57a5edacb9226",
              "file": "e2e/dashboard.test.ts",
              "line": 175,
              "column": 5
            },
            {
              "title": "should export errors to Excel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-9c0c8f14683cca852a3b",
              "file": "e2e/dashboard.test.ts",
              "line": 184,
              "column": 5
            },
            {
              "title": "should display error details on click",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-483a6641a5fb53a00432",
              "file": "e2e/dashboard.test.ts",
              "line": 193,
              "column": 5
            },
            {
              "title": "should mark error as resolved",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-c7c747bab05e66bb6f45",
              "file": "e2e/dashboard.test.ts",
              "line": 201,
              "column": 5
            },
            {
              "title": "should display real-time updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-119f813a93fd88814596",
              "file": "e2e/dashboard.test.ts",
              "line": 210,
              "column": 5
            },
            {
              "title": "should display dashboard with error statistics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-d7528c41692a9406c43b",
              "file": "e2e/dashboard.test.ts",
              "line": 15,
              "column": 5
            },
            {
              "title": "should display error severity breakdown",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-e48c8538daeb8f3f05a2",
              "file": "e2e/dashboard.test.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should filter errors by store",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-080dab5b29251a19e448",
              "file": "e2e/dashboard.test.ts",
              "line": 29,
              "column": 5
            },
            {
              "title": "should filter errors by kiosk",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-74178756d0ac4c1cce9e",
              "file": "e2e/dashboard.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should filter errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-971713bc4d82b3a3f47e",
              "file": "e2e/dashboard.test.ts",
              "line": 57,
              "column": 5
            },
            {
              "title": "should filter errors by date range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-26bd456f6924c96be42e",
              "file": "e2e/dashboard.test.ts",
              "line": 67,
              "column": 5
            },
            {
              "title": "should apply multiple filters together",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-89f18dc23e99d686f51b",
              "file": "e2e/dashboard.test.ts",
              "line": 82,
              "column": 5
            },
            {
              "title": "should clear all filters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-90065f20829912e1368c",
              "file": "e2e/dashboard.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should search errors by keyword",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-d254ac191427a41a809c",
              "file": "e2e/dashboard.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "should paginate through error results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-6521777c5a08222b1c2a",
              "file": "e2e/dashboard.test.ts",
              "line": 127,
              "column": 5
            },
            {
              "title": "should change items per page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-5e14b5e65932aceb439c",
              "file": "e2e/dashboard.test.ts",
              "line": 139,
              "column": 5
            },
            {
              "title": "should sort errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-fead4c44f86f292b8552",
              "file": "e2e/dashboard.test.ts",
              "line": 149,
              "column": 5
            },
            {
              "title": "should sort errors by date",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-0d3d3686d739149d20ea",
              "file": "e2e/dashboard.test.ts",
              "line": 162,
              "column": 5
            },
            {
              "title": "should export errors to CSV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-ff76b8e5bf34af971baf",
              "file": "e2e/dashboard.test.ts",
              "line": 175,
              "column": 5
            },
            {
              "title": "should export errors to Excel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-b67b1244be0258591c41",
              "file": "e2e/dashboard.test.ts",
              "line": 184,
              "column": 5
            },
            {
              "title": "should display error details on click",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-8e2478f7d883efee1e6f",
              "file": "e2e/dashboard.test.ts",
              "line": 193,
              "column": 5
            },
            {
              "title": "should mark error as resolved",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-14a7efe71003112f3c01",
              "file": "e2e/dashboard.test.ts",
              "line": 201,
              "column": 5
            },
            {
              "title": "should display real-time updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-6e96424f8cb789e98cf2",
              "file": "e2e/dashboard.test.ts",
              "line": 210,
              "column": 5
            },
            {
              "title": "should display dashboard with error statistics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-f46aa9119c3cad8cc042",
              "file": "e2e/dashboard.test.ts",
              "line": 15,
              "column": 5
            },
            {
              "title": "should display error severity breakdown",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-d2184c5a1fe1dcd10f16",
              "file": "e2e/dashboard.test.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should filter errors by store",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-ac2e9b9bd8c1f6da5038",
              "file": "e2e/dashboard.test.ts",
              "line": 29,
              "column": 5
            },
            {
              "title": "should filter errors by kiosk",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-a860d6ef7dd17521778e",
              "file": "e2e/dashboard.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should filter errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-6b54333a3360d5da9be9",
              "file": "e2e/dashboard.test.ts",
              "line": 57,
              "column": 5
            },
            {
              "title": "should filter errors by date range",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-d79481ad8269da3ad78a",
              "file": "e2e/dashboard.test.ts",
              "line": 67,
              "column": 5
            },
            {
              "title": "should apply multiple filters together",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-b33c055f1c9ef8ce44f8",
              "file": "e2e/dashboard.test.ts",
              "line": 82,
              "column": 5
            },
            {
              "title": "should clear all filters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-8846963240c2b7c84020",
              "file": "e2e/dashboard.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should search errors by keyword",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-5cb722b4e150d3510242",
              "file": "e2e/dashboard.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "should paginate through error results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-0b8efd45671e0da4dc40",
              "file": "e2e/dashboard.test.ts",
              "line": 127,
              "column": 5
            },
            {
              "title": "should change items per page",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-e9973cdacc9f20017111",
              "file": "e2e/dashboard.test.ts",
              "line": 139,
              "column": 5
            },
            {
              "title": "should sort errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-07051b18b6f474512d68",
              "file": "e2e/dashboard.test.ts",
              "line": 149,
              "column": 5
            },
            {
              "title": "should sort errors by date",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-f861bbbabfc65308e83d",
              "file": "e2e/dashboard.test.ts",
              "line": 162,
              "column": 5
            },
            {
              "title": "should export errors to CSV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-618ea668bc398ccc7c0e",
              "file": "e2e/dashboard.test.ts",
              "line": 175,
              "column": 5
            },
            {
              "title": "should export errors to Excel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-f3be03b3280ce9cce861",
              "file": "e2e/dashboard.test.ts",
              "line": 184,
              "column": 5
            },
            {
              "title": "should display error details on click",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-b7d5c32a28df568834bf",
              "file": "e2e/dashboard.test.ts",
              "line": 193,
              "column": 5
            },
            {
              "title": "should mark error as resolved",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-305bf1febebdb463c5ec",
              "file": "e2e/dashboard.test.ts",
              "line": 201,
              "column": 5
            },
            {
              "title": "should display real-time updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e0ba9c440050f50f3237-c021d5d1af59e35161f7",
              "file": "e2e/dashboard.test.ts",
              "line": 210,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/enhanced.test.ts",
      "file": "e2e/enhanced.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Enhanced E2E Tests - Multi-User Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "concurrent users editing same error",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-9ddcbeb2e8b26c40c284",
              "file": "e2e/enhanced.test.ts",
              "line": 4,
              "column": 5
            },
            {
              "title": "collaborative analysis workflow",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7464cb47eed01cd6444d",
              "file": "e2e/enhanced.test.ts",
              "line": 53,
              "column": 5
            },
            {
              "title": "concurrent users editing same error",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-a16dcc938dc4ec2d4be5",
              "file": "e2e/enhanced.test.ts",
              "line": 4,
              "column": 5
            },
            {
              "title": "collaborative analysis workflow",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-865909a73d96d3da728e",
              "file": "e2e/enhanced.test.ts",
              "line": 53,
              "column": 5
            },
            {
              "title": "concurrent users editing same error",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-5afd08bd476d520fdca6",
              "file": "e2e/enhanced.test.ts",
              "line": 4,
              "column": 5
            },
            {
              "title": "collaborative analysis workflow",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-294a9b2f73ab72e887dd",
              "file": "e2e/enhanced.test.ts",
              "line": 53,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Error Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 115,
          "column": 6,
          "specs": [
            {
              "title": "handle network failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-33415e50bd2b55e57e9a",
              "file": "e2e/enhanced.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "handle API errors and retry",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-2554dc46b8ef76cb9c9e",
              "file": "e2e/enhanced.test.ts",
              "line": 142,
              "column": 5
            },
            {
              "title": "handle session timeout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-c5363b1b835f132e03d4",
              "file": "e2e/enhanced.test.ts",
              "line": 178,
              "column": 5
            },
            {
              "title": "handle upload errors and validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-82950d83f8902085bc3e",
              "file": "e2e/enhanced.test.ts",
              "line": 200,
              "column": 5
            },
            {
              "title": "handle ML training failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e3a4b2d5e2ab6f3ef0de",
              "file": "e2e/enhanced.test.ts",
              "line": 237,
              "column": 5
            },
            {
              "title": "handle network failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-ca10caddcfd1863d7cc6",
              "file": "e2e/enhanced.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "handle API errors and retry",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-af7824355af17074fbb5",
              "file": "e2e/enhanced.test.ts",
              "line": 142,
              "column": 5
            },
            {
              "title": "handle session timeout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7cdb3e60f2717c9a54ab",
              "file": "e2e/enhanced.test.ts",
              "line": 178,
              "column": 5
            },
            {
              "title": "handle upload errors and validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-345a49477d2f8c4b6d23",
              "file": "e2e/enhanced.test.ts",
              "line": 200,
              "column": 5
            },
            {
              "title": "handle ML training failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-581390ffdf2104ff81fb",
              "file": "e2e/enhanced.test.ts",
              "line": 237,
              "column": 5
            },
            {
              "title": "handle network failures gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-deeee9bb97e56fd11ffd",
              "file": "e2e/enhanced.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "handle API errors and retry",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-68daa71cf8c5bc6df927",
              "file": "e2e/enhanced.test.ts",
              "line": 142,
              "column": 5
            },
            {
              "title": "handle session timeout",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-4ab62182d469231afa1f",
              "file": "e2e/enhanced.test.ts",
              "line": 178,
              "column": 5
            },
            {
              "title": "handle upload errors and validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-619756d6d0a619a13b73",
              "file": "e2e/enhanced.test.ts",
              "line": 200,
              "column": 5
            },
            {
              "title": "handle ML training failures",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-4a334f7cb325f5fa0a56",
              "file": "e2e/enhanced.test.ts",
              "line": 237,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Performance Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 269,
          "column": 6,
          "specs": [
            {
              "title": "handle large datasets efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-575d056523ec9f9e921b",
              "file": "e2e/enhanced.test.ts",
              "line": 270,
              "column": 5
            },
            {
              "title": "handle rapid filter changes without lag",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-af9570d8b0054b24d116",
              "file": "e2e/enhanced.test.ts",
              "line": 310,
              "column": 5
            },
            {
              "title": "handle concurrent API requests",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-c5ac3ef0f8407dff6f71",
              "file": "e2e/enhanced.test.ts",
              "line": 334,
              "column": 5
            },
            {
              "title": "handle large datasets efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e96848c2c17c482aab5c",
              "file": "e2e/enhanced.test.ts",
              "line": 270,
              "column": 5
            },
            {
              "title": "handle rapid filter changes without lag",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-73497c05ded5227943de",
              "file": "e2e/enhanced.test.ts",
              "line": 310,
              "column": 5
            },
            {
              "title": "handle concurrent API requests",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-0f38a436f0a2b6081dc3",
              "file": "e2e/enhanced.test.ts",
              "line": 334,
              "column": 5
            },
            {
              "title": "handle large datasets efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-ef0bfc5e2eb445fffb9c",
              "file": "e2e/enhanced.test.ts",
              "line": 270,
              "column": 5
            },
            {
              "title": "handle rapid filter changes without lag",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-4dc50de2fccc6d69380b",
              "file": "e2e/enhanced.test.ts",
              "line": 310,
              "column": 5
            },
            {
              "title": "handle concurrent API requests",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-fe9d679721edde6b3534",
              "file": "e2e/enhanced.test.ts",
              "line": 334,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Security Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 362,
          "column": 6,
          "specs": [
            {
              "title": "prevent unauthorized access to admin pages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-b167c3c883b2ed46086f",
              "file": "e2e/enhanced.test.ts",
              "line": 363,
              "column": 5
            },
            {
              "title": "sanitize user input to prevent XSS",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-0cf319b8e7c52bc278b7",
              "file": "e2e/enhanced.test.ts",
              "line": 377,
              "column": 5
            },
            {
              "title": "validate CSRF protection",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-14992d151ecaf864e15e",
              "file": "e2e/enhanced.test.ts",
              "line": 402,
              "column": 5
            },
            {
              "title": "prevent unauthorized access to admin pages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e45c801b8f1a17da0ede",
              "file": "e2e/enhanced.test.ts",
              "line": 363,
              "column": 5
            },
            {
              "title": "sanitize user input to prevent XSS",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-d1939738363029002c17",
              "file": "e2e/enhanced.test.ts",
              "line": 377,
              "column": 5
            },
            {
              "title": "validate CSRF protection",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-1b35068e1d4cc13da080",
              "file": "e2e/enhanced.test.ts",
              "line": 402,
              "column": 5
            },
            {
              "title": "prevent unauthorized access to admin pages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-cd27cefc223fe941fe04",
              "file": "e2e/enhanced.test.ts",
              "line": 363,
              "column": 5
            },
            {
              "title": "sanitize user input to prevent XSS",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-bfb246388b9c5b15d25a",
              "file": "e2e/enhanced.test.ts",
              "line": 377,
              "column": 5
            },
            {
              "title": "validate CSRF protection",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-01e8dfc2bdc16fd8c7a5",
              "file": "e2e/enhanced.test.ts",
              "line": 402,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Data Integrity",
          "file": "e2e/enhanced.test.ts",
          "line": 431,
          "column": 6,
          "specs": [
            {
              "title": "verify data consistency across operations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-f4d333f82ab6e54ef77f",
              "file": "e2e/enhanced.test.ts",
              "line": 432,
              "column": 5
            },
            {
              "title": "handle optimistic updates correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-b1a1d78f1322189d3846",
              "file": "e2e/enhanced.test.ts",
              "line": 462,
              "column": 5
            },
            {
              "title": "verify data consistency across operations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-3065ce1dbf3c42e82293",
              "file": "e2e/enhanced.test.ts",
              "line": 432,
              "column": 5
            },
            {
              "title": "handle optimistic updates correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-ee707eeb10732d62e752",
              "file": "e2e/enhanced.test.ts",
              "line": 462,
              "column": 5
            },
            {
              "title": "verify data consistency across operations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-f5ae250486a1bbe4254e",
              "file": "e2e/enhanced.test.ts",
              "line": 432,
              "column": 5
            },
            {
              "title": "handle optimistic updates correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-c04010690640173b016f",
              "file": "e2e/enhanced.test.ts",
              "line": 462,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Accessibility",
          "file": "e2e/enhanced.test.ts",
          "line": 495,
          "column": 6,
          "specs": [
            {
              "title": "keyboard navigation works correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-913d2241de9e2070232a",
              "file": "e2e/enhanced.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "screen reader support",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-5533e34d2b17f1e111fe",
              "file": "e2e/enhanced.test.ts",
              "line": 528,
              "column": 5
            },
            {
              "title": "color contrast meets WCAG standards",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-803454c82dcbdc1452cc",
              "file": "e2e/enhanced.test.ts",
              "line": 551,
              "column": 5
            },
            {
              "title": "keyboard navigation works correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-32fb6e5b01e123ab12d8",
              "file": "e2e/enhanced.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "screen reader support",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-60e9bf9ebe3bf676a8cd",
              "file": "e2e/enhanced.test.ts",
              "line": 528,
              "column": 5
            },
            {
              "title": "color contrast meets WCAG standards",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7a6fd6aac146b9abab33",
              "file": "e2e/enhanced.test.ts",
              "line": 551,
              "column": 5
            },
            {
              "title": "keyboard navigation works correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e19b89f4b34b3c83ab4d",
              "file": "e2e/enhanced.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "screen reader support",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-eece1666f35d44c434f5",
              "file": "e2e/enhanced.test.ts",
              "line": 528,
              "column": 5
            },
            {
              "title": "color contrast meets WCAG standards",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-5bc5fdda6c938e79c20f",
              "file": "e2e/enhanced.test.ts",
              "line": 551,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Cross-Browser Compatibility",
          "file": "e2e/enhanced.test.ts",
          "line": 570,
          "column": 6,
          "specs": [
            {
              "title": "works in Chromium",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-4f20e3d089c7bf944a62",
              "file": "e2e/enhanced.test.ts",
              "line": 571,
              "column": 5
            },
            {
              "title": "works in Firefox",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-953c9b5ceeaa3cbc5e65",
              "file": "e2e/enhanced.test.ts",
              "line": 581,
              "column": 5
            },
            {
              "title": "works in WebKit/Safari",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7d70f230c2f987afb17a",
              "file": "e2e/enhanced.test.ts",
              "line": 591,
              "column": 5
            },
            {
              "title": "handles CSS Grid across browsers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-9de27f2ac53ce55febf2",
              "file": "e2e/enhanced.test.ts",
              "line": 601,
              "column": 5
            },
            {
              "title": "handles Flexbox across browsers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-aa6748df0f92c2658990",
              "file": "e2e/enhanced.test.ts",
              "line": 612,
              "column": 5
            },
            {
              "title": "works in Chromium",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7780a02b8bd9f96824fc",
              "file": "e2e/enhanced.test.ts",
              "line": 571,
              "column": 5
            },
            {
              "title": "works in Firefox",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-c9ab9bc1080604b49879",
              "file": "e2e/enhanced.test.ts",
              "line": 581,
              "column": 5
            },
            {
              "title": "works in WebKit/Safari",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-f96a652cdfae8e4e4ce6",
              "file": "e2e/enhanced.test.ts",
              "line": 591,
              "column": 5
            },
            {
              "title": "handles CSS Grid across browsers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-22c64f7ad56fdfeeb791",
              "file": "e2e/enhanced.test.ts",
              "line": 601,
              "column": 5
            },
            {
              "title": "handles Flexbox across browsers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-25197833d919baba22f5",
              "file": "e2e/enhanced.test.ts",
              "line": 612,
              "column": 5
            },
            {
              "title": "works in Chromium",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-fc489aa23c6876dbba5f",
              "file": "e2e/enhanced.test.ts",
              "line": 571,
              "column": 5
            },
            {
              "title": "works in Firefox",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-99cdf46c9b8f36db8730",
              "file": "e2e/enhanced.test.ts",
              "line": 581,
              "column": 5
            },
            {
              "title": "works in WebKit/Safari",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-de2dfcbc2c8a0e24ed00",
              "file": "e2e/enhanced.test.ts",
              "line": 591,
              "column": 5
            },
            {
              "title": "handles CSS Grid across browsers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-ae847b57b45f8a1b169e",
              "file": "e2e/enhanced.test.ts",
              "line": 601,
              "column": 5
            },
            {
              "title": "handles Flexbox across browsers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-69507e60f871ef8ce6e9",
              "file": "e2e/enhanced.test.ts",
              "line": 612,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Mobile Viewport",
          "file": "e2e/enhanced.test.ts",
          "line": 624,
          "column": 6,
          "specs": [
            {
              "title": "iPhone SE viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-0b29b07b07d0e5d5b08f",
              "file": "e2e/enhanced.test.ts",
              "line": 625,
              "column": 5
            },
            {
              "title": "iPhone 12 Pro viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-9089b8461bf7e031a42c",
              "file": "e2e/enhanced.test.ts",
              "line": 633,
              "column": 5
            },
            {
              "title": "iPad viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-1226f0e38e9140d1eb20",
              "file": "e2e/enhanced.test.ts",
              "line": 642,
              "column": 5
            },
            {
              "title": "iPad Pro viewport (landscape)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-2ded886a8868fa3ab799",
              "file": "e2e/enhanced.test.ts",
              "line": 649,
              "column": 5
            },
            {
              "title": "Android phone viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-70ae2e62f67cdaa85fde",
              "file": "e2e/enhanced.test.ts",
              "line": 656,
              "column": 5
            },
            {
              "title": "iPhone SE viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-cc44d2896f88bfd3cf08",
              "file": "e2e/enhanced.test.ts",
              "line": 625,
              "column": 5
            },
            {
              "title": "iPhone 12 Pro viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-df0cb91fcb8c5093cacf",
              "file": "e2e/enhanced.test.ts",
              "line": 633,
              "column": 5
            },
            {
              "title": "iPad viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e1b9d38e4a1e3e8f5a83",
              "file": "e2e/enhanced.test.ts",
              "line": 642,
              "column": 5
            },
            {
              "title": "iPad Pro viewport (landscape)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-97a34818f92fc833581d",
              "file": "e2e/enhanced.test.ts",
              "line": 649,
              "column": 5
            },
            {
              "title": "Android phone viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-bbcb210df1689d1d4f5b",
              "file": "e2e/enhanced.test.ts",
              "line": 656,
              "column": 5
            },
            {
              "title": "iPhone SE viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-0e48562bcd4e2c46fe74",
              "file": "e2e/enhanced.test.ts",
              "line": 625,
              "column": 5
            },
            {
              "title": "iPhone 12 Pro viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-b7fcfab281ab3417327a",
              "file": "e2e/enhanced.test.ts",
              "line": 633,
              "column": 5
            },
            {
              "title": "iPad viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-05e92f0259ea22d13eba",
              "file": "e2e/enhanced.test.ts",
              "line": 642,
              "column": 5
            },
            {
              "title": "iPad Pro viewport (landscape)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-ccc2f3c7260a530bbd64",
              "file": "e2e/enhanced.test.ts",
              "line": 649,
              "column": 5
            },
            {
              "title": "Android phone viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7ef4d3d96b846c491fed",
              "file": "e2e/enhanced.test.ts",
              "line": 656,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - File Operations",
          "file": "e2e/enhanced.test.ts",
          "line": 664,
          "column": 6,
          "specs": [
            {
              "title": "download error report as PDF",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e14d3c75856e1a4027dc",
              "file": "e2e/enhanced.test.ts",
              "line": 665,
              "column": 5
            },
            {
              "title": "download error log as text file",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-0b8599bc3d95c436293a",
              "file": "e2e/enhanced.test.ts",
              "line": 683,
              "column": 5
            },
            {
              "title": "export multiple errors to Excel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-97b1ed50aea036a0c266",
              "file": "e2e/enhanced.test.ts",
              "line": 699,
              "column": 5
            },
            {
              "title": "upload and process CSV file",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-6f7320ca48bd817c3e4b",
              "file": "e2e/enhanced.test.ts",
              "line": 717,
              "column": 5
            },
            {
              "title": "handle file upload errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-029cee655799fafbd870",
              "file": "e2e/enhanced.test.ts",
              "line": 740,
              "column": 5
            },
            {
              "title": "download error report as PDF",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-80d189166ce24f477855",
              "file": "e2e/enhanced.test.ts",
              "line": 665,
              "column": 5
            },
            {
              "title": "download error log as text file",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-17ce0c4038ec3d616bec",
              "file": "e2e/enhanced.test.ts",
              "line": 683,
              "column": 5
            },
            {
              "title": "export multiple errors to Excel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-914cf314b39180af83ac",
              "file": "e2e/enhanced.test.ts",
              "line": 699,
              "column": 5
            },
            {
              "title": "upload and process CSV file",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-c1019d8a032380c324dc",
              "file": "e2e/enhanced.test.ts",
              "line": 717,
              "column": 5
            },
            {
              "title": "handle file upload errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-e1b91691ae483ba390d9",
              "file": "e2e/enhanced.test.ts",
              "line": 740,
              "column": 5
            },
            {
              "title": "download error report as PDF",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-c1623bf9c34183c9b8c1",
              "file": "e2e/enhanced.test.ts",
              "line": 665,
              "column": 5
            },
            {
              "title": "download error log as text file",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-5d7aca34b27a89b02cb7",
              "file": "e2e/enhanced.test.ts",
              "line": 683,
              "column": 5
            },
            {
              "title": "export multiple errors to Excel",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-2b7c9867cc638a6ea2b9",
              "file": "e2e/enhanced.test.ts",
              "line": 699,
              "column": 5
            },
            {
              "title": "upload and process CSV file",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-38c883d595b28b5b7f54",
              "file": "e2e/enhanced.test.ts",
              "line": 717,
              "column": 5
            },
            {
              "title": "handle file upload errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-32c72b43d0f67381c89c",
              "file": "e2e/enhanced.test.ts",
              "line": 740,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Media and Assets",
          "file": "e2e/enhanced.test.ts",
          "line": 755,
          "column": 6,
          "specs": [
            {
              "title": "display error screenshots",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-64da7f5886ffb81bc8e7",
              "file": "e2e/enhanced.test.ts",
              "line": 756,
              "column": 5
            },
            {
              "title": "lazy load images in gallery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-f35eb1aa8e1661f43f63",
              "file": "e2e/enhanced.test.ts",
              "line": 771,
              "column": 5
            },
            {
              "title": "display chart visualizations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7652743206f2578bd000",
              "file": "e2e/enhanced.test.ts",
              "line": 790,
              "column": 5
            },
            {
              "title": "display error screenshots",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-088f36cb35cfec636c13",
              "file": "e2e/enhanced.test.ts",
              "line": 756,
              "column": 5
            },
            {
              "title": "lazy load images in gallery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-a820802318912136c8d8",
              "file": "e2e/enhanced.test.ts",
              "line": 771,
              "column": 5
            },
            {
              "title": "display chart visualizations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-25e13ec62341882dd440",
              "file": "e2e/enhanced.test.ts",
              "line": 790,
              "column": 5
            },
            {
              "title": "display error screenshots",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-dbbc0d3f9f070882bff4",
              "file": "e2e/enhanced.test.ts",
              "line": 756,
              "column": 5
            },
            {
              "title": "lazy load images in gallery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-4f45691fa3ca249c0988",
              "file": "e2e/enhanced.test.ts",
              "line": 771,
              "column": 5
            },
            {
              "title": "display chart visualizations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-945ad581b51c9297525e",
              "file": "e2e/enhanced.test.ts",
              "line": 790,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Print and Export",
          "file": "e2e/enhanced.test.ts",
          "line": 806,
          "column": 6,
          "specs": [
            {
              "title": "print error report",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-135ff561c212880fe065",
              "file": "e2e/enhanced.test.ts",
              "line": 807,
              "column": 5
            },
            {
              "title": "generate shareable link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-b6e3efaf5e8d33d321ca",
              "file": "e2e/enhanced.test.ts",
              "line": 830,
              "column": 5
            },
            {
              "title": "print error report",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-9a4fb8bc0b34679770dd",
              "file": "e2e/enhanced.test.ts",
              "line": 807,
              "column": 5
            },
            {
              "title": "generate shareable link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-99ccdfa02ac2f17ecb04",
              "file": "e2e/enhanced.test.ts",
              "line": 830,
              "column": 5
            },
            {
              "title": "print error report",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-ee7567cfb96334c3fa80",
              "file": "e2e/enhanced.test.ts",
              "line": 807,
              "column": 5
            },
            {
              "title": "generate shareable link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-cb258856fd62f34674d2",
              "file": "e2e/enhanced.test.ts",
              "line": 830,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Real-time Features",
          "file": "e2e/enhanced.test.ts",
          "line": 851,
          "column": 6,
          "specs": [
            {
              "title": "receive real-time error notifications",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-6e36314221c407e93f20",
              "file": "e2e/enhanced.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "sync status updates across sessions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-fe2ad1c0627c4b129237",
              "file": "e2e/enhanced.test.ts",
              "line": 889,
              "column": 5
            },
            {
              "title": "receive real-time error notifications",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7d0eb72511dabcc293ff",
              "file": "e2e/enhanced.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "sync status updates across sessions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-a9c18d31953d7cd882da",
              "file": "e2e/enhanced.test.ts",
              "line": 889,
              "column": 5
            },
            {
              "title": "receive real-time error notifications",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-b2e3e74d657650987d15",
              "file": "e2e/enhanced.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "sync status updates across sessions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-985c06af9003cdda8810",
              "file": "e2e/enhanced.test.ts",
              "line": 889,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/upload.test.ts",
      "file": "e2e/upload.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "File Upload and Analysis",
          "file": "e2e/upload.test.ts",
          "line": 9,
          "column": 6,
          "specs": [
            {
              "title": "should upload Excel file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-583a8b487bfc6196d41f",
              "file": "e2e/upload.test.ts",
              "line": 16,
              "column": 5
            },
            {
              "title": "should upload CSV file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-ee2317bb6c49a2ee282c",
              "file": "e2e/upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "should upload log file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6f656aad67182b5e94de",
              "file": "e2e/upload.test.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should reject invalid file types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-0bcbee1692580b963745",
              "file": "e2e/upload.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should reject files larger than limit",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-f054a85c589561c58fd5",
              "file": "e2e/upload.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should trigger AI analysis after upload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-710a4c0d3686a65552ed",
              "file": "e2e/upload.test.ts",
              "line": 66,
              "column": 5
            },
            {
              "title": "should display error detection results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-929415f4cc86e2350427",
              "file": "e2e/upload.test.ts",
              "line": 84,
              "column": 5
            },
            {
              "title": "should display AI suggestions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6f8e2429a73fc1917d87",
              "file": "e2e/upload.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should display ML predictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-66b7e715a6153c8c8a43",
              "file": "e2e/upload.test.ts",
              "line": 111,
              "column": 5
            },
            {
              "title": "should navigate to error details",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-2ff0038f43fa1647afd8",
              "file": "e2e/upload.test.ts",
              "line": 122,
              "column": 5
            },
            {
              "title": "should handle upload errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-7c85cf0f3e63f0aebca5",
              "file": "e2e/upload.test.ts",
              "line": 136,
              "column": 5
            },
            {
              "title": "should upload Excel file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-d225ab8592b7c849ebd2",
              "file": "e2e/upload.test.ts",
              "line": 16,
              "column": 5
            },
            {
              "title": "should upload CSV file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-42a997af937481bb8287",
              "file": "e2e/upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "should upload log file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-4f912bd9b970522eb3f4",
              "file": "e2e/upload.test.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should reject invalid file types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-1506e5302ce83973cf92",
              "file": "e2e/upload.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should reject files larger than limit",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-0a1f399262ddb8ad7e22",
              "file": "e2e/upload.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should trigger AI analysis after upload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-7252ff5830825fadab79",
              "file": "e2e/upload.test.ts",
              "line": 66,
              "column": 5
            },
            {
              "title": "should display error detection results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-53b4b52dbfbc36781433",
              "file": "e2e/upload.test.ts",
              "line": 84,
              "column": 5
            },
            {
              "title": "should display AI suggestions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-db82c8eed7794a53b8c7",
              "file": "e2e/upload.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should display ML predictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-3bab2e1304f1cf3c81ec",
              "file": "e2e/upload.test.ts",
              "line": 111,
              "column": 5
            },
            {
              "title": "should navigate to error details",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-147b2fad910ca48cf08e",
              "file": "e2e/upload.test.ts",
              "line": 122,
              "column": 5
            },
            {
              "title": "should handle upload errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6c703ea17fb8d51fdad3",
              "file": "e2e/upload.test.ts",
              "line": 136,
              "column": 5
            },
            {
              "title": "should upload Excel file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-3b0a64e3b146cdfa75b8",
              "file": "e2e/upload.test.ts",
              "line": 16,
              "column": 5
            },
            {
              "title": "should upload CSV file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-64ac067ab99af7e72a19",
              "file": "e2e/upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "should upload log file successfully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-fedf2080fb70f8b80dfc",
              "file": "e2e/upload.test.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should reject invalid file types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-c407f669f8c437f20a5e",
              "file": "e2e/upload.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should reject files larger than limit",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-3dd5215196ab11175317",
              "file": "e2e/upload.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should trigger AI analysis after upload",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6c0622049438c89cb45f",
              "file": "e2e/upload.test.ts",
              "line": 66,
              "column": 5
            },
            {
              "title": "should display error detection results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-cebc4e032dce4bf50280",
              "file": "e2e/upload.test.ts",
              "line": 84,
              "column": 5
            },
            {
              "title": "should display AI suggestions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-9ee0943f009d48809f5a",
              "file": "e2e/upload.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should display ML predictions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-8ea6186064d75dabcf4d",
              "file": "e2e/upload.test.ts",
              "line": 111,
              "column": 5
            },
            {
              "title": "should navigate to error details",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-cf5675a4b5336f8b30db",
              "file": "e2e/upload.test.ts",
              "line": 122,
              "column": 5
            },
            {
              "title": "should handle upload errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "1e8161d9b382aed29dfc-af3c7ed79da49f7a5155",
              "file": "e2e/upload.test.ts",
              "line": 136,
              "column": 5
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-08T05:39:37.217Z",
    "duration": 22672.792999999998,
    "expected": 3,
    "skipped": 378,
    "unexpected": 35,
    "flaky": 0
  }
}