{
  "config": {
    "configFile": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/playwright.config.ts",
    "rootDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 5
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "playwright-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/junit.xml"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "setup",
        "name": "setup",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/.*\\.setup\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "api-tests",
        "name": "api-tests",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/api\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "unit-tests",
        "name": "unit-tests",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/unit\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "integration-tests",
        "name": "integration-tests",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/integration\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "e2e-chromium",
        "name": "e2e-chromium",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "e2e-firefox",
        "name": "e2e-firefox",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "e2e-webkit",
        "name": "e2e-webkit",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "mobile-safari",
        "name": "mobile-safari",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.mobile\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "mobile-chrome",
        "name": "mobile-chrome",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/e2e\\/.*\\.mobile\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "accessibility",
        "name": "accessibility",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/accessibility\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 5
        },
        "id": "performance",
        "name": "performance",
        "testDir": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests",
        "testIgnore": [],
        "testMatch": [
          "/tests\\/performance\\/.*\\.test\\.ts/"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.1",
    "workers": 5,
    "webServer": null
  },
  "suites": [
    {
      "title": "api/auth-upload.test.ts",
      "file": "api/auth-upload.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication API",
          "file": "api/auth-upload.test.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "POST /api/auth/firebase-signin - should authenticate user",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 83,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:19:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                          "column": 35,
                          "line": 19
                        },
                        "snippet": "\u001b[0m \u001b[90m 17 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 20 |\u001b[39m\n \u001b[90m 21 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 22 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'token'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                            "column": 35,
                            "line": 19
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n\u001b[0m \u001b[90m 17 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 20 |\u001b[39m\n \u001b[90m 21 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 22 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'token'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:19:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:41.551Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                        "column": 35,
                        "line": 19
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-f2e39896d68007fbb632",
              "file": "api/auth-upload.test.ts",
              "line": 11,
              "column": 5
            },
            {
              "title": "POST /api/auth/firebase-verify - should verify token",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 85,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:34:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                          "column": 35,
                          "line": 34
                        },
                        "snippet": "\u001b[0m \u001b[90m 32 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 35 |\u001b[39m\n \u001b[90m 36 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'valid'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                            "column": 35,
                            "line": 34
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n\u001b[0m \u001b[90m 32 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 33 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 34 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 35 |\u001b[39m\n \u001b[90m 36 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'valid'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:34:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:41.551Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                        "column": 35,
                        "line": 34
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-5e98bfc254dcf99ba42d",
              "file": "api/auth-upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "GET /api/auth/me - should return current user",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 59,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:41.553Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-7effdb3c61a7ed06b243",
              "file": "api/auth-upload.test.ts",
              "line": 41,
              "column": 5
            },
            {
              "title": "POST /api/auth/firebase-signin - should reject invalid token",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 89,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:59:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                          "column": 35,
                          "line": 59
                        },
                        "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                            "column": 35,
                            "line": 59
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n\n\u001b[0m \u001b[90m 57 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'message'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts:59:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:41.544Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/auth-upload.test.ts",
                        "column": 35,
                        "line": 59
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-186f7de7f29926244ebf",
              "file": "api/auth-upload.test.ts",
              "line": 52,
              "column": 5
            },
            {
              "title": "GET /api/auth/me - should reject unauthenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 78,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:41.556Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-494cdba89298bb825dfe",
              "file": "api/auth-upload.test.ts",
              "line": 65,
              "column": 5
            }
          ]
        },
        {
          "title": "File Upload API",
          "file": "api/auth-upload.test.ts",
          "line": 76,
          "column": 6,
          "specs": [
            {
              "title": "POST /api/upload - should upload Excel file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 44,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:42.129Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-bf120dc1033b3176853b",
              "file": "api/auth-upload.test.ts",
              "line": 79,
              "column": 5
            },
            {
              "title": "POST /api/upload - should upload CSV file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:41.660Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-3029ae79604fd2063c89",
              "file": "api/auth-upload.test.ts",
              "line": 98,
              "column": 5
            },
            {
              "title": "POST /api/upload - should reject invalid file type",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 42,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:42.142Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-af7ae46ee6e74ee58b00",
              "file": "api/auth-upload.test.ts",
              "line": 112,
              "column": 5
            },
            {
              "title": "GET /api/files - should list uploaded files",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 43,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:42.136Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-859dc4c490cd1e0155b0",
              "file": "api/auth-upload.test.ts",
              "line": 130,
              "column": 5
            },
            {
              "title": "GET /api/files/:id - should get file details",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 41,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:42.142Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-85b63f3e2b6f403e0247",
              "file": "api/auth-upload.test.ts",
              "line": 145,
              "column": 5
            },
            {
              "title": "DELETE /api/files/:id - should delete file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 45,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                          "column": 27,
                          "line": 52
                        },
                        "snippet": "\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                            "column": 27,
                            "line": 52
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[90m   at \u001b[39mfixtures.ts:52\n\n\u001b[0m \u001b[90m 50 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m         \u001b[36mconst\u001b[39m { token } \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m\n \u001b[90m 54 |\u001b[39m         \u001b[90m// Dispose current context and create authenticated one\u001b[39m\n \u001b[90m 55 |\u001b[39m         \u001b[36mawait\u001b[39m apiContext\u001b[33m.\u001b[39mdispose()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at Object.apiContext (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts:52:27)\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:42.136Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/fixtures.ts",
                        "column": 27,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "84c6f69859d9e0a6ed56-22ab3908e063d5d101d1",
              "file": "api/auth-upload.test.ts",
              "line": 169,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "api/comprehensive.test.ts",
      "file": "api/comprehensive.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "API Tests - Error Management Endpoints",
          "file": "api/comprehensive.test.ts",
          "line": 3,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "GET /api/errors",
              "file": "api/comprehensive.test.ts",
              "line": 4,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve all errors",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 10,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 55,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:8:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 8
                            },
                            "snippet": "\u001b[0m \u001b[90m  6 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m  7 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  9 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 10 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(errors))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 11 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 8
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m  6 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m  7 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  9 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 10 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(errors))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 11 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:8:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:42.664Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 8
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-826a0a8d0ee6ee82544b",
                  "file": "api/comprehensive.test.ts",
                  "line": 5,
                  "column": 9
                },
                {
                  "title": "should support pagination",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 52,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:16:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 16
                            },
                            "snippet": "\u001b[0m \u001b[90m 14 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 17 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 19 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 16
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 14 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 17 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 19 |\u001b[39m             expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:16:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:42.680Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 16
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7316ff5725f86e315da4",
                  "file": "api/comprehensive.test.ts",
                  "line": 13,
                  "column": 9
                },
                {
                  "title": "should filter by severity",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 56,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:28:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 28
                            },
                            "snippet": "\u001b[0m \u001b[90m 26 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?severity=critical'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 30 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 31 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mseverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'critical'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 28
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 26 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?severity=critical'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 27 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 28 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 29 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 30 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 31 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mseverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'critical'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:28:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:42.662Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 28
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b96418d2c2e853f322b6",
                  "file": "api/comprehensive.test.ts",
                  "line": 25,
                  "column": 9
                },
                {
                  "title": "should filter by error type",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 51,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:38:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 38
                            },
                            "snippet": "\u001b[0m \u001b[90m 36 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?errorType=Runtime'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 39 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 40 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 41 |\u001b[39m                 expect(error\u001b[33m.\u001b[39merrorType)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Runtime'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 38
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 36 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?errorType=Runtime'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 37 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 38 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 39 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 40 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 41 |\u001b[39m                 expect(error\u001b[33m.\u001b[39merrorType)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Runtime'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:38:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:42.668Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 38
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-af062dd572b081de7064",
                  "file": "api/comprehensive.test.ts",
                  "line": 35,
                  "column": 9
                },
                {
                  "title": "should filter by date range",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 53,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:53:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 53
                            },
                            "snippet": "\u001b[0m \u001b[90m 51 |\u001b[39m             )\u001b[33m;\u001b[39m\n \u001b[90m 52 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 54 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m         test(\u001b[32m'should search by message'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 53
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 51 |\u001b[39m             )\u001b[33m;\u001b[39m\n \u001b[90m 52 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 54 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m\n \u001b[90m 56 |\u001b[39m         test(\u001b[32m'should search by message'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:53:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:42.672Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 53
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d7ad9324f8f604f0cc2c",
                  "file": "api/comprehensive.test.ts",
                  "line": 45,
                  "column": 9
                },
                {
                  "title": "should search by message",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 17,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:59:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 59
                            },
                            "snippet": "\u001b[0m \u001b[90m 57 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?search=database'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 62 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m.\u001b[39mtoContain(\u001b[32m'database'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 59
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 57 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?search=database'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 58 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 62 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mmessage\u001b[33m.\u001b[39mtoLowerCase())\u001b[33m.\u001b[39mtoContain(\u001b[32m'database'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:59:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.218Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 59
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b836803334a29ea3dd90",
                  "file": "api/comprehensive.test.ts",
                  "line": 56,
                  "column": 9
                },
                {
                  "title": "should filter by resolved status",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 18,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 50,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:69:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 69
                            },
                            "snippet": "\u001b[0m \u001b[90m 67 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?resolved=false'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 69 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 70 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 71 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 72 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mresolved)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 69
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 67 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?resolved=false'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 69 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 70 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 71 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 72 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mresolved)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:69:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.225Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 69
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-76498f2f5df5997dda49",
                  "file": "api/comprehensive.test.ts",
                  "line": 66,
                  "column": 9
                },
                {
                  "title": "should filter by store",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:79:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 79
                            },
                            "snippet": "\u001b[0m \u001b[90m 77 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?store=STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 78 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 80 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 81 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 82 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mstore)\u001b[33m.\u001b[39mtoBe(\u001b[32m'STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 79
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 77 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?store=STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 78 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 79 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 80 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 81 |\u001b[39m             errors\u001b[33m.\u001b[39mforEach((error\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 82 |\u001b[39m                 expect(error\u001b[33m.\u001b[39mstore)\u001b[33m.\u001b[39mtoBe(\u001b[32m'STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:79:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.235Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 79
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-c22f3ed15be974d00c96",
                  "file": "api/comprehensive.test.ts",
                  "line": 76,
                  "column": 9
                },
                {
                  "title": "should support sorting",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:89:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 89
                            },
                            "snippet": "\u001b[0m \u001b[90m 87 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?sortBy=timestamp&order=desc'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 88 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 90 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m\n \u001b[90m 92 |\u001b[39m             \u001b[90m// Verify descending order\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 89
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 87 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?sortBy=timestamp&order=desc'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 88 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 90 |\u001b[39m             \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m\n \u001b[90m 92 |\u001b[39m             \u001b[90m// Verify descending order\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:89:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.219Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 89
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b81e04cb9f721a811318",
                  "file": "api/comprehensive.test.ts",
                  "line": 86,
                  "column": 9
                },
                {
                  "title": "should handle invalid query parameters gracefully",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 19,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:103:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 103
                            },
                            "snippet": "\u001b[0m \u001b[90m 101 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=-1&limit=1000'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 102 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 103
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 101 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=-1&limit=1000'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 102 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:103:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.229Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 103
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-2c3e3f50d42b17e463a3",
                  "file": "api/comprehensive.test.ts",
                  "line": 100,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/errors",
              "file": "api/comprehensive.test.ts",
              "line": 109,
              "column": 10,
              "specs": [
                {
                  "title": "should create new error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 21,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 55,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:124:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 124
                            },
                            "snippet": "\u001b[0m \u001b[90m 122 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 123 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 125 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 126 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'id'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m             expect(created\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(newError\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 124
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 122 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 123 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 125 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 126 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'id'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m             expect(created\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBe(newError\u001b[33m.\u001b[39mmessage)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:124:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.768Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 124
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-c8324f80276111afc881",
                  "file": "api/comprehensive.test.ts",
                  "line": 110,
                  "column": 9
                },
                {
                  "title": "should validate required fields",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 23,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 58,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:141:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 141
                            },
                            "snippet": "\u001b[0m \u001b[90m 139 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 141
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 139 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 140 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 141 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 142 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 143 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 144 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:141:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.766Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 141
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-89df631dbb7625d8e456",
                  "file": "api/comprehensive.test.ts",
                  "line": 131,
                  "column": 9
                },
                {
                  "title": "should validate severity values",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 20,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 59,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:157:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 157
                            },
                            "snippet": "\u001b[0m \u001b[90m 155 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 157 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 158 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m         test(\u001b[32m'should set default values for optional fields'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 157
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 155 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 156 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 157 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 158 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 159 |\u001b[39m\n \u001b[90m 160 |\u001b[39m         test(\u001b[32m'should set default values for optional fields'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:157:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.776Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 157
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-fae957e1836824a1e32b",
                  "file": "api/comprehensive.test.ts",
                  "line": 146,
                  "column": 9
                },
                {
                  "title": "should set default values for optional fields",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 22,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 56,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:171:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 171
                            },
                            "snippet": "\u001b[0m \u001b[90m 169 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 170 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 171 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 172 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 173 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'timestamp'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 174 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'resolved'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 171
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 169 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 170 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 171 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 172 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 173 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'timestamp'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 174 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'resolved'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:171:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.767Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 171
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-fba30f3c17b74acf2a22",
                  "file": "api/comprehensive.test.ts",
                  "line": 160,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/errors/:id",
              "file": "api/comprehensive.test.ts",
              "line": 179,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve specific error by ID",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 24,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 52,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:192:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 192
                            },
                            "snippet": "\u001b[0m \u001b[90m 190 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 191 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m             \u001b[90m// Retrieve the error\u001b[39m\n \u001b[90m 195 |\u001b[39m             \u001b[36mconst\u001b[39m getResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 192
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 190 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 191 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 192 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 193 |\u001b[39m\n \u001b[90m 194 |\u001b[39m             \u001b[90m// Retrieve the error\u001b[39m\n \u001b[90m 195 |\u001b[39m             \u001b[36mconst\u001b[39m getResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:192:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:43.783Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 192
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b9e8872c651ae76df63f",
                  "file": "api/comprehensive.test.ts",
                  "line": 180,
                  "column": 9
                },
                {
                  "title": "should return 404 for non-existent error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 25,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 50,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:205:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 205
                            },
                            "snippet": "\u001b[0m \u001b[90m 203 |\u001b[39m         test(\u001b[32m'should return 404 for non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 204 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 205 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 206 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 207 |\u001b[39m\n \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 205
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 203 |\u001b[39m         test(\u001b[32m'should return 404 for non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 204 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 205 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 206 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 207 |\u001b[39m\n \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:205:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.341Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 205
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-cd9d97644dabf433e986",
                  "file": "api/comprehensive.test.ts",
                  "line": 203,
                  "column": 9
                },
                {
                  "title": "should return 400 for invalid ID format",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 27,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:210:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 210
                            },
                            "snippet": "\u001b[0m \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 209 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/invalid-id'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 210 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 211 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 212 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 213 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 210
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 208 |\u001b[39m         test(\u001b[32m'should return 400 for invalid ID format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 209 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/invalid-id'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 210 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 211 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 212 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 213 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:210:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.344Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 210
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-3cefa8e6f6950a4d91ff",
                  "file": "api/comprehensive.test.ts",
                  "line": 208,
                  "column": 9
                }
              ]
            },
            {
              "title": "PATCH /api/errors/:id",
              "file": "api/comprehensive.test.ts",
              "line": 214,
              "column": 10,
              "specs": [
                {
                  "title": "should update error fields",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 26,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:227:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 227
                            },
                            "snippet": "\u001b[0m \u001b[90m 225 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 226 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 227 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 228 |\u001b[39m\n \u001b[90m 229 |\u001b[39m             \u001b[90m// Update error\u001b[39m\n \u001b[90m 230 |\u001b[39m             \u001b[36mconst\u001b[39m updates \u001b[33m=\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 227
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 225 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 226 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 227 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 228 |\u001b[39m\n \u001b[90m 229 |\u001b[39m             \u001b[90m// Update error\u001b[39m\n \u001b[90m 230 |\u001b[39m             \u001b[36mconst\u001b[39m updates \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:227:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.344Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 227
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-601ed3220835338fb17b",
                  "file": "api/comprehensive.test.ts",
                  "line": 215,
                  "column": 9
                },
                {
                  "title": "should validate updated field values",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 28,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:253:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 253
                            },
                            "snippet": "\u001b[0m \u001b[90m 251 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 252 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 254 |\u001b[39m\n \u001b[90m 255 |\u001b[39m             \u001b[36mconst\u001b[39m invalidUpdate \u001b[33m=\u001b[39m {\n \u001b[90m 256 |\u001b[39m                 severity\u001b[33m:\u001b[39m \u001b[32m'invalid_value'\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 253
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 251 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 252 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 254 |\u001b[39m\n \u001b[90m 255 |\u001b[39m             \u001b[36mconst\u001b[39m invalidUpdate \u001b[33m=\u001b[39m {\n \u001b[90m 256 |\u001b[39m                 severity\u001b[33m:\u001b[39m \u001b[32m'invalid_value'\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:253:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.345Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 253
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7e6243b161f0fc99997b",
                  "file": "api/comprehensive.test.ts",
                  "line": 248,
                  "column": 9
                },
                {
                  "title": "should return 404 when updating non-existent error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 29,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 52,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:271:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 271
                            },
                            "snippet": "\u001b[0m \u001b[90m 269 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 270 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 271
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 269 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 270 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:271:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.352Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 271
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-065114ac3c547ee455d4",
                  "file": "api/comprehensive.test.ts",
                  "line": 266,
                  "column": 9
                }
              ]
            },
            {
              "title": "DELETE /api/errors/:id",
              "file": "api/comprehensive.test.ts",
              "line": 275,
              "column": 10,
              "specs": [
                {
                  "title": "should delete error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 30,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:288:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 29,
                              "line": 288
                            },
                            "snippet": "\u001b[0m \u001b[90m 286 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 287 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 288 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 289 |\u001b[39m\n \u001b[90m 290 |\u001b[39m             \u001b[90m// Delete error\u001b[39m\n \u001b[90m 291 |\u001b[39m             \u001b[36mconst\u001b[39m deleteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 29,
                                "line": 288
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 286 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 287 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 288 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 289 |\u001b[39m\n \u001b[90m 290 |\u001b[39m             \u001b[90m// Delete error\u001b[39m\n \u001b[90m 291 |\u001b[39m             \u001b[36mconst\u001b[39m deleteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:288:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.892Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 288
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-746cee052db933fa5c87",
                  "file": "api/comprehensive.test.ts",
                  "line": 276,
                  "column": 9
                },
                {
                  "title": "should return 404 when deleting non-existent error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 31,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:301:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 301
                            },
                            "snippet": "\u001b[0m \u001b[90m 299 |\u001b[39m         test(\u001b[32m'should return 404 when deleting non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 300 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 303 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 304 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 301
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 299 |\u001b[39m         test(\u001b[32m'should return 404 when deleting non-existent error'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 300 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/99999999'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 301 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 302 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 303 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 304 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:301:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.891Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 301
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-328778905051f6724cce",
                  "file": "api/comprehensive.test.ts",
                  "line": 299,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/errors/bulk",
              "file": "api/comprehensive.test.ts",
              "line": 305,
              "column": 10,
              "specs": [
                {
                  "title": "should create multiple errors in bulk",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 33,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:317:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 317
                            },
                            "snippet": "\u001b[0m \u001b[90m 315 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 316 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 317 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 318 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 319 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'created'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 320 |\u001b[39m             expect(result\u001b[33m.\u001b[39mcreated)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 317
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 315 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 316 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 317 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 318 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 319 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'created'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 320 |\u001b[39m             expect(result\u001b[33m.\u001b[39mcreated)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:317:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.908Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 317
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-4628e2fd6444fb095756",
                  "file": "api/comprehensive.test.ts",
                  "line": 306,
                  "column": 9
                },
                {
                  "title": "should handle validation errors in bulk creation",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 32,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:335:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 335
                            },
                            "snippet": "\u001b[0m \u001b[90m 333 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 334 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'invalidIndices'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 335
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 333 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 334 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'invalidIndices'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:335:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.895Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 335
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-56fc2bb8f533dcdd3c2a",
                  "file": "api/comprehensive.test.ts",
                  "line": 325,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/errors/stats",
              "file": "api/comprehensive.test.ts",
              "line": 341,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve error statistics",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 34,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:345:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 345
                            },
                            "snippet": "\u001b[0m \u001b[90m 343 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/stats'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 344 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 345 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 346 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 347 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 348 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'bySeverity'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 345
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 343 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/stats'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 344 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 345 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 346 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 347 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'total'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 348 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'bySeverity'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:345:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:44.898Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 345
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-ba04c32485f700228dcb",
                  "file": "api/comprehensive.test.ts",
                  "line": 342,
                  "column": 9
                },
                {
                  "title": "should filter statistics by date range",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 35,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:359:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 359
                            },
                            "snippet": "\u001b[0m \u001b[90m 357 |\u001b[39m             )\u001b[33m;\u001b[39m\n \u001b[90m 358 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 359 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 360 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 361 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'dateRange'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 362 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 359
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 357 |\u001b[39m             )\u001b[33m;\u001b[39m\n \u001b[90m 358 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 359 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 360 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 361 |\u001b[39m             expect(stats)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'dateRange'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 362 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:359:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.423Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 359
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-54ae76231542edb36fdb",
                  "file": "api/comprehensive.test.ts",
                  "line": 354,
                  "column": 9
                },
                {
                  "title": "should provide statistics by store",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 36,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:367:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 367
                            },
                            "snippet": "\u001b[0m \u001b[90m 365 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/stats/by-store'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 366 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 367 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 368 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 369 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(stats))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 370 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 367
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 365 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/stats/by-store'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 366 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 367 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 368 |\u001b[39m             \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 369 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(stats))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 370 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:367:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.417Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 367
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d716bfbf07c932e81dc7",
                  "file": "api/comprehensive.test.ts",
                  "line": 364,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/errors/export",
              "file": "api/comprehensive.test.ts",
              "line": 373,
              "column": 10,
              "specs": [
                {
                  "title": "should export errors as CSV",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 37,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:382:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 382
                            },
                            "snippet": "\u001b[0m \u001b[90m 380 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 382 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 383 |\u001b[39m             \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n \u001b[90m 384 |\u001b[39m             expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'text/csv'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 385 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 382
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 380 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 382 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 383 |\u001b[39m             \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n \u001b[90m 384 |\u001b[39m             expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'text/csv'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 385 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:382:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.419Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 382
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-904773b3ad9efcd58cea",
                  "file": "api/comprehensive.test.ts",
                  "line": 374,
                  "column": 9
                },
                {
                  "title": "should export errors as JSON",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 38,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:395:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 395
                            },
                            "snippet": "\u001b[0m \u001b[90m 393 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 394 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 395 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 396 |\u001b[39m             \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n \u001b[90m 397 |\u001b[39m             expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'application/json'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 398 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 395
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 393 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 394 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 395 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 396 |\u001b[39m             \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n \u001b[90m 397 |\u001b[39m             expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'application/json'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 398 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:395:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.427Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 395
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-17e6161d6ce96b2f14bd",
                  "file": "api/comprehensive.test.ts",
                  "line": 387,
                  "column": 9
                },
                {
                  "title": "should export errors as Excel",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 39,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 40,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:408:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 408
                            },
                            "snippet": "\u001b[0m \u001b[90m 406 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 407 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 408 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 409 |\u001b[39m             \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n \u001b[90m 410 |\u001b[39m             expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'spreadsheet'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 411 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 408
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 406 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 407 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 408 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 409 |\u001b[39m             \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n \u001b[90m 410 |\u001b[39m             expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'spreadsheet'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 411 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:408:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.437Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 408
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-41e940fabb361ca58f11",
                  "file": "api/comprehensive.test.ts",
                  "line": 400,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - Store & Kiosk Management",
          "file": "api/comprehensive.test.ts",
          "line": 415,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "GET /api/stores",
              "file": "api/comprehensive.test.ts",
              "line": 416,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve all stores",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 40,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:420:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 420
                            },
                            "snippet": "\u001b[0m \u001b[90m 418 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/stores'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 419 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 420 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 421 |\u001b[39m             \u001b[36mconst\u001b[39m stores \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 422 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(stores))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 423 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 420
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 418 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/stores'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 419 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 420 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 421 |\u001b[39m             \u001b[36mconst\u001b[39m stores \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 422 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(stores))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 423 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:420:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.976Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 420
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-97e76cc571864610d341",
                  "file": "api/comprehensive.test.ts",
                  "line": 417,
                  "column": 9
                },
                {
                  "title": "should support pagination for stores",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 43,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:428:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 428
                            },
                            "snippet": "\u001b[0m \u001b[90m 426 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/stores?page=1&limit=20'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 427 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 428 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 429 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 430 |\u001b[39m             expect(data\u001b[33m.\u001b[39mstores\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m20\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 431 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 428
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 426 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/stores?page=1&limit=20'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 427 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 428 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 429 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 430 |\u001b[39m             expect(data\u001b[33m.\u001b[39mstores\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(\u001b[35m20\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 431 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:428:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.975Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 428
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-6eb8aefe6b1b15813a8c",
                  "file": "api/comprehensive.test.ts",
                  "line": 425,
                  "column": 9
                },
                {
                  "title": "should search stores by name",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 41,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:436:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 436
                            },
                            "snippet": "\u001b[0m \u001b[90m 434 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/stores?search=test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 436 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 437 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 438 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 439 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 436
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 434 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/stores?search=test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 436 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 437 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 438 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 439 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:436:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.980Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 436
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-490fa9f59640f0cccaf2",
                  "file": "api/comprehensive.test.ts",
                  "line": 433,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/stores",
              "file": "api/comprehensive.test.ts",
              "line": 440,
              "column": 10,
              "specs": [
                {
                  "title": "should create new store",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 42,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:453:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 453
                            },
                            "snippet": "\u001b[0m \u001b[90m 451 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 452 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 453 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 454 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 455 |\u001b[39m             expect(created\u001b[33m.\u001b[39mstoreNumber)\u001b[33m.\u001b[39mtoBe(newStore\u001b[33m.\u001b[39mstoreNumber)\u001b[33m;\u001b[39m\n \u001b[90m 456 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 453
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 451 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 452 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 453 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 454 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 455 |\u001b[39m             expect(created\u001b[33m.\u001b[39mstoreNumber)\u001b[33m.\u001b[39mtoBe(newStore\u001b[33m.\u001b[39mstoreNumber)\u001b[33m;\u001b[39m\n \u001b[90m 456 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:453:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.974Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 453
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-e9422782d1e7f3a5e30b",
                  "file": "api/comprehensive.test.ts",
                  "line": 441,
                  "column": 9
                },
                {
                  "title": "should prevent duplicate store numbers",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 44,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:471:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 471
                            },
                            "snippet": "\u001b[0m \u001b[90m 469 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 470 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 471 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m409\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Conflict\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 472 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 473 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 474 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 471
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m409\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 469 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 470 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 471 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m409\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Conflict\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 472 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 473 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 474 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:471:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:45.990Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 471
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-3418153c81d4f9022e77",
                  "file": "api/comprehensive.test.ts",
                  "line": 458,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/kiosks",
              "file": "api/comprehensive.test.ts",
              "line": 475,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve all kiosks",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 45,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:479:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 479
                            },
                            "snippet": "\u001b[0m \u001b[90m 477 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/kiosks'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 478 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 479 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 480 |\u001b[39m             \u001b[36mconst\u001b[39m kiosks \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 481 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(kiosks))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 482 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 479
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 477 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/kiosks'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 478 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 479 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 480 |\u001b[39m             \u001b[36mconst\u001b[39m kiosks \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 481 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(kiosks))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 482 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:479:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:46.526Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 479
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-ee94c2917b8301bfe09f",
                  "file": "api/comprehensive.test.ts",
                  "line": 476,
                  "column": 9
                },
                {
                  "title": "should filter kiosks by store",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 47,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:487:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 487
                            },
                            "snippet": "\u001b[0m \u001b[90m 485 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/kiosks?store=STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 486 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 487 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 488 |\u001b[39m             \u001b[36mconst\u001b[39m kiosks \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 489 |\u001b[39m             kiosks\u001b[33m.\u001b[39mforEach((kiosk\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 490 |\u001b[39m                 expect(kiosk\u001b[33m.\u001b[39mstoreNumber)\u001b[33m.\u001b[39mtoBe(\u001b[32m'STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 487
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 485 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/kiosks?store=STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 486 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 487 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 488 |\u001b[39m             \u001b[36mconst\u001b[39m kiosks \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 489 |\u001b[39m             kiosks\u001b[33m.\u001b[39mforEach((kiosk\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 490 |\u001b[39m                 expect(kiosk\u001b[33m.\u001b[39mstoreNumber)\u001b[33m.\u001b[39mtoBe(\u001b[32m'STORE-0001'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:487:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:46.526Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 487
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-a8ec92cfe72414cc40ad",
                  "file": "api/comprehensive.test.ts",
                  "line": 484,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/kiosks",
              "file": "api/comprehensive.test.ts",
              "line": 495,
              "column": 10,
              "specs": [
                {
                  "title": "should create new kiosk",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 46,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:507:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 507
                            },
                            "snippet": "\u001b[0m \u001b[90m 505 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 506 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 507 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 508 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 509 |\u001b[39m             expect(created\u001b[33m.\u001b[39mkioskNumber)\u001b[33m.\u001b[39mtoBe(newKiosk\u001b[33m.\u001b[39mkioskNumber)\u001b[33m;\u001b[39m\n \u001b[90m 510 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 507
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 505 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 506 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 507 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 508 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 509 |\u001b[39m             expect(created\u001b[33m.\u001b[39mkioskNumber)\u001b[33m.\u001b[39mtoBe(newKiosk\u001b[33m.\u001b[39mkioskNumber)\u001b[33m;\u001b[39m\n \u001b[90m 510 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:507:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:46.526Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 507
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-61a4176311800ec6f349",
                  "file": "api/comprehensive.test.ts",
                  "line": 496,
                  "column": 9
                },
                {
                  "title": "should validate kiosk belongs to valid store",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 48,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:523:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 523
                            },
                            "snippet": "\u001b[0m \u001b[90m 521 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 526 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 523
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 521 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 522 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 523 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 524 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 525 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 526 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:523:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:46.531Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 523
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7703eb43687460c0b8f2",
                  "file": "api/comprehensive.test.ts",
                  "line": 512,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - ML Training Endpoints",
          "file": "api/comprehensive.test.ts",
          "line": 528,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/ml/train",
              "file": "api/comprehensive.test.ts",
              "line": 529,
              "column": 10,
              "specs": [
                {
                  "title": "should initiate ML training job",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 49,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:542:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 542
                            },
                            "snippet": "\u001b[0m \u001b[90m 540 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'jobId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 545 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'status'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 542
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 540 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 541 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 543 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 544 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'jobId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 545 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'status'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:542:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:46.531Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 542
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-6fa65ce4f27e9ef5c75f",
                  "file": "api/comprehensive.test.ts",
                  "line": 530,
                  "column": 9
                },
                {
                  "title": "should validate training configuration",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 50,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:558:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 558
                            },
                            "snippet": "\u001b[0m \u001b[90m 556 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 557 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 558 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 559 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 560 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 561 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 558
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 556 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 557 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 558 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 559 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 560 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 561 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:558:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.055Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 558
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-a6904a680738b50ca488",
                  "file": "api/comprehensive.test.ts",
                  "line": 549,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/ml/jobs/:jobId",
              "file": "api/comprehensive.test.ts",
              "line": 562,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve training job status",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 51,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:575:25",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 25,
                              "line": 575
                            },
                            "snippet": "\u001b[0m \u001b[90m 573 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 574 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 575 |\u001b[39m             \u001b[36mconst\u001b[39m job \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 576 |\u001b[39m\n \u001b[90m 577 |\u001b[39m             \u001b[90m// Check status\u001b[39m\n \u001b[90m 578 |\u001b[39m             \u001b[36mconst\u001b[39m statusResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/ml/jobs/${job.jobId}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 25,
                                "line": 575
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 573 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 574 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 575 |\u001b[39m             \u001b[36mconst\u001b[39m job \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 576 |\u001b[39m\n \u001b[90m 577 |\u001b[39m             \u001b[90m// Check status\u001b[39m\n \u001b[90m 578 |\u001b[39m             \u001b[36mconst\u001b[39m statusResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/ml/jobs/${job.jobId}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:575:25\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.057Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 25,
                            "line": 575
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-77ffc13add5120b669e7",
                  "file": "api/comprehensive.test.ts",
                  "line": 563,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/ml/predict",
              "file": "api/comprehensive.test.ts",
              "line": 588,
              "column": 10,
              "specs": [
                {
                  "title": "should make prediction with trained model",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 52,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:600:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 600
                            },
                            "snippet": "\u001b[0m \u001b[90m 598 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 599 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 600 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 601 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 602 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'prediction'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 603 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'confidence'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 600
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 598 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 599 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 600 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 601 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 602 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'prediction'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 603 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'confidence'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:600:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.062Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 600
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-54ddf64bf14cf5f6e78b",
                  "file": "api/comprehensive.test.ts",
                  "line": 589,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/ml/models",
              "file": "api/comprehensive.test.ts",
              "line": 609,
              "column": 10,
              "specs": [
                {
                  "title": "should list all trained models",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 53,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:613:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 613
                            },
                            "snippet": "\u001b[0m \u001b[90m 611 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/ml/models'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 612 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m             \u001b[36mconst\u001b[39m models \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 615 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(models))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 613
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 611 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/ml/models'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 612 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m             \u001b[36mconst\u001b[39m models \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 615 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(models))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:613:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.053Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 613
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-a59ec408e2746a1a1ab9",
                  "file": "api/comprehensive.test.ts",
                  "line": 610,
                  "column": 9
                },
                {
                  "title": "should filter models by status",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 54,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:621:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 621
                            },
                            "snippet": "\u001b[0m \u001b[90m 619 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/ml/models?status=active'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 620 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 621 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 622 |\u001b[39m             \u001b[36mconst\u001b[39m models \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 623 |\u001b[39m             models\u001b[33m.\u001b[39mforEach((model\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 624 |\u001b[39m                 expect(model\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'active'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 621
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 619 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/ml/models?status=active'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 620 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 621 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 622 |\u001b[39m             \u001b[36mconst\u001b[39m models \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 623 |\u001b[39m             models\u001b[33m.\u001b[39mforEach((model\u001b[33m:\u001b[39m any) \u001b[33m=>\u001b[39m {\n \u001b[90m 624 |\u001b[39m                 expect(model\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'active'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:621:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.065Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 621
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-fc881699e99686a65349",
                  "file": "api/comprehensive.test.ts",
                  "line": 618,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - AI Analysis Endpoints",
          "file": "api/comprehensive.test.ts",
          "line": 630,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/ai/analyze",
              "file": "api/comprehensive.test.ts",
              "line": 631,
              "column": 10,
              "specs": [
                {
                  "title": "should analyze error with AI",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 55,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 49,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:643:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 643
                            },
                            "snippet": "\u001b[0m \u001b[90m 641 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 642 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 643 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 644 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 645 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'analysis'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 646 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 643
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 641 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 642 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 643 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 644 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 645 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'analysis'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 646 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:643:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.574Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 643
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-28174000bf428efd047b",
                  "file": "api/comprehensive.test.ts",
                  "line": 632,
                  "column": 9
                },
                {
                  "title": "should handle timeout for long-running analysis",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 57,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 408]\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 408]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:656:32",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 32,
                              "line": 656
                            },
                            "snippet": "\u001b[0m \u001b[90m 654 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 655 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 656 |\u001b[39m             expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m408\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m \u001b[90m// OK or Timeout\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 657 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 658 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 659 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 32,
                                "line": 656
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 408]\u001b[39m\n\n\u001b[0m \u001b[90m 654 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 655 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 656 |\u001b[39m             expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m408\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m \u001b[90m// OK or Timeout\u001b[39m\n \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 657 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 658 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 659 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:656:32\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.590Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 32,
                            "line": 656
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-41bd53d73fb851a76e47",
                  "file": "api/comprehensive.test.ts",
                  "line": 650,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/ai/suggest",
              "file": "api/comprehensive.test.ts",
              "line": 660,
              "column": 10,
              "specs": [
                {
                  "title": "should provide fix suggestions",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 58,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 41,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:671:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 671
                            },
                            "snippet": "\u001b[0m \u001b[90m 669 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 670 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 671 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 672 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 673 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 674 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(result\u001b[33m.\u001b[39msuggestions))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 671
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 669 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 670 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 671 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 672 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 673 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 674 |\u001b[39m             expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(result\u001b[33m.\u001b[39msuggestions))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:671:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.582Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 671
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-daeceb24340d15d5c9e5",
                  "file": "api/comprehensive.test.ts",
                  "line": 661,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/ai/summarize",
              "file": "api/comprehensive.test.ts",
              "line": 679,
              "column": 10,
              "specs": [
                {
                  "title": "should summarize multiple errors",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 56,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 41,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:691:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 691
                            },
                            "snippet": "\u001b[0m \u001b[90m 689 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 690 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 691 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 692 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 693 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'summary'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 694 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'keyInsights'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 691
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 689 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 690 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 691 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 692 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 693 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'summary'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 694 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'keyInsights'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:691:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.581Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 691
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-56fc1244ebc327416b60",
                  "file": "api/comprehensive.test.ts",
                  "line": 680,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - File Upload & Processing",
          "file": "api/comprehensive.test.ts",
          "line": 700,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/upload",
              "file": "api/comprehensive.test.ts",
              "line": 701,
              "column": 10,
              "specs": [
                {
                  "title": "should handle Excel file upload",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 59,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:715:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 715
                            },
                            "snippet": "\u001b[0m \u001b[90m 713 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 714 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 715 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 716 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 717 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'fileId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 718 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'filename'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 715
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 713 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 714 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 715 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 716 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 717 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'fileId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 718 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'filename'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:715:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:47.575Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 715
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-90ae420cdaf98d878820",
                  "file": "api/comprehensive.test.ts",
                  "line": 702,
                  "column": 9
                },
                {
                  "title": "should reject files exceeding size limit",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 60,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 53,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m413\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m413\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:734:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 734
                            },
                            "snippet": "\u001b[0m \u001b[90m 732 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 733 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 734 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m413\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Payload Too Large\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 735 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 736 |\u001b[39m\n \u001b[90m 737 |\u001b[39m         test(\u001b[32m'should reject unsupported file types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 734
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m413\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 732 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 733 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 734 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m413\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Payload Too Large\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 735 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 736 |\u001b[39m\n \u001b[90m 737 |\u001b[39m         test(\u001b[32m'should reject unsupported file types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:734:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.127Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 734
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-38a692cfd4c3a2e81d5e",
                  "file": "api/comprehensive.test.ts",
                  "line": 721,
                  "column": 9
                },
                {
                  "title": "should reject unsupported file types",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 62,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:750:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 750
                            },
                            "snippet": "\u001b[0m \u001b[90m 748 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 749 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 750 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 751 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 752 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 753 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 750
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 748 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 749 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 750 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 751 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 752 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 753 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:750:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.138Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 750
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d570e7b2e3e123999a69",
                  "file": "api/comprehensive.test.ts",
                  "line": 737,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/uploads/:fileId",
              "file": "api/comprehensive.test.ts",
              "line": 754,
              "column": 10,
              "specs": [
                {
                  "title": "should retrieve upload status",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 63,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:764:28",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 28,
                              "line": 764
                            },
                            "snippet": "\u001b[0m \u001b[90m 762 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 763 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 764 |\u001b[39m             \u001b[36mconst\u001b[39m upload \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 765 |\u001b[39m\n \u001b[90m 766 |\u001b[39m             \u001b[90m// Check status\u001b[39m\n \u001b[90m 767 |\u001b[39m             \u001b[36mconst\u001b[39m statusResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/uploads/${upload.fileId}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 28,
                                "line": 764
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 762 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 763 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 764 |\u001b[39m             \u001b[36mconst\u001b[39m upload \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 765 |\u001b[39m\n \u001b[90m 766 |\u001b[39m             \u001b[90m// Check status\u001b[39m\n \u001b[90m 767 |\u001b[39m             \u001b[36mconst\u001b[39m statusResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m`http://localhost:5000/api/uploads/${upload.fileId}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:764:28\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.127Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 764
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-14fb6c543c1e192b9f54",
                  "file": "api/comprehensive.test.ts",
                  "line": 755,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - Authentication & Authorization",
          "file": "api/comprehensive.test.ts",
          "line": 778,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/auth/firebase",
              "file": "api/comprehensive.test.ts",
              "line": 779,
              "column": 10,
              "specs": [
                {
                  "title": "should authenticate with valid Firebase token",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 61,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:787:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 35,
                              "line": 787
                            },
                            "snippet": "\u001b[0m \u001b[90m 785 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 786 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 787 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 788 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 789 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 790 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'email'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 35,
                                "line": 787
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 785 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 786 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 787 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 788 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 789 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 790 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'email'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:787:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.129Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 787
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-7d77b0ca93ac71aa3d6e",
                  "file": "api/comprehensive.test.ts",
                  "line": 780,
                  "column": 9
                },
                {
                  "title": "should reject invalid token",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 64,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:801:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 801
                            },
                            "snippet": "\u001b[0m \u001b[90m 799 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 800 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 801 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 802 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 803 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 804 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 801
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 799 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 800 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 801 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 802 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 803 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 804 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:801:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.127Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 801
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-d2cd385176120317cca6",
                  "file": "api/comprehensive.test.ts",
                  "line": 794,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/auth/logout",
              "file": "api/comprehensive.test.ts",
              "line": 805,
              "column": 10,
              "specs": [
                {
                  "title": "should logout user",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 65,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:812:26",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 26,
                              "line": 812
                            },
                            "snippet": "\u001b[0m \u001b[90m 810 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 812 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 813 |\u001b[39m\n \u001b[90m 814 |\u001b[39m             \u001b[90m// Logout\u001b[39m\n \u001b[90m 815 |\u001b[39m             \u001b[36mconst\u001b[39m logoutResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/auth/logout'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 26,
                                "line": 812
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 810 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 812 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 813 |\u001b[39m\n \u001b[90m 814 |\u001b[39m             \u001b[90m// Logout\u001b[39m\n \u001b[90m 815 |\u001b[39m             \u001b[36mconst\u001b[39m logoutResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/auth/logout'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:812:26\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.675Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 26,
                            "line": 812
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-6a589d83eb93f3ce0abe",
                  "file": "api/comprehensive.test.ts",
                  "line": 806,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/admin/users",
              "file": "api/comprehensive.test.ts",
              "line": 825,
              "column": 10,
              "specs": [
                {
                  "title": "should require admin role",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 66,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 48,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:828:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 39,
                              "line": 828
                            },
                            "snippet": "\u001b[0m \u001b[90m 826 |\u001b[39m         test(\u001b[32m'should require admin role'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 827 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/admin/users'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 828 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 829 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 830 |\u001b[39m\n \u001b[90m 831 |\u001b[39m         test(\u001b[32m'should allow access with admin token'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 39,
                                "line": 828
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 826 |\u001b[39m         test(\u001b[32m'should require admin role'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 827 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/admin/users'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 828 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 829 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 830 |\u001b[39m\n \u001b[90m 831 |\u001b[39m         test(\u001b[32m'should allow access with admin token'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:828:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.671Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 828
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-14bd4738c54161693fbf",
                  "file": "api/comprehensive.test.ts",
                  "line": 826,
                  "column": 9
                },
                {
                  "title": "should allow access with admin token",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 67,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:837:26",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                              "column": 26,
                              "line": 837
                            },
                            "snippet": "\u001b[0m \u001b[90m 835 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 836 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 837 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 838 |\u001b[39m\n \u001b[90m 839 |\u001b[39m             \u001b[90m// Access admin endpoint\u001b[39m\n \u001b[90m 840 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/admin/users'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                                "column": 26,
                                "line": 837
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 835 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 836 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 837 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 838 |\u001b[39m\n \u001b[90m 839 |\u001b[39m             \u001b[90m// Access admin endpoint\u001b[39m\n \u001b[90m 840 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/admin/users'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:837:26\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:48.689Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 26,
                            "line": 837
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e0c94fb9fd4eacb9692a-b246e1b1e50b55b90fca",
                  "file": "api/comprehensive.test.ts",
                  "line": 831,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "API Tests - Request Validation",
          "file": "api/comprehensive.test.ts",
          "line": 851,
          "column": 6,
          "specs": [
            {
              "title": "should reject requests with invalid Content-Type",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 68,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 415]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 415]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:860:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 860
                        },
                        "snippet": "\u001b[0m \u001b[90m 858 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 859 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m415\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m\n \u001b[90m 863 |\u001b[39m     test(\u001b[32m'should validate JSON syntax'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 860
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 415]\u001b[39m\n\n\u001b[0m \u001b[90m 858 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 859 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m415\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m\n \u001b[90m 863 |\u001b[39m     test(\u001b[32m'should validate JSON syntax'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:860:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:48.675Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 860
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-87886cd6877ccc4901ca",
              "file": "api/comprehensive.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "should validate JSON syntax",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 69,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:871:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 35,
                          "line": 871
                        },
                        "snippet": "\u001b[0m \u001b[90m 869 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 870 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 871 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 872 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 873 |\u001b[39m\n \u001b[90m 874 |\u001b[39m     test(\u001b[32m'should enforce maximum payload size'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 871
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 869 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 870 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 871 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 872 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 873 |\u001b[39m\n \u001b[90m 874 |\u001b[39m     test(\u001b[32m'should enforce maximum payload size'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:871:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:48.676Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 35,
                        "line": 871
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-97983da446fb9a387e6d",
              "file": "api/comprehensive.test.ts",
              "line": 863,
              "column": 5
            },
            {
              "title": "should enforce maximum payload size",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 70,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 51,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[413, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[413, 400]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:885:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 885
                        },
                        "snippet": "\u001b[0m \u001b[90m 883 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 884 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 885 |\u001b[39m         expect([\u001b[35m413\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 886 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 887 |\u001b[39m\n \u001b[90m 888 |\u001b[39m     test(\u001b[32m'should validate required headers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 885
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[413, 400]\u001b[39m\n\n\u001b[0m \u001b[90m 883 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 884 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 885 |\u001b[39m         expect([\u001b[35m413\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 886 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 887 |\u001b[39m\n \u001b[90m 888 |\u001b[39m     test(\u001b[32m'should validate required headers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:885:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.253Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 885
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-a0b91dc78fafcff9b4cf",
              "file": "api/comprehensive.test.ts",
              "line": 874,
              "column": 5
            },
            {
              "title": "should validate required headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 73,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 48,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:896:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 896
                        },
                        "snippet": "\u001b[0m \u001b[90m 894 |\u001b[39m\n \u001b[90m 895 |\u001b[39m         \u001b[90m// Should still work or return specific error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 896 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 897 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 898 |\u001b[39m\n \u001b[90m 899 |\u001b[39m     test(\u001b[32m'should handle missing request body'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 896
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n\n\u001b[0m \u001b[90m 894 |\u001b[39m\n \u001b[90m 895 |\u001b[39m         \u001b[90m// Should still work or return specific error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 896 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 897 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 898 |\u001b[39m\n \u001b[90m 899 |\u001b[39m     test(\u001b[32m'should handle missing request body'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:896:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.251Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 896
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-832c6f0693991b5ca29f",
              "file": "api/comprehensive.test.ts",
              "line": 888,
              "column": 5
            },
            {
              "title": "should handle missing request body",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 45,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:902:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 35,
                          "line": 902
                        },
                        "snippet": "\u001b[0m \u001b[90m 900 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 901 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 902 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 903 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 904 |\u001b[39m\n \u001b[90m 905 |\u001b[39m     test(\u001b[32m'should validate URL parameter formats'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 902
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 900 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 901 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 902 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 903 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 904 |\u001b[39m\n \u001b[90m 905 |\u001b[39m     test(\u001b[32m'should validate URL parameter formats'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:902:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.256Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 35,
                        "line": 902
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-eef4fd0777cdc774340d",
              "file": "api/comprehensive.test.ts",
              "line": 899,
              "column": 5
            },
            {
              "title": "should validate URL parameter formats",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 71,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 44,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:908:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 908
                        },
                        "snippet": "\u001b[0m \u001b[90m 906 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=invalid'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 907 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 908 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 909 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 910 |\u001b[39m\n \u001b[90m 911 |\u001b[39m     test(\u001b[32m'should handle special characters in query params'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 908
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n\n\u001b[0m \u001b[90m 906 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=invalid'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 907 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 908 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 909 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 910 |\u001b[39m\n \u001b[90m 911 |\u001b[39m     test(\u001b[32m'should handle special characters in query params'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:908:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.263Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 908
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-86b1e09fcf6a2af879c4",
              "file": "api/comprehensive.test.ts",
              "line": 905,
              "column": 5
            },
            {
              "title": "should handle special characters in query params",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 50,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:917:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 917
                        },
                        "snippet": "\u001b[0m \u001b[90m 915 |\u001b[39m         )\u001b[33m;\u001b[39m\n \u001b[90m 916 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 917 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 918 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 919 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 920 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 917
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n\n\u001b[0m \u001b[90m 915 |\u001b[39m         )\u001b[33m;\u001b[39m\n \u001b[90m 916 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 917 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 918 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 919 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 920 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:917:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.249Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 917
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-88377a78622cbcae7c04",
              "file": "api/comprehensive.test.ts",
              "line": 911,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Response Format Validation",
          "file": "api/comprehensive.test.ts",
          "line": 921,
          "column": 6,
          "specs": [
            {
              "title": "should return proper Content-Type headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 40,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\nReceived has value: \u001b[31mundefined\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:926:29",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 29,
                          "line": 926
                        },
                        "snippet": "\u001b[0m \u001b[90m 924 |\u001b[39m\n \u001b[90m 925 |\u001b[39m         \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 926 |\u001b[39m         expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'application/json'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 927 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 928 |\u001b[39m\n \u001b[90m 929 |\u001b[39m     test(\u001b[32m'should include CORS headers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 29,
                            "line": 926
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\nReceived has value: \u001b[31mundefined\u001b[39m\n\n\u001b[0m \u001b[90m 924 |\u001b[39m\n \u001b[90m 925 |\u001b[39m         \u001b[36mconst\u001b[39m contentType \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()[\u001b[32m'content-type'\u001b[39m]\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 926 |\u001b[39m         expect(contentType)\u001b[33m.\u001b[39mtoContain(\u001b[32m'application/json'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 927 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 928 |\u001b[39m\n \u001b[90m 929 |\u001b[39m     test(\u001b[32m'should include CORS headers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:926:29\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.824Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 29,
                        "line": 926
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-59603b3260790d73258a",
              "file": "api/comprehensive.test.ts",
              "line": 922,
              "column": 5
            },
            {
              "title": "should include CORS headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 43,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"access-control-allow-origin\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"content-length\": \"0\", \"server\": \"AirTunes/870.14.1\", \"x-apple-processingtime\": \"0\", \"x-apple-requestreceivedtimestamp\": \"418553775\"}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"access-control-allow-origin\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"content-length\": \"0\", \"server\": \"AirTunes/870.14.1\", \"x-apple-processingtime\": \"0\", \"x-apple-requestreceivedtimestamp\": \"418553775\"}\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:937:25",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 25,
                          "line": 937
                        },
                        "snippet": "\u001b[0m \u001b[90m 935 |\u001b[39m\n \u001b[90m 936 |\u001b[39m         \u001b[36mconst\u001b[39m headers \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 937 |\u001b[39m         expect(headers)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'access-control-allow-origin'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 938 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 939 |\u001b[39m\n \u001b[90m 940 |\u001b[39m     test(\u001b[32m'should return consistent error response format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 25,
                            "line": 937
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"access-control-allow-origin\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"content-length\": \"0\", \"server\": \"AirTunes/870.14.1\", \"x-apple-processingtime\": \"0\", \"x-apple-requestreceivedtimestamp\": \"418553775\"}\u001b[39m\n\n\u001b[0m \u001b[90m 935 |\u001b[39m\n \u001b[90m 936 |\u001b[39m         \u001b[36mconst\u001b[39m headers \u001b[33m=\u001b[39m response\u001b[33m.\u001b[39mheaders()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 937 |\u001b[39m         expect(headers)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'access-control-allow-origin'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 938 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 939 |\u001b[39m\n \u001b[90m 940 |\u001b[39m     test(\u001b[32m'should return consistent error response format'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:937:25\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.812Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 25,
                        "line": 937
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-8ff55776b6ac186886cf",
              "file": "api/comprehensive.test.ts",
              "line": 929,
              "column": 5
            },
            {
              "title": "should return consistent error response format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:943:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 35,
                          "line": 943
                        },
                        "snippet": "\u001b[0m \u001b[90m 941 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/999999'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 942 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 943 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 944 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 945 |\u001b[39m\n \u001b[90m 946 |\u001b[39m         expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 943
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 941 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/999999'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 942 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 943 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 944 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 945 |\u001b[39m\n \u001b[90m 946 |\u001b[39m         expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:943:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.809Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 35,
                        "line": 943
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-aa8178300c67933a5590",
              "file": "api/comprehensive.test.ts",
              "line": 940,
              "column": 5
            },
            {
              "title": "should include pagination metadata",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 42,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:953:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 31,
                          "line": 953
                        },
                        "snippet": "\u001b[0m \u001b[90m 951 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=5'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 952 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 953 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 954 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 955 |\u001b[39m\n \u001b[90m 956 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'page'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 31,
                            "line": 953
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 951 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=5'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 952 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 953 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 954 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 955 |\u001b[39m\n \u001b[90m 956 |\u001b[39m         expect(data)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'page'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:953:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.814Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 31,
                        "line": 953
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-c9ccf610c22cccca4447",
              "file": "api/comprehensive.test.ts",
              "line": 950,
              "column": 5
            },
            {
              "title": "should return timestamps in ISO format",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 44,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:965:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 31,
                          "line": 965
                        },
                        "snippet": "\u001b[0m \u001b[90m 963 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 964 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 965 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 966 |\u001b[39m         \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 967 |\u001b[39m\n \u001b[90m 968 |\u001b[39m         \u001b[36mif\u001b[39m (errors\u001b[33m.\u001b[39mlength \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m \u001b[33m&&\u001b[39m errors[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtimestamp) {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 31,
                            "line": 965
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 963 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 964 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 965 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 966 |\u001b[39m         \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 967 |\u001b[39m\n \u001b[90m 968 |\u001b[39m         \u001b[36mif\u001b[39m (errors\u001b[33m.\u001b[39mlength \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m \u001b[33m&&\u001b[39m errors[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtimestamp) {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:965:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:49.809Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 31,
                        "line": 965
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-670662d45c6fc4c92a3e",
              "file": "api/comprehensive.test.ts",
              "line": 962,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Error Handling",
          "file": "api/comprehensive.test.ts",
          "line": 975,
          "column": 6,
          "specs": [
            {
              "title": "should handle database connection errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 80,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 45,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 500, 503]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 500, 503]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:981:33",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 33,
                          "line": 981
                        },
                        "snippet": "\u001b[0m \u001b[90m 979 |\u001b[39m\n \u001b[90m 980 |\u001b[39m         \u001b[90m// Should return proper error, not crash\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 981 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m500\u001b[39m\u001b[33m,\u001b[39m \u001b[35m503\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 982 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 983 |\u001b[39m\n \u001b[90m 984 |\u001b[39m     test(\u001b[32m'should return 404 for non-existent routes'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 33,
                            "line": 981
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 500, 503]\u001b[39m\n\n\u001b[0m \u001b[90m 979 |\u001b[39m\n \u001b[90m 980 |\u001b[39m         \u001b[90m// Should return proper error, not crash\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 981 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m500\u001b[39m\u001b[33m,\u001b[39m \u001b[35m503\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 982 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 983 |\u001b[39m\n \u001b[90m 984 |\u001b[39m     test(\u001b[32m'should return 404 for non-existent routes'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:981:33\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.379Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 33,
                        "line": 981
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-9181693c77af507882e0",
              "file": "api/comprehensive.test.ts",
              "line": 976,
              "column": 5
            },
            {
              "title": "should return 404 for non-existent routes",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 47,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:987:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 35,
                          "line": 987
                        },
                        "snippet": "\u001b[0m \u001b[90m 985 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/nonexistent'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 986 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 987 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 988 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 989 |\u001b[39m\n \u001b[90m 990 |\u001b[39m     test(\u001b[32m'should handle malformed route parameters'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 987
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 985 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/nonexistent'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 986 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 987 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 988 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 989 |\u001b[39m\n \u001b[90m 990 |\u001b[39m     test(\u001b[32m'should handle malformed route parameters'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:987:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.380Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 35,
                        "line": 987
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7e9416be6950b97f8b5f",
              "file": "api/comprehensive.test.ts",
              "line": 984,
              "column": 5
            },
            {
              "title": "should handle malformed route parameters",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 404]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 404]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:993:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 993
                        },
                        "snippet": "\u001b[0m \u001b[90m 991 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/not-a-number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 992 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 993 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m404\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 994 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 995 |\u001b[39m\n \u001b[90m 996 |\u001b[39m     test(\u001b[32m'should provide helpful error messages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 993
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 404]\u001b[39m\n\n\u001b[0m \u001b[90m 991 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors/not-a-number'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 992 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 993 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m404\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 994 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 995 |\u001b[39m\n \u001b[90m 996 |\u001b[39m     test(\u001b[32m'should provide helpful error messages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:993:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.379Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 993
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-0c9ec01c29ac23f6280c",
              "file": "api/comprehensive.test.ts",
              "line": 990,
              "column": 5
            },
            {
              "title": "should provide helpful error messages",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 53,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1001:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 35,
                          "line": 1001
                        },
                        "snippet": "\u001b[0m \u001b[90m  999 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1000 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1001 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1002 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 1003 |\u001b[39m\n \u001b[90m 1004 |\u001b[39m         expect(error\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 35,
                            "line": 1001
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m  999 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1000 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1001 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1002 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 1003 |\u001b[39m\n \u001b[90m 1004 |\u001b[39m         expect(error\u001b[33m.\u001b[39mmessage)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1001:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.386Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 35,
                        "line": 1001
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-252713f1dae0a64c2e7f",
              "file": "api/comprehensive.test.ts",
              "line": 996,
              "column": 5
            },
            {
              "title": "should handle concurrent request failures",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 76,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at forEach (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1016:39)\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1015:19",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 39,
                          "line": 1016
                        },
                        "snippet": "\u001b[0m \u001b[90m 1014 |\u001b[39m\n \u001b[90m 1015 |\u001b[39m         responses\u001b[33m.\u001b[39mforEach(response \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1016 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1017 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1018 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1019 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 39,
                            "line": 1016
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 1014 |\u001b[39m\n \u001b[90m 1015 |\u001b[39m         responses\u001b[33m.\u001b[39mforEach(response \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1016 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1017 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1018 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1019 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at forEach (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1016:39)\u001b[22m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1015:19\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.379Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 39,
                        "line": 1016
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-8eb051f301e6d86ccbc8",
              "file": "api/comprehensive.test.ts",
              "line": 1008,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Rate Limiting",
          "file": "api/comprehensive.test.ts",
          "line": 1021,
          "column": 6,
          "specs": [
            {
              "title": "should implement rate limiting",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 88,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 206,
                      "error": {
                        "message": "Error: apiRequestContext.get: read ECONNRESET\nCall log:\n\u001b[2m  - → GET http://localhost:5000/api/errors\u001b[22m\n\u001b[2m    - user-agent: Playwright/1.55.1 (arm64; macOS 15.6) node/22.17\u001b[22m\n\u001b[2m    - accept: application/json\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: read ECONNRESET\nCall log:\n\u001b[2m  - → GET http://localhost:5000/api/errors\u001b[22m\n\u001b[2m    - user-agent: Playwright/1.55.1 (arm64; macOS 15.6) node/22.17\u001b[22m\n\u001b[2m    - accept: application/json\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at from (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1024:21)\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1023:32",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 21,
                          "line": 1024
                        },
                        "snippet": "\u001b[0m \u001b[90m 1022 |\u001b[39m     test(\u001b[32m'should implement rate limiting'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 1023 |\u001b[39m         \u001b[36mconst\u001b[39m requests \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m({ length\u001b[33m:\u001b[39m \u001b[35m150\u001b[39m }\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1024 |\u001b[39m             request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\n \u001b[90m      |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1025 |\u001b[39m         )\u001b[33m;\u001b[39m\n \u001b[90m 1026 |\u001b[39m\n \u001b[90m 1027 |\u001b[39m         \u001b[36mconst\u001b[39m responses \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(requests)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 21,
                            "line": 1024
                          },
                          "message": "Error: apiRequestContext.get: read ECONNRESET\nCall log:\n\u001b[2m  - → GET http://localhost:5000/api/errors\u001b[22m\n\u001b[2m    - user-agent: Playwright/1.55.1 (arm64; macOS 15.6) node/22.17\u001b[22m\n\u001b[2m    - accept: application/json\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n\u001b[0m \u001b[90m 1022 |\u001b[39m     test(\u001b[32m'should implement rate limiting'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\n \u001b[90m 1023 |\u001b[39m         \u001b[36mconst\u001b[39m requests \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m({ length\u001b[33m:\u001b[39m \u001b[35m150\u001b[39m }\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1024 |\u001b[39m             request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\n \u001b[90m      |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1025 |\u001b[39m         )\u001b[33m;\u001b[39m\n \u001b[90m 1026 |\u001b[39m\n \u001b[90m 1027 |\u001b[39m         \u001b[36mconst\u001b[39m responses \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(requests)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at from (/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1024:21)\u001b[22m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1023:32\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.972Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 21,
                        "line": 1024
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-9fcd7edcc5bc76598c34",
              "file": "api/comprehensive.test.ts",
              "line": 1022,
              "column": 5
            },
            {
              "title": "should include rate limit headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 44,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.975Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-60365289d668dea550e7",
              "file": "api/comprehensive.test.ts",
              "line": 1036,
              "column": 5
            },
            {
              "title": "should reset rate limits after time window",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 87,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1179,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 429]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 429]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1065:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 1065
                        },
                        "snippet": "\u001b[0m \u001b[90m 1063 |\u001b[39m         \u001b[90m// Should be able to make requests again\u001b[39m\n \u001b[90m 1064 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1065 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m429\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1066 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1067 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 1068 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 1065
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 429]\u001b[39m\n\n\u001b[0m \u001b[90m 1063 |\u001b[39m         \u001b[90m// Should be able to make requests again\u001b[39m\n \u001b[90m 1064 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1065 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m429\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1066 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1067 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 1068 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1065:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.974Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 1065
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-ba14ad5859432639ba45",
              "file": "api/comprehensive.test.ts",
              "line": 1052,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Pagination Edge Cases",
          "file": "api/comprehensive.test.ts",
          "line": 1069,
          "column": 6,
          "specs": [
            {
              "title": "should handle page=0",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 54,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1074:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 1074
                        },
                        "snippet": "\u001b[0m \u001b[90m 1072 |\u001b[39m\n \u001b[90m 1073 |\u001b[39m         \u001b[90m// Should either default to page 1 or return error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1074 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1075 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1076 |\u001b[39m\n \u001b[90m 1077 |\u001b[39m     test(\u001b[32m'should handle negative page numbers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 1074
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n\n\u001b[0m \u001b[90m 1072 |\u001b[39m\n \u001b[90m 1073 |\u001b[39m         \u001b[90m// Should either default to page 1 or return error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1074 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1075 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1076 |\u001b[39m\n \u001b[90m 1077 |\u001b[39m     test(\u001b[32m'should handle negative page numbers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1074:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.970Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 1074
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-e85b0025904c14a70225",
              "file": "api/comprehensive.test.ts",
              "line": 1070,
              "column": 5
            },
            {
              "title": "should handle negative page numbers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 89,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1080:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 1080
                        },
                        "snippet": "\u001b[0m \u001b[90m 1078 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=-1&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 1079 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1080 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1081 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1082 |\u001b[39m\n \u001b[90m 1083 |\u001b[39m     test(\u001b[32m'should handle excessive page numbers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 1080
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n\n\u001b[0m \u001b[90m 1078 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=-1&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 1079 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1080 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1081 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1082 |\u001b[39m\n \u001b[90m 1083 |\u001b[39m     test(\u001b[32m'should handle excessive page numbers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1080:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:50.975Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 1080
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-9cfa0fb61e5cfeb981aa",
              "file": "api/comprehensive.test.ts",
              "line": 1077,
              "column": 5
            },
            {
              "title": "should handle excessive page numbers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1086:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 31,
                          "line": 1086
                        },
                        "snippet": "\u001b[0m \u001b[90m 1084 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=999999&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 1085 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1086 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1087 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 1088 |\u001b[39m\n \u001b[90m 1089 |\u001b[39m         \u001b[90m// Should return empty array for pages beyond data\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 31,
                            "line": 1086
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 1084 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=999999&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 1085 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1086 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1087 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 1088 |\u001b[39m\n \u001b[90m 1089 |\u001b[39m         \u001b[90m// Should return empty array for pages beyond data\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1086:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:51.042Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 31,
                        "line": 1086
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-fedda9b198e9d95b5093",
              "file": "api/comprehensive.test.ts",
              "line": 1083,
              "column": 5
            },
            {
              "title": "should handle limit=0",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 90,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 42,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1096:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 1096
                        },
                        "snippet": "\u001b[0m \u001b[90m 1094 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=0'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 1095 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1096 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1097 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1098 |\u001b[39m\n \u001b[90m 1099 |\u001b[39m     test(\u001b[32m'should enforce maximum limit'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 1096
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n\n\u001b[0m \u001b[90m 1094 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=1&limit=0'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 1095 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1096 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1097 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1098 |\u001b[39m\n \u001b[90m 1099 |\u001b[39m     test(\u001b[32m'should enforce maximum limit'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1096:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:51.576Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 1096
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-a1c17a897e556c9aecb9",
              "file": "api/comprehensive.test.ts",
              "line": 1093,
              "column": 5
            },
            {
              "title": "should enforce maximum limit",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 91,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 42,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1103:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 1103
                        },
                        "snippet": "\u001b[0m \u001b[90m 1101 |\u001b[39m\n \u001b[90m 1102 |\u001b[39m         \u001b[90m// Should cap at reasonable limit or return error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1103 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1104 |\u001b[39m\n \u001b[90m 1105 |\u001b[39m         \u001b[36mif\u001b[39m (response\u001b[33m.\u001b[39mok()) {\n \u001b[90m 1106 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 1103
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n\n\u001b[0m \u001b[90m 1101 |\u001b[39m\n \u001b[90m 1102 |\u001b[39m         \u001b[90m// Should cap at reasonable limit or return error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1103 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1104 |\u001b[39m\n \u001b[90m 1105 |\u001b[39m         \u001b[36mif\u001b[39m (response\u001b[33m.\u001b[39mok()) {\n \u001b[90m 1106 |\u001b[39m             \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1103:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:51.578Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 1103
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7807fc8ce4576e4320c8",
              "file": "api/comprehensive.test.ts",
              "line": 1099,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Concurrent Operations",
          "file": "api/comprehensive.test.ts",
          "line": 1112,
          "column": 6,
          "specs": [
            {
              "title": "should handle concurrent reads safely",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 92,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 94,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1121:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 31,
                          "line": 1121
                        },
                        "snippet": "\u001b[0m \u001b[90m 1119 |\u001b[39m\n \u001b[90m 1120 |\u001b[39m         \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1121 |\u001b[39m         expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1122 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1123 |\u001b[39m\n \u001b[90m 1124 |\u001b[39m     test(\u001b[32m'should handle concurrent writes with proper isolation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 31,
                            "line": 1121
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 1119 |\u001b[39m\n \u001b[90m 1120 |\u001b[39m         \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1121 |\u001b[39m         expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1122 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1123 |\u001b[39m\n \u001b[90m 1124 |\u001b[39m     test(\u001b[32m'should handle concurrent writes with proper isolation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1121:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:51.580Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 31,
                        "line": 1121
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-a5f181f18f3fc6dac50f",
              "file": "api/comprehensive.test.ts",
              "line": 1113,
              "column": 5
            },
            {
              "title": "should handle concurrent writes with proper isolation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 93,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 60,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1138:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 31,
                          "line": 1138
                        },
                        "snippet": "\u001b[0m \u001b[90m 1136 |\u001b[39m\n \u001b[90m 1137 |\u001b[39m         \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1138 |\u001b[39m         expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1140 |\u001b[39m\n \u001b[90m 1141 |\u001b[39m     test(\u001b[32m'should prevent race conditions on updates'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 31,
                            "line": 1138
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 1136 |\u001b[39m\n \u001b[90m 1137 |\u001b[39m         \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1138 |\u001b[39m         expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1139 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1140 |\u001b[39m\n \u001b[90m 1141 |\u001b[39m     test(\u001b[32m'should prevent race conditions on updates'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1138:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:51.681Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 31,
                        "line": 1138
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-ad28bb8a9d4320e5ee9c",
              "file": "api/comprehensive.test.ts",
              "line": 1124,
              "column": 5
            },
            {
              "title": "should prevent race conditions on updates",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 94,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 40,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1151:25",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 25,
                          "line": 1151
                        },
                        "snippet": "\u001b[0m \u001b[90m 1149 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1150 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1151 |\u001b[39m         \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1152 |\u001b[39m\n \u001b[90m 1153 |\u001b[39m         \u001b[90m// Concurrent updates\u001b[39m\n \u001b[90m 1154 |\u001b[39m         \u001b[36mconst\u001b[39m updates \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m({ length\u001b[33m:\u001b[39m \u001b[35m5\u001b[39m }\u001b[33m,\u001b[39m (_\u001b[33m,\u001b[39m i) \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 25,
                            "line": 1151
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 1149 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1150 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1151 |\u001b[39m         \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1152 |\u001b[39m\n \u001b[90m 1153 |\u001b[39m         \u001b[90m// Concurrent updates\u001b[39m\n \u001b[90m 1154 |\u001b[39m         \u001b[36mconst\u001b[39m updates \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m({ length\u001b[33m:\u001b[39m \u001b[35m5\u001b[39m }\u001b[33m,\u001b[39m (_\u001b[33m,\u001b[39m i) \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1151:25\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.082Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 25,
                        "line": 1151
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7181ac850876c919c176",
              "file": "api/comprehensive.test.ts",
              "line": 1141,
              "column": 5
            }
          ]
        },
        {
          "title": "API Tests - Cache Control",
          "file": "api/comprehensive.test.ts",
          "line": 1173,
          "column": 6,
          "specs": [
            {
              "title": "should include appropriate cache headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 95,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 37,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.087Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-80992be8c6de070356dd",
              "file": "api/comprehensive.test.ts",
              "line": 1174,
              "column": 5
            },
            {
              "title": "should respect If-None-Match for conditional requests",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 41,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.128Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-7cbdb679074689c0dba7",
              "file": "api/comprehensive.test.ts",
              "line": 1185,
              "column": 5
            },
            {
              "title": "should support If-Modified-Since",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 97,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 304]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 304]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1209:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                          "column": 28,
                          "line": 1209
                        },
                        "snippet": "\u001b[0m \u001b[90m 1207 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1208 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1209 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m304\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1210 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1211 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 1212 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                            "column": 28,
                            "line": 1209
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 304]\u001b[39m\n\n\u001b[0m \u001b[90m 1207 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 1208 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1209 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m304\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m      |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 1210 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 1211 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 1212 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts:1209:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.181Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/api/comprehensive.test.ts",
                        "column": 28,
                        "line": 1209
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0c94fb9fd4eacb9692a-c4783e112f89d2f6d7c9",
              "file": "api/comprehensive.test.ts",
              "line": 1200,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "unit/utilities.test.ts",
      "file": "unit/utilities.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Unit Tests - Utilities",
          "file": "unit/utilities.test.ts",
          "line": 4,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "cn() - Class Name Utility",
              "file": "unit/utilities.test.ts",
              "line": 5,
              "column": 10,
              "specs": [
                {
                  "title": "should merge class names",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [
                        {
                          "workerIndex": 98,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:52.589Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-d2364adc91d1bc657a34",
                  "file": "unit/utilities.test.ts",
                  "line": 6,
                  "column": 9
                },
                {
                  "title": "should handle conditional classes",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [
                        {
                          "workerIndex": 99,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 11,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:52.589Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-3fb710806b163c4ab796",
                  "file": "unit/utilities.test.ts",
                  "line": 12,
                  "column": 9
                },
                {
                  "title": "should handle undefined and null values",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [
                        {
                          "workerIndex": 100,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:52.633Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-808d155c3d78500d3ebe",
                  "file": "unit/utilities.test.ts",
                  "line": 19,
                  "column": 9
                },
                {
                  "title": "should merge tailwind classes correctly",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [
                        {
                          "workerIndex": 101,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 12,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:52.634Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-e2458050eb5c7543b19e",
                  "file": "unit/utilities.test.ts",
                  "line": 25,
                  "column": 9
                }
              ]
            },
            {
              "title": "buildApiUrl() - API URL Builder",
              "file": "unit/utilities.test.ts",
              "line": 32,
              "column": 10,
              "specs": [
                {
                  "title": "should build API URL with path",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [
                        {
                          "workerIndex": 102,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 6,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:52.717Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-f38ed53de1e7bdde3361",
                  "file": "unit/utilities.test.ts",
                  "line": 33,
                  "column": 9
                },
                {
                  "title": "should handle paths without leading slash",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "unit-tests",
                      "projectName": "unit-tests",
                      "results": [
                        {
                          "workerIndex": 99,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 2,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:52.615Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "98ca3563efbcced499b4-7ffb0d3eb97b144bf2d1",
                  "file": "unit/utilities.test.ts",
                  "line": 44,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "Unit Tests - Error Handling",
          "file": "unit/utilities.test.ts",
          "line": 57,
          "column": 6,
          "specs": [
            {
              "title": "should validate error log structure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 4,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.618Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-1cc88fefaafb7648de70",
              "file": "unit/utilities.test.ts",
              "line": 58,
              "column": 5
            },
            {
              "title": "should validate severity levels",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 6,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-8a80b5a178cf5c6a7256",
              "file": "unit/utilities.test.ts",
              "line": 75,
              "column": 5
            },
            {
              "title": "should validate error types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 5,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.637Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-c9f91a17c7c37747acd2",
              "file": "unit/utilities.test.ts",
              "line": 83,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Data Validation",
          "file": "unit/utilities.test.ts",
          "line": 92,
          "column": 6,
          "specs": [
            {
              "title": "should validate file upload constraints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 3,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.647Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-a38cdfc8325c600dc594",
              "file": "unit/utilities.test.ts",
              "line": 93,
              "column": 5
            },
            {
              "title": "should validate store/kiosk number format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 7,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.654Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-546f5817792252012266",
              "file": "unit/utilities.test.ts",
              "line": 103,
              "column": 5
            },
            {
              "title": "should validate pagination parameters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.666Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-15d4ca2cfb3cf68c64f6",
              "file": "unit/utilities.test.ts",
              "line": 112,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Date/Time Utilities",
          "file": "unit/utilities.test.ts",
          "line": 122,
          "column": 6,
          "specs": [
            {
              "title": "should format dates correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 18,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.668Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-044002bc1658d95c6b26",
              "file": "unit/utilities.test.ts",
              "line": 123,
              "column": 5
            },
            {
              "title": "should calculate time differences",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.670Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-e94cb2fd43e75e6c1339",
              "file": "unit/utilities.test.ts",
              "line": 131,
              "column": 5
            },
            {
              "title": "should validate timestamp ranges",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.674Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-c7a6e8a81afafeefe2e2",
              "file": "unit/utilities.test.ts",
              "line": 141,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Filter Logic",
          "file": "unit/utilities.test.ts",
          "line": 151,
          "column": 6,
          "specs": [
            {
              "title": "should filter by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 7,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.680Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-f1d1dce78e63726142db",
              "file": "unit/utilities.test.ts",
              "line": 152,
              "column": 5
            },
            {
              "title": "should filter by multiple criteria",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.686Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-8fb7ee669b8da272463a",
              "file": "unit/utilities.test.ts",
              "line": 164,
              "column": 5
            },
            {
              "title": "should handle empty filter results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.691Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-3726fc440f2c0797b224",
              "file": "unit/utilities.test.ts",
              "line": 178,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Search Functionality",
          "file": "unit/utilities.test.ts",
          "line": 188,
          "column": 6,
          "specs": [
            {
              "title": "should search by message content",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.697Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-077db0c561f1cfc08d67",
              "file": "unit/utilities.test.ts",
              "line": 189,
              "column": 5
            },
            {
              "title": "should be case-insensitive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.701Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-11ff6b8dbac62f6aeb59",
              "file": "unit/utilities.test.ts",
              "line": 204,
              "column": 5
            },
            {
              "title": "should handle special characters in search",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.704Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-481e6d6865c87d1fcf09",
              "file": "unit/utilities.test.ts",
              "line": 217,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Sorting Logic",
          "file": "unit/utilities.test.ts",
          "line": 229,
          "column": 6,
          "specs": [
            {
              "title": "should sort by timestamp descending",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.709Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-a70a6fd638699bd6db5b",
              "file": "unit/utilities.test.ts",
              "line": 230,
              "column": 5
            },
            {
              "title": "should sort by severity priority",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.717Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-bbad336dd47590b5bbf9",
              "file": "unit/utilities.test.ts",
              "line": 245,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Export Functionality",
          "file": "unit/utilities.test.ts",
          "line": 263,
          "column": 6,
          "specs": [
            {
              "title": "should format data for CSV export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.719Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-a02684fc58a7fe05064b",
              "file": "unit/utilities.test.ts",
              "line": 264,
              "column": 5
            },
            {
              "title": "should escape special characters for CSV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.722Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-fe127203a2f9f2bf0e16",
              "file": "unit/utilities.test.ts",
              "line": 278,
              "column": 5
            },
            {
              "title": "should handle null values in CSV export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 4,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.727Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-048fb9e33fee705786ca",
              "file": "unit/utilities.test.ts",
              "line": 285,
              "column": 5
            },
            {
              "title": "should format timestamps for export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.733Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-8e970103f6fa2f79c454",
              "file": "unit/utilities.test.ts",
              "line": 296,
              "column": 5
            },
            {
              "title": "should handle large datasets for export",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 3,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.738Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-1730f06a2a191075ec6c",
              "file": "unit/utilities.test.ts",
              "line": 304,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - URL and Path Utilities",
          "file": "unit/utilities.test.ts",
          "line": 317,
          "column": 6,
          "specs": [
            {
              "title": "should validate URL format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.743Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-71b83db0f5fa755fc8fd",
              "file": "unit/utilities.test.ts",
              "line": 318,
              "column": 5
            },
            {
              "title": "should extract query parameters from URL",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.748Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-168279c6dc4c32835004",
              "file": "unit/utilities.test.ts",
              "line": 330,
              "column": 5
            },
            {
              "title": "should build URLs with query parameters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.758Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-113348991b7f958ed707",
              "file": "unit/utilities.test.ts",
              "line": 339,
              "column": 5
            },
            {
              "title": "should handle URL encoding",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 5,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.762Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-e255575fc7e935fea25e",
              "file": "unit/utilities.test.ts",
              "line": 350,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Math and Statistics",
          "file": "unit/utilities.test.ts",
          "line": 360,
          "column": 6,
          "specs": [
            {
              "title": "should calculate average severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.768Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-ef2b8ed1d12dd83e9e79",
              "file": "unit/utilities.test.ts",
              "line": 361,
              "column": 5
            },
            {
              "title": "should calculate percentage distribution",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.773Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-73b5f3c1153614332e5a",
              "file": "unit/utilities.test.ts",
              "line": 376,
              "column": 5
            },
            {
              "title": "should calculate error rate trends",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.778Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-8088eef8b05d4bb50b76",
              "file": "unit/utilities.test.ts",
              "line": 391,
              "column": 5
            },
            {
              "title": "should identify outliers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.804Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-54c6b586e80095cf9799",
              "file": "unit/utilities.test.ts",
              "line": 403,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - String Utilities",
          "file": "unit/utilities.test.ts",
          "line": 415,
          "column": 6,
          "specs": [
            {
              "title": "should truncate long messages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.808Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-f0f7162beeb794a851b9",
              "file": "unit/utilities.test.ts",
              "line": 416,
              "column": 5
            },
            {
              "title": "should sanitize HTML in error messages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 5,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.813Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-598f444eac896f73f9c0",
              "file": "unit/utilities.test.ts",
              "line": 424,
              "column": 5
            },
            {
              "title": "should format error codes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.818Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-8b5a3dbd6838e5daf765",
              "file": "unit/utilities.test.ts",
              "line": 433,
              "column": 5
            },
            {
              "title": "should convert camelCase to readable format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.824Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-61b9be4ba2f8807f0f4b",
              "file": "unit/utilities.test.ts",
              "line": 443,
              "column": 5
            },
            {
              "title": "should highlight search terms",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-6020a6f35fc1bf189e24",
              "file": "unit/utilities.test.ts",
              "line": 452,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Array Utilities",
          "file": "unit/utilities.test.ts",
          "line": 464,
          "column": 6,
          "specs": [
            {
              "title": "should remove duplicates from array",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.833Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-ff8ed409773675d52e7a",
              "file": "unit/utilities.test.ts",
              "line": 465,
              "column": 5
            },
            {
              "title": "should group errors by severity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.838Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-5cc3b839195af9316a25",
              "file": "unit/utilities.test.ts",
              "line": 479,
              "column": 5
            },
            {
              "title": "should chunk array into batches",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.842Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-2ad152623db632faa1d4",
              "file": "unit/utilities.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "should find intersection of arrays",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.846Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-706b85ad6458260d6591",
              "file": "unit/utilities.test.ts",
              "line": 510,
              "column": 5
            }
          ]
        },
        {
          "title": "Unit Tests - Validation Rules",
          "file": "unit/utilities.test.ts",
          "line": 519,
          "column": 6,
          "specs": [
            {
              "title": "should validate email format",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 100,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.852Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-bd358f5e91041727601d",
              "file": "unit/utilities.test.ts",
              "line": 520,
              "column": 5
            },
            {
              "title": "should validate phone numbers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 101,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 2,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.857Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-0d4980ce6d6248a334e6",
              "file": "unit/utilities.test.ts",
              "line": 529,
              "column": 5
            },
            {
              "title": "should validate IP addresses",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.861Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-9edd42af98e785514eb7",
              "file": "unit/utilities.test.ts",
              "line": 537,
              "column": 5
            },
            {
              "title": "should validate numeric ranges",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "unit-tests",
                  "projectName": "unit-tests",
                  "results": [
                    {
                      "workerIndex": 98,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:52.866Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "98ca3563efbcced499b4-bc18f908c861e932631d",
              "file": "unit/utilities.test.ts",
              "line": 545,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "integration/services.test.ts",
      "file": "integration/services.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Integration Tests - Services",
          "file": "integration/services.test.ts",
          "line": 3,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "ML Service Integration",
              "file": "integration/services.test.ts",
              "line": 4,
              "column": 10,
              "specs": [
                {
                  "title": "should train model with valid data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 103,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:19:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 35,
                              "line": 19
                            },
                            "snippet": "\u001b[0m \u001b[90m 17 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 20 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 21 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'modelId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 22 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'accuracy'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 35,
                                "line": 19
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 17 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 18 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 20 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 21 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'modelId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 22 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'accuracy'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:19:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.335Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 19
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-dc72943eff7c433ba9b1",
                  "file": "integration/services.test.ts",
                  "line": 5,
                  "column": 9
                },
                {
                  "title": "should make predictions with trained model",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 105,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:36:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 35,
                              "line": 36
                            },
                            "snippet": "\u001b[0m \u001b[90m 34 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 35 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 37 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 38 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'prediction'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 39 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'confidence'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 35,
                                "line": 36
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 34 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 35 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 37 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 38 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'prediction'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 39 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'confidence'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:36:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.334Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 36
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-2280da48febaaef80610",
                  "file": "integration/services.test.ts",
                  "line": 25,
                  "column": 9
                },
                {
                  "title": "should handle invalid training data",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 104,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 46,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:52:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 39,
                              "line": 52
                            },
                            "snippet": "\u001b[0m \u001b[90m 50 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 54 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 39,
                                "line": 52
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 50 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m             \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 54 |\u001b[39m             expect(error)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'error'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:52:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.333Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 39,
                            "line": 52
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-9945e8c1b1d116fc3439",
                  "file": "integration/services.test.ts",
                  "line": 42,
                  "column": 9
                }
              ]
            },
            {
              "title": "AI Service Integration",
              "file": "integration/services.test.ts",
              "line": 58,
              "column": 10,
              "specs": [
                {
                  "title": "should analyze error with AI",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 106,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:70:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 35,
                              "line": 70
                            },
                            "snippet": "\u001b[0m \u001b[90m 68 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 69 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 70 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 71 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 72 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'analysis'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 73 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 35,
                                "line": 70
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 68 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 69 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 70 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 71 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 72 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'analysis'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 73 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:70:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.336Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 70
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-e386a3497210ea929405",
                  "file": "integration/services.test.ts",
                  "line": 59,
                  "column": 9
                },
                {
                  "title": "should generate error summary",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 107,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 38,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:87:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 35,
                              "line": 87
                            },
                            "snippet": "\u001b[0m \u001b[90m 85 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 86 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 87 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 88 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'summary'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 90 |\u001b[39m             expect(result\u001b[33m.\u001b[39msummary)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 35,
                                "line": 87
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 85 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 86 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 87 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 88 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 89 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'summary'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 90 |\u001b[39m             expect(result\u001b[33m.\u001b[39msummary)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:87:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.339Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 87
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-712c53325d39405c5235",
                  "file": "integration/services.test.ts",
                  "line": 77,
                  "column": 9
                },
                {
                  "title": "should suggest fixes for error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 108,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 41,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:103:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 35,
                              "line": 103
                            },
                            "snippet": "\u001b[0m \u001b[90m 101 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 102 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuggestions\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 35,
                                "line": 103
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 101 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 102 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 103 |\u001b[39m             expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 104 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 105 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'suggestions'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 106 |\u001b[39m             expect(result\u001b[33m.\u001b[39msuggestions\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:103:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.895Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 103
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-b8698ca93158a212ad68",
                  "file": "integration/services.test.ts",
                  "line": 93,
                  "column": 9
                }
              ]
            },
            {
              "title": "Database Service Integration",
              "file": "integration/services.test.ts",
              "line": 110,
              "column": 10,
              "specs": [
                {
                  "title": "should create and retrieve error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 109,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 42,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:125:41",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 41,
                              "line": 125
                            },
                            "snippet": "\u001b[0m \u001b[90m 123 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m             expect(createResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 126 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'id'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 128 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 41,
                                "line": 125
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 123 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 124 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m             expect(createResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 126 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 127 |\u001b[39m             expect(created)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'id'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 128 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:125:41\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.897Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 41,
                            "line": 125
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-ec40ef120e5a8e29f7fd",
                  "file": "integration/services.test.ts",
                  "line": 111,
                  "column": 9
                },
                {
                  "title": "should update error status",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 110,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 40,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:150:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 29,
                              "line": 150
                            },
                            "snippet": "\u001b[0m \u001b[90m 148 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 149 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m             \u001b[90m// Update error\u001b[39m\n \u001b[90m 153 |\u001b[39m             \u001b[36mconst\u001b[39m updateResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpatch(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 29,
                                "line": 150
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 148 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 149 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 151 |\u001b[39m\n \u001b[90m 152 |\u001b[39m             \u001b[90m// Update error\u001b[39m\n \u001b[90m 153 |\u001b[39m             \u001b[36mconst\u001b[39m updateResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpatch(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:150:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.894Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 29,
                            "line": 150
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-4731b6fc543543c4bf7c",
                  "file": "integration/services.test.ts",
                  "line": 138,
                  "column": 9
                },
                {
                  "title": "should delete error",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 111,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 40,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:176:29",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 29,
                              "line": 176
                            },
                            "snippet": "\u001b[0m \u001b[90m 174 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 175 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 176 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m             \u001b[90m// Delete error\u001b[39m\n \u001b[90m 179 |\u001b[39m             \u001b[36mconst\u001b[39m deleteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 29,
                                "line": 176
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 174 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 175 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 176 |\u001b[39m             \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m             \u001b[90m// Delete error\u001b[39m\n \u001b[90m 179 |\u001b[39m             \u001b[36mconst\u001b[39m deleteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mdelete\u001b[39m(\u001b[32m`http://localhost:5000/api/errors/${created.id}`\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:176:29\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.899Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 29,
                            "line": 176
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-6e145e48a14b1f2ff836",
                  "file": "integration/services.test.ts",
                  "line": 165,
                  "column": 9
                },
                {
                  "title": "should handle concurrent database operations",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 112,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 56,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:200:35",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 35,
                              "line": 200
                            },
                            "snippet": "\u001b[0m \u001b[90m 198 |\u001b[39m             \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n \u001b[90m 199 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m             expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 201 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 202 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 35,
                                "line": 200
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 198 |\u001b[39m             \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n \u001b[90m 199 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m             expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 201 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 202 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:200:35\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:53.895Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 200
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-1fbd87d124bf1361af34",
                  "file": "integration/services.test.ts",
                  "line": 187,
                  "column": 9
                }
              ]
            },
            {
              "title": "Auth Service Integration",
              "file": "integration/services.test.ts",
              "line": 204,
              "column": 10,
              "specs": [
                {
                  "title": "should authenticate user and create session",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 113,
                          "parallelIndex": 0,
                          "status": "failed",
                          "duration": 44,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:212:39",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 39,
                              "line": 212
                            },
                            "snippet": "\u001b[0m \u001b[90m 210 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 211 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 212 |\u001b[39m             expect(authResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 213 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m authResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 214 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 215 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'sessionId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 39,
                                "line": 212
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 210 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 211 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 212 |\u001b[39m             expect(authResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 213 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m authResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 214 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'userId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 215 |\u001b[39m             expect(auth)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'sessionId'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:212:39\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:54.446Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 39,
                            "line": 212
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-95d6aaf6e2701208c0c6",
                  "file": "integration/services.test.ts",
                  "line": 205,
                  "column": 9
                },
                {
                  "title": "should reject invalid authentication",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 114,
                          "parallelIndex": 3,
                          "status": "failed",
                          "duration": 47,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:225:43",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 43,
                              "line": 225
                            },
                            "snippet": "\u001b[0m \u001b[90m 223 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 224 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m             expect(authResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 226 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m\n \u001b[90m 228 |\u001b[39m         test(\u001b[32m'should verify admin permissions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 43,
                                "line": 225
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 223 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 224 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m             expect(authResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 226 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m\n \u001b[90m 228 |\u001b[39m         test(\u001b[32m'should verify admin permissions'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:225:43\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:54.440Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 43,
                            "line": 225
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-8baf4b0cc99700632a16",
                  "file": "integration/services.test.ts",
                  "line": 218,
                  "column": 9
                },
                {
                  "title": "should verify admin permissions",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 116,
                          "parallelIndex": 4,
                          "status": "failed",
                          "duration": 43,
                          "error": {
                            "message": "SyntaxError: Unexpected end of JSON input",
                            "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:237:26",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 26,
                              "line": 237
                            },
                            "snippet": "\u001b[0m \u001b[90m 235 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 236 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 237 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m authResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 238 |\u001b[39m\n \u001b[90m 239 |\u001b[39m             \u001b[90m// Access admin endpoint\u001b[39m\n \u001b[90m 240 |\u001b[39m             \u001b[36mconst\u001b[39m adminResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/admin/users'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 26,
                                "line": 237
                              },
                              "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 235 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 236 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 237 |\u001b[39m             \u001b[36mconst\u001b[39m auth \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m authResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 238 |\u001b[39m\n \u001b[90m 239 |\u001b[39m             \u001b[90m// Access admin endpoint\u001b[39m\n \u001b[90m 240 |\u001b[39m             \u001b[36mconst\u001b[39m adminResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/admin/users'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:237:26\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:54.453Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 26,
                            "line": 237
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-7ece331a9216775bc772",
                  "file": "integration/services.test.ts",
                  "line": 228,
                  "column": 9
                }
              ]
            },
            {
              "title": "File Upload Integration",
              "file": "integration/services.test.ts",
              "line": 250,
              "column": 10,
              "specs": [
                {
                  "title": "should upload Excel file and process errors",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 115,
                          "parallelIndex": 2,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:267:41",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 41,
                              "line": 267
                            },
                            "snippet": "\u001b[0m \u001b[90m 265 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 266 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 267 |\u001b[39m             expect(uploadResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 268 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 269 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'fileId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 270 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'processedCount'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 41,
                                "line": 267
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 265 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 266 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 267 |\u001b[39m             expect(uploadResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 268 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 269 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'fileId'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 270 |\u001b[39m             expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'processedCount'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:267:41\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:54.440Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 41,
                            "line": 267
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-489ed4802eabbce29134",
                  "file": "integration/services.test.ts",
                  "line": 251,
                  "column": 9
                },
                {
                  "title": "should upload and analyze log file",
                  "ok": false,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "integration-tests",
                      "projectName": "integration-tests",
                      "results": [
                        {
                          "workerIndex": 117,
                          "parallelIndex": 1,
                          "status": "failed",
                          "duration": 45,
                          "error": {
                            "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                            "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:292:41",
                            "location": {
                              "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                              "column": 41,
                              "line": 292
                            },
                            "snippet": "\u001b[0m \u001b[90m 290 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 291 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 292 |\u001b[39m             expect(uploadResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 293 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 294 |\u001b[39m             expect(result\u001b[33m.\u001b[39mprocessedCount)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 295 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m"
                          },
                          "errors": [
                            {
                              "location": {
                                "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                                "column": 41,
                                "line": 292
                              },
                              "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 290 |\u001b[39m             })\u001b[33m;\u001b[39m\n \u001b[90m 291 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 292 |\u001b[39m             expect(uploadResponse\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 293 |\u001b[39m             \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 294 |\u001b[39m             expect(result\u001b[33m.\u001b[39mprocessedCount)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 295 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:292:41\u001b[22m"
                            }
                          ],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-10-07T05:06:54.446Z",
                          "annotations": [],
                          "attachments": [],
                          "errorLocation": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 41,
                            "line": 292
                          }
                        }
                      ],
                      "status": "unexpected"
                    }
                  ],
                  "id": "e49af6cbd4f13fa5052a-c2cf7ffb524523a0ff30",
                  "file": "integration/services.test.ts",
                  "line": 273,
                  "column": 9
                }
              ]
            }
          ]
        },
        {
          "title": "Integration Tests - Service Interactions",
          "file": "integration/services.test.ts",
          "line": 299,
          "column": 6,
          "specs": [
            {
              "title": "should chain AI analysis with ML prediction",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 119,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 44,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:311:26",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 26,
                          "line": 311
                        },
                        "snippet": "\u001b[0m \u001b[90m 309 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 310 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mconst\u001b[39m aiResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m aiResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[90m// Step 2: ML Prediction\u001b[39m\n \u001b[90m 314 |\u001b[39m         \u001b[36mconst\u001b[39m mlResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/ml/predict'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 26,
                            "line": 311
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 309 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 310 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mconst\u001b[39m aiResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m aiResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[90m// Step 2: ML Prediction\u001b[39m\n \u001b[90m 314 |\u001b[39m         \u001b[36mconst\u001b[39m mlResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/ml/predict'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:311:26\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.007Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 26,
                        "line": 311
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-aca80c91c5194d5c65a8",
              "file": "integration/services.test.ts",
              "line": 300,
              "column": 5
            },
            {
              "title": "should upload file and trigger AI analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 120,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 45,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:341:30",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 30,
                          "line": 341
                        },
                        "snippet": "\u001b[0m \u001b[90m 339 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 340 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 341 |\u001b[39m         \u001b[36mconst\u001b[39m uploadResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 342 |\u001b[39m\n \u001b[90m 343 |\u001b[39m         \u001b[90m// Trigger AI analysis on uploaded file\u001b[39m\n \u001b[90m 344 |\u001b[39m         \u001b[36mconst\u001b[39m analysisResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/ai/analyze-file'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 30,
                            "line": 341
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 339 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 340 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 341 |\u001b[39m         \u001b[36mconst\u001b[39m uploadResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m uploadResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 342 |\u001b[39m\n \u001b[90m 343 |\u001b[39m         \u001b[90m// Trigger AI analysis on uploaded file\u001b[39m\n \u001b[90m 344 |\u001b[39m         \u001b[36mconst\u001b[39m analysisResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m'http://localhost:5000/api/ai/analyze-file'\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:341:30\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.013Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 30,
                        "line": 341
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-3a56ce0e419d3503ed8c",
              "file": "integration/services.test.ts",
              "line": 326,
              "column": 5
            },
            {
              "title": "should process error through complete pipeline",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 118,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 41,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:365:23",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 23,
                          "line": 365
                        },
                        "snippet": "\u001b[0m \u001b[90m 363 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 364 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[90m// 2. AI Analysis\u001b[39m\n \u001b[90m 368 |\u001b[39m         \u001b[36mconst\u001b[39m aiResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m`http://localhost:5000/api/errors/${error.id}/analyze`\u001b[39m\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 23,
                            "line": 365
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 363 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 364 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mconst\u001b[39m error \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[90m// 2. AI Analysis\u001b[39m\n \u001b[90m 368 |\u001b[39m         \u001b[36mconst\u001b[39m aiResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m`http://localhost:5000/api/errors/${error.id}/analyze`\u001b[39m\u001b[33m,\u001b[39m {})\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:365:23\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.021Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 23,
                        "line": 365
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-b61e7c8ca8bc870fe17d",
              "file": "integration/services.test.ts",
              "line": 353,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Data Consistency",
          "file": "integration/services.test.ts",
          "line": 388,
          "column": 6,
          "specs": [
            {
              "title": "should maintain consistency across store updates",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 121,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 39,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:401:30",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 30,
                          "line": 401
                        },
                        "snippet": "\u001b[0m \u001b[90m 399 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 400 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 401 |\u001b[39m         \u001b[36mconst\u001b[39m createdStore \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createStoreResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 402 |\u001b[39m\n \u001b[90m 403 |\u001b[39m         \u001b[90m// Add errors to store\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m({ length\u001b[33m:\u001b[39m \u001b[35m5\u001b[39m }\u001b[33m,\u001b[39m (_\u001b[33m,\u001b[39m i) \u001b[33m=>\u001b[39m ({\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 30,
                            "line": 401
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 399 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 400 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 401 |\u001b[39m         \u001b[36mconst\u001b[39m createdStore \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createStoreResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 402 |\u001b[39m\n \u001b[90m 403 |\u001b[39m         \u001b[90m// Add errors to store\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m({ length\u001b[33m:\u001b[39m \u001b[35m5\u001b[39m }\u001b[33m,\u001b[39m (_\u001b[33m,\u001b[39m i) \u001b[33m=>\u001b[39m ({\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:401:30\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.021Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 30,
                        "line": 401
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-f15772e897fd1f3e9aa9",
              "file": "integration/services.test.ts",
              "line": 389,
              "column": 5
            },
            {
              "title": "should handle transaction rollback on failure",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 122,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 40,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:436:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 35,
                          "line": 436
                        },
                        "snippet": "\u001b[0m \u001b[90m 434 |\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[90m// Should rollback all if one fails\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 436 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 437 |\u001b[39m\n \u001b[90m 438 |\u001b[39m         \u001b[90m// Verify no partial data was saved\u001b[39m\n \u001b[90m 439 |\u001b[39m         \u001b[36mconst\u001b[39m listResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?search=Valid error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 436
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 434 |\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[90m// Should rollback all if one fails\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 436 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 437 |\u001b[39m\n \u001b[90m 438 |\u001b[39m         \u001b[90m// Verify no partial data was saved\u001b[39m\n \u001b[90m 439 |\u001b[39m         \u001b[36mconst\u001b[39m listResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?search=Valid error'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:436:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.023Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 35,
                        "line": 436
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-c7d5129d7b852d05bf89",
              "file": "integration/services.test.ts",
              "line": 421,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Caching and Performance",
          "file": "integration/services.test.ts",
          "line": 450,
          "column": 6,
          "specs": [
            {
              "title": "should cache frequent queries",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 123,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 49,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:464:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 31,
                          "line": 464
                        },
                        "snippet": "\u001b[0m \u001b[90m 462 |\u001b[39m         \u001b[36mconst\u001b[39m time2 \u001b[33m=\u001b[39m \u001b[33mDate\u001b[39m\u001b[33m.\u001b[39mnow() \u001b[33m-\u001b[39m start2\u001b[33m;\u001b[39m\n \u001b[90m 463 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[90m// Cached request should be faster (or similar if network is very fast)\u001b[39m\n \u001b[90m 466 |\u001b[39m         expect(time2)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(time1 \u001b[33m+\u001b[39m \u001b[35m100\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 467 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 31,
                            "line": 464
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 462 |\u001b[39m         \u001b[36mconst\u001b[39m time2 \u001b[33m=\u001b[39m \u001b[33mDate\u001b[39m\u001b[33m.\u001b[39mnow() \u001b[33m-\u001b[39m start2\u001b[33m;\u001b[39m\n \u001b[90m 463 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[90m// Cached request should be faster (or similar if network is very fast)\u001b[39m\n \u001b[90m 466 |\u001b[39m         expect(time2)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(time1 \u001b[33m+\u001b[39m \u001b[35m100\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 467 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:464:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.542Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 31,
                        "line": 464
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-ac93aa1ca1aef6f3c67c",
              "file": "integration/services.test.ts",
              "line": 451,
              "column": 5
            },
            {
              "title": "should handle rate limiting gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 126,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 147,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:478:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 31,
                          "line": 478
                        },
                        "snippet": "\u001b[0m \u001b[90m 476 |\u001b[39m         \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok() \u001b[33m||\u001b[39m r\u001b[33m.\u001b[39mstatus() \u001b[33m===\u001b[39m \u001b[35m429\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 477 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 478 |\u001b[39m         expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 479 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 480 |\u001b[39m\n \u001b[90m 481 |\u001b[39m     test(\u001b[32m'should implement query result pagination efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 31,
                            "line": 478
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 476 |\u001b[39m         \u001b[36mconst\u001b[39m allSuccessful \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok() \u001b[33m||\u001b[39m r\u001b[33m.\u001b[39mstatus() \u001b[33m===\u001b[39m \u001b[35m429\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 477 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 478 |\u001b[39m         expect(allSuccessful)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 479 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 480 |\u001b[39m\n \u001b[90m 481 |\u001b[39m     test(\u001b[32m'should implement query result pagination efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:478:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.545Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 31,
                        "line": 478
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-2ec348f0da4fc4624371",
              "file": "integration/services.test.ts",
              "line": 469,
              "column": 5
            },
            {
              "title": "should implement query result pagination efficiently",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 124,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 48,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:485:36",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 36,
                          "line": 485
                        },
                        "snippet": "\u001b[0m \u001b[90m 483 |\u001b[39m         \u001b[36mconst\u001b[39m page2Response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=2&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 484 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 485 |\u001b[39m         expect(page1Response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 486 |\u001b[39m         expect(page2Response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 487 |\u001b[39m\n \u001b[90m 488 |\u001b[39m         \u001b[36mconst\u001b[39m page1Data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page1Response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 36,
                            "line": 485
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 483 |\u001b[39m         \u001b[36mconst\u001b[39m page2Response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors?page=2&limit=10'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 484 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 485 |\u001b[39m         expect(page1Response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 486 |\u001b[39m         expect(page2Response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m 487 |\u001b[39m\n \u001b[90m 488 |\u001b[39m         \u001b[36mconst\u001b[39m page1Data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m page1Response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:485:36\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.546Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 36,
                        "line": 485
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-9b77c6f119ab584fad50",
              "file": "integration/services.test.ts",
              "line": 481,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Error Recovery",
          "file": "integration/services.test.ts",
          "line": 498,
          "column": 6,
          "specs": [
            {
              "title": "should recover from temporary database errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 125,
                      "parallelIndex": 1,
                      "status": "timedOut",
                      "duration": 30004,
                      "error": {
                        "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                        "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                      },
                      "errors": [
                        {
                          "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.545Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-756614af99a1d835cc41",
              "file": "integration/services.test.ts",
              "line": 499,
              "column": 5
            },
            {
              "title": "should handle circuit breaker pattern",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 127,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 51,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.550Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-b0ec4ac654b504c9e662",
              "file": "integration/services.test.ts",
              "line": 521,
              "column": 5
            },
            {
              "title": "should implement graceful degradation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 128,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 78,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:540:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 31,
                          "line": 540
                        },
                        "snippet": "\u001b[0m \u001b[90m 538 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 539 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 540 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 541 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 542 |\u001b[39m\n \u001b[90m 543 |\u001b[39m         \u001b[90m// Should have errors even if AI analysis is unavailable\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 31,
                            "line": 540
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 538 |\u001b[39m         \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m'http://localhost:5000/api/errors'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 539 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 540 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 541 |\u001b[39m         \u001b[36mconst\u001b[39m data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 542 |\u001b[39m\n \u001b[90m 543 |\u001b[39m         \u001b[90m// Should have errors even if AI analysis is unavailable\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:540:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.099Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 31,
                        "line": 540
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-a10929f926b60f0aacd6",
              "file": "integration/services.test.ts",
              "line": 536,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Security",
          "file": "integration/services.test.ts",
          "line": 548,
          "column": 6,
          "specs": [
            {
              "title": "should validate authentication tokens",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 129,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 77,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.081Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-77a4e7c6f98578e1d53f",
              "file": "integration/services.test.ts",
              "line": 549,
              "column": 5
            },
            {
              "title": "should prevent SQL injection in queries",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 127,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 12,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:560:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 28,
                          "line": 560
                        },
                        "snippet": "\u001b[0m \u001b[90m 558 |\u001b[39m\n \u001b[90m 559 |\u001b[39m         \u001b[90m// Should handle safely without error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 560 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 561 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     test(\u001b[32m'should sanitize user input'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 28,
                            "line": 560
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 400]\u001b[39m\n\n\u001b[0m \u001b[90m 558 |\u001b[39m\n \u001b[90m 559 |\u001b[39m         \u001b[90m// Should handle safely without error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 560 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 561 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 562 |\u001b[39m\n \u001b[90m 563 |\u001b[39m     test(\u001b[32m'should sanitize user input'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:560:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:55.622Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 28,
                        "line": 560
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-e4c60378799fd856b106",
              "file": "integration/services.test.ts",
              "line": 555,
              "column": 5
            },
            {
              "title": "should sanitize user input",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 130,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 72,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.165Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-972d2811f58579bf9006",
              "file": "integration/services.test.ts",
              "line": 563,
              "column": 5
            },
            {
              "title": "should enforce CORS policies",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 131,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 93,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.228Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-923e10d707ea5ae87b1b",
              "file": "integration/services.test.ts",
              "line": 580,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Data Validation",
          "file": "integration/services.test.ts",
          "line": 593,
          "column": 6,
          "specs": [
            {
              "title": "should validate required fields on creation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 129,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 15,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:604:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 35,
                          "line": 604
                        },
                        "snippet": "\u001b[0m \u001b[90m 602 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 603 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 604 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 605 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 606 |\u001b[39m\n \u001b[90m 607 |\u001b[39m     test(\u001b[32m'should validate data types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 604
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 602 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 603 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 604 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 605 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 606 |\u001b[39m\n \u001b[90m 607 |\u001b[39m     test(\u001b[32m'should validate data types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:604:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.181Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 35,
                        "line": 604
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-d51fe3e384c20d376b9c",
              "file": "integration/services.test.ts",
              "line": 594,
              "column": 5
            },
            {
              "title": "should validate data types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 132,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 41,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:619:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 28,
                          "line": 619
                        },
                        "snippet": "\u001b[0m \u001b[90m 617 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m     test(\u001b[32m'should validate enum values'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 28,
                            "line": 619
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[400, 422]\u001b[39m\n\n\u001b[0m \u001b[90m 617 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 618 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 619 |\u001b[39m         expect([\u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m422\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 620 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\n \u001b[90m 622 |\u001b[39m     test(\u001b[32m'should validate enum values'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:619:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.771Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 28,
                        "line": 619
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-c46804a844d9785ed68e",
              "file": "integration/services.test.ts",
              "line": 607,
              "column": 5
            },
            {
              "title": "should validate enum values",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 133,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 45,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:633:35",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 35,
                          "line": 633
                        },
                        "snippet": "\u001b[0m \u001b[90m 631 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 632 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 633 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 634 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 635 |\u001b[39m\n \u001b[90m 636 |\u001b[39m     test(\u001b[32m'should enforce maximum string lengths'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 35,
                            "line": 633
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 631 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 632 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 633 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 634 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 635 |\u001b[39m\n \u001b[90m 636 |\u001b[39m     test(\u001b[32m'should enforce maximum string lengths'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:633:35\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.772Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 35,
                        "line": 633
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-58c42c75882542623954",
              "file": "integration/services.test.ts",
              "line": 622,
              "column": 5
            },
            {
              "title": "should enforce maximum string lengths",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 130,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 30,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 201, 400, 413]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 201, 400, 413]\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:647:38",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 38,
                          "line": 647
                        },
                        "snippet": "\u001b[0m \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[90m// Should either accept and truncate, or reject\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 647 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m413\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 648 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 649 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 650 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 38,
                            "line": 647
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m403\u001b[39m\nReceived array: \u001b[31m[200, 201, 400, 413]\u001b[39m\n\n\u001b[0m \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[90m// Should either accept and truncate, or reject\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 647 |\u001b[39m         expect([\u001b[35m200\u001b[39m\u001b[33m,\u001b[39m \u001b[35m201\u001b[39m\u001b[33m,\u001b[39m \u001b[35m400\u001b[39m\u001b[33m,\u001b[39m \u001b[35m413\u001b[39m])\u001b[33m.\u001b[39mtoContain(response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 648 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 649 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 650 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:647:38\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.261Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 38,
                        "line": 647
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-a3870149dc1d63e2c958",
              "file": "integration/services.test.ts",
              "line": 636,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Webhooks and Notifications",
          "file": "integration/services.test.ts",
          "line": 651,
          "column": 6,
          "specs": [
            {
              "title": "should trigger webhook on critical error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 134,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:664:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 31,
                          "line": 664
                        },
                        "snippet": "\u001b[0m \u001b[90m 662 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 663 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m         \u001b[90m// Webhook should be triggered (check logs or webhook service)\u001b[39m\n \u001b[90m 666 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 667 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 31,
                            "line": 664
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 662 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 663 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 664 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 665 |\u001b[39m         \u001b[90m// Webhook should be triggered (check logs or webhook service)\u001b[39m\n \u001b[90m 666 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 667 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:664:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.816Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 31,
                        "line": 664
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-9380d5e8e93a72e0b8f9",
              "file": "integration/services.test.ts",
              "line": 652,
              "column": 5
            },
            {
              "title": "should send notifications for escalated errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 131,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:680:25",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 25,
                          "line": 680
                        },
                        "snippet": "\u001b[0m \u001b[90m 678 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 679 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 680 |\u001b[39m         \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 681 |\u001b[39m\n \u001b[90m 682 |\u001b[39m         \u001b[90m// Escalate error\u001b[39m\n \u001b[90m 683 |\u001b[39m         \u001b[36mconst\u001b[39m escalateResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m`http://localhost:5000/api/errors/${created.id}/escalate`\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 25,
                            "line": 680
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 678 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 679 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 680 |\u001b[39m         \u001b[36mconst\u001b[39m created \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m createResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 681 |\u001b[39m\n \u001b[90m 682 |\u001b[39m         \u001b[90m// Escalate error\u001b[39m\n \u001b[90m 683 |\u001b[39m         \u001b[36mconst\u001b[39m escalateResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[32m`http://localhost:5000/api/errors/${created.id}/escalate`\u001b[39m\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:680:25\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.351Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 25,
                        "line": 680
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-7504dc04a3d22225ee3b",
              "file": "integration/services.test.ts",
              "line": 668,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Batch Operations",
          "file": "integration/services.test.ts",
          "line": 692,
          "column": 6,
          "specs": [
            {
              "title": "should process batch updates efficiently",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 135,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 56,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:708:28",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 28,
                          "line": 708
                        },
                        "snippet": "\u001b[0m \u001b[90m 706 |\u001b[39m         \u001b[36mconst\u001b[39m allCreated \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n \u001b[90m 707 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 708 |\u001b[39m         expect(allCreated)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 709 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 710 |\u001b[39m\n \u001b[90m 711 |\u001b[39m     test(\u001b[32m'should handle batch deletion atomically'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 28,
                            "line": 708
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 706 |\u001b[39m         \u001b[36mconst\u001b[39m allCreated \u001b[33m=\u001b[39m responses\u001b[33m.\u001b[39mevery(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mok())\u001b[33m;\u001b[39m\n \u001b[90m 707 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 708 |\u001b[39m         expect(allCreated)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 709 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 710 |\u001b[39m\n \u001b[90m 711 |\u001b[39m     test(\u001b[32m'should handle batch deletion atomically'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ request }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:708:28\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:56.860Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 28,
                        "line": 708
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-b14615f6cc3078d51fd2",
              "file": "integration/services.test.ts",
              "line": 693,
              "column": 5
            },
            {
              "title": "should handle batch deletion atomically",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 136,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 54,
                      "error": {
                        "message": "SyntaxError: Unexpected end of JSON input",
                        "stack": "SyntaxError: Unexpected end of JSON input\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:723:45\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:722:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 45,
                          "line": 723
                        },
                        "snippet": "\u001b[0m \u001b[90m 721 |\u001b[39m\n \u001b[90m 722 |\u001b[39m         \u001b[36mconst\u001b[39m ids \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 723 |\u001b[39m             createResponses\u001b[33m.\u001b[39mmap(\u001b[36masync\u001b[39m r \u001b[33m=>\u001b[39m (\u001b[36mawait\u001b[39m r\u001b[33m.\u001b[39mjson())\u001b[33m.\u001b[39mid)\n \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 724 |\u001b[39m         )\u001b[33m;\u001b[39m\n \u001b[90m 725 |\u001b[39m\n \u001b[90m 726 |\u001b[39m         \u001b[90m// Batch delete\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 45,
                            "line": 723
                          },
                          "message": "SyntaxError: Unexpected end of JSON input\n\n\u001b[0m \u001b[90m 721 |\u001b[39m\n \u001b[90m 722 |\u001b[39m         \u001b[36mconst\u001b[39m ids \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mall(\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 723 |\u001b[39m             createResponses\u001b[33m.\u001b[39mmap(\u001b[36masync\u001b[39m r \u001b[33m=>\u001b[39m (\u001b[36mawait\u001b[39m r\u001b[33m.\u001b[39mjson())\u001b[33m.\u001b[39mid)\n \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 724 |\u001b[39m         )\u001b[33m;\u001b[39m\n \u001b[90m 725 |\u001b[39m\n \u001b[90m 726 |\u001b[39m         \u001b[90m// Batch delete\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:723:45\u001b[22m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:722:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.286Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 45,
                        "line": 723
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-74424d86bc4353090a06",
              "file": "integration/services.test.ts",
              "line": 711,
              "column": 5
            }
          ]
        },
        {
          "title": "Integration Tests - Real-time Updates",
          "file": "integration/services.test.ts",
          "line": 735,
          "column": 6,
          "specs": [
            {
              "title": "should support server-sent events for real-time updates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 137,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 52,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.296Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-cfd2813aecf608052577",
              "file": "integration/services.test.ts",
              "line": 736,
              "column": 5
            },
            {
              "title": "should broadcast changes to connected clients",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "integration-tests",
                  "projectName": "integration-tests",
                  "results": [
                    {
                      "workerIndex": 138,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 46,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:759:31",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                          "column": 31,
                          "line": 759
                        },
                        "snippet": "\u001b[0m \u001b[90m 757 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 758 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 759 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 760 |\u001b[39m         \u001b[90m// In real scenario, connected WebSocket/SSE clients would receive this\u001b[39m\n \u001b[90m 761 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 762 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                            "column": 31,
                            "line": 759
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[0m \u001b[90m 757 |\u001b[39m         })\u001b[33m;\u001b[39m\n \u001b[90m 758 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 759 |\u001b[39m         expect(response\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 760 |\u001b[39m         \u001b[90m// In real scenario, connected WebSocket/SSE clients would receive this\u001b[39m\n \u001b[90m 761 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 762 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts:759:31\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.347Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/integration/services.test.ts",
                        "column": 31,
                        "line": 759
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e49af6cbd4f13fa5052a-96219e6b8dda80cd15d0",
              "file": "integration/services.test.ts",
              "line": 747,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/auth.test.ts",
      "file": "e2e/auth.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication",
          "file": "e2e/auth.test.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "should display login page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 139,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 292,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.385Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-b3632ded91a045b11c71",
              "file": "e2e/auth.test.ts",
              "line": 13,
              "column": 5
            },
            {
              "title": "should login with Google successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 140,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 220,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.894Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-c9eda9c82b7415788cbd",
              "file": "e2e/auth.test.ts",
              "line": 19,
              "column": 5
            },
            {
              "title": "should display user profile after login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 141,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 222,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.895Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-1f75ccd1ca1ddf8e1733",
              "file": "e2e/auth.test.ts",
              "line": 31,
              "column": 5
            },
            {
              "title": "should logout successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 142,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 215,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:57.948Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-8a890991481bd1ef7f22",
              "file": "e2e/auth.test.ts",
              "line": 37,
              "column": 5
            },
            {
              "title": "should persist session on page reload",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 143,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 178,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:58.536Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-6264dc899dda68fedc22",
              "file": "e2e/auth.test.ts",
              "line": 47,
              "column": 5
            },
            {
              "title": "should handle authentication errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 144,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 196,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:58.834Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-3a94c8563e0ac413097a",
              "file": "e2e/auth.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should display login page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 212,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1582,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:12.999Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-fbab00aee6c2fe55223f",
              "file": "e2e/auth.test.ts",
              "line": 13,
              "column": 5
            },
            {
              "title": "should login with Google successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 213,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1454,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:13.001Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-9fb2389a1599ad1e6d95",
              "file": "e2e/auth.test.ts",
              "line": 19,
              "column": 5
            },
            {
              "title": "should display user profile after login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 214,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1874,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:13.010Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-3b3cef84cc9139f29794",
              "file": "e2e/auth.test.ts",
              "line": 31,
              "column": 5
            },
            {
              "title": "should logout successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 215,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1841,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:13.508Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-ec1d3620870656bf0dff",
              "file": "e2e/auth.test.ts",
              "line": 37,
              "column": 5
            },
            {
              "title": "should persist session on page reload",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 216,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1597,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:17.276Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-f0a01e6e80c30078ac91",
              "file": "e2e/auth.test.ts",
              "line": 47,
              "column": 5
            },
            {
              "title": "should handle authentication errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 217,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 2539,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:17.944Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-01d5d8e246cc3ea9c739",
              "file": "e2e/auth.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should display login page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 285,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 803,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:01.875Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-display-login-page-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-914144f47cfab197a478",
              "file": "e2e/auth.test.ts",
              "line": 13,
              "column": 5
            },
            {
              "title": "should login with Google successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 286,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 548,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:02.387Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-73416-in-with-Google-successfully-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-07135b151cf02c22bb8c",
              "file": "e2e/auth.test.ts",
              "line": 19,
              "column": 5
            },
            {
              "title": "should display user profile after login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 287,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 438,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:03.452Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-6a33f-ay-user-profile-after-login-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-d6482ecb3f795c282670",
              "file": "e2e/auth.test.ts",
              "line": 31,
              "column": 5
            },
            {
              "title": "should logout successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 288,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 502,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:03.852Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-logout-successfully-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-4ff1be09d627874834e7",
              "file": "e2e/auth.test.ts",
              "line": 37,
              "column": 5
            },
            {
              "title": "should persist session on page reload",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 289,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 547,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:03.878Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-sh-c5bd4-sist-session-on-page-reload-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-c5274c7c262c5c396543",
              "file": "e2e/auth.test.ts",
              "line": 47,
              "column": 5
            },
            {
              "title": "should handle authentication errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 290,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 523,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                          "column": 20,
                          "line": 10
                        },
                        "snippet": "\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                            "column": 20,
                            "line": 10
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m  8 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Authentication'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m  9 |\u001b[39m     test\u001b[33m.\u001b[39mbeforeEach(\u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'/'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 11 |\u001b[39m     })\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m     test(\u001b[32m'should display login page'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts:10:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:03.983Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-auth-Authentication-should-handle-authentication-errors-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/auth.test.ts",
                        "column": 20,
                        "line": 10
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71e7721549f39968c810-5230df695778a29b7870",
              "file": "e2e/auth.test.ts",
              "line": 55,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/dashboard.test.ts",
      "file": "e2e/dashboard.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Error Dashboard",
          "file": "e2e/dashboard.test.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "should display dashboard with error statistics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 145,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:58.836Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-66eac2686fc5e85e3da0",
              "file": "e2e/dashboard.test.ts",
              "line": 15,
              "column": 5
            },
            {
              "title": "should display error severity breakdown",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 146,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:58.865Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-7f694d232305a353b8f8",
              "file": "e2e/dashboard.test.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should filter errors by store",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 147,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:59.405Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-d1502376fd3242b17d83",
              "file": "e2e/dashboard.test.ts",
              "line": 29,
              "column": 5
            },
            {
              "title": "should filter errors by kiosk",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 148,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:59.543Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-2b61c3d196674cbceeb8",
              "file": "e2e/dashboard.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should filter errors by severity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 149,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:59.542Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-aeb5cf3cb8f28e8e6337",
              "file": "e2e/dashboard.test.ts",
              "line": 57,
              "column": 5
            },
            {
              "title": "should filter errors by date range",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 150,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:06:59.690Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-f40b4b14884b63a22d49",
              "file": "e2e/dashboard.test.ts",
              "line": 67,
              "column": 5
            },
            {
              "title": "should apply multiple filters together",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 151,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.057Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-60a309c0af3464cf3303",
              "file": "e2e/dashboard.test.ts",
              "line": 82,
              "column": 5
            },
            {
              "title": "should clear all filters",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 152,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.210Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-c5ae0043822bd0c6579f",
              "file": "e2e/dashboard.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should search errors by keyword",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 153,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.198Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-3635bc9f8236fe5dab2e",
              "file": "e2e/dashboard.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "should paginate through error results",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 154,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.316Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-e7a01f6f241068b30a71",
              "file": "e2e/dashboard.test.ts",
              "line": 127,
              "column": 5
            },
            {
              "title": "should change items per page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 155,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.701Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-d1cf5d79fc5bc6468ca5",
              "file": "e2e/dashboard.test.ts",
              "line": 139,
              "column": 5
            },
            {
              "title": "should sort errors by severity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 156,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.851Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-ed032b10ddb4df52d2ff",
              "file": "e2e/dashboard.test.ts",
              "line": 149,
              "column": 5
            },
            {
              "title": "should sort errors by date",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 157,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.850Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-6d11f8392618a9db72a3",
              "file": "e2e/dashboard.test.ts",
              "line": 162,
              "column": 5
            },
            {
              "title": "should export errors to CSV",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 158,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:00.947Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-7cb5deb57a5edacb9226",
              "file": "e2e/dashboard.test.ts",
              "line": 175,
              "column": 5
            },
            {
              "title": "should export errors to Excel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 159,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:01.374Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-9c0c8f14683cca852a3b",
              "file": "e2e/dashboard.test.ts",
              "line": 184,
              "column": 5
            },
            {
              "title": "should display error details on click",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 160,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:01.568Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-483a6641a5fb53a00432",
              "file": "e2e/dashboard.test.ts",
              "line": 193,
              "column": 5
            },
            {
              "title": "should mark error as resolved",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 161,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:01.568Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-c7c747bab05e66bb6f45",
              "file": "e2e/dashboard.test.ts",
              "line": 201,
              "column": 5
            },
            {
              "title": "should display real-time updates",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 162,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:01.607Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-119f813a93fd88814596",
              "file": "e2e/dashboard.test.ts",
              "line": 210,
              "column": 5
            },
            {
              "title": "should display dashboard with error statistics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 218,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:18.434Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-d7528c41692a9406c43b",
              "file": "e2e/dashboard.test.ts",
              "line": 15,
              "column": 5
            },
            {
              "title": "should display error severity breakdown",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 219,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 14,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:19.098Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-e48c8538daeb8f3f05a2",
              "file": "e2e/dashboard.test.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should filter errors by store",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 220,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:21.681Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-080dab5b29251a19e448",
              "file": "e2e/dashboard.test.ts",
              "line": 29,
              "column": 5
            },
            {
              "title": "should filter errors by kiosk",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 221,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:21.959Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-74178756d0ac4c1cce9e",
              "file": "e2e/dashboard.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should filter errors by severity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 222,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:22.458Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-971713bc4d82b3a3f47e",
              "file": "e2e/dashboard.test.ts",
              "line": 57,
              "column": 5
            },
            {
              "title": "should filter errors by date range",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 223,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:22.494Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-26bd456f6924c96be42e",
              "file": "e2e/dashboard.test.ts",
              "line": 67,
              "column": 5
            },
            {
              "title": "should apply multiple filters together",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 224,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:23.780Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-89f18dc23e99d686f51b",
              "file": "e2e/dashboard.test.ts",
              "line": 82,
              "column": 5
            },
            {
              "title": "should clear all filters",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 225,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:24.321Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-90065f20829912e1368c",
              "file": "e2e/dashboard.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should search errors by keyword",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 226,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:24.833Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-d254ac191427a41a809c",
              "file": "e2e/dashboard.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "should paginate through error results",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 227,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:25.371Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-6521777c5a08222b1c2a",
              "file": "e2e/dashboard.test.ts",
              "line": 127,
              "column": 5
            },
            {
              "title": "should change items per page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 228,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:25.946Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-5e14b5e65932aceb439c",
              "file": "e2e/dashboard.test.ts",
              "line": 139,
              "column": 5
            },
            {
              "title": "should sort errors by severity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 229,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:26.140Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-fead4c44f86f292b8552",
              "file": "e2e/dashboard.test.ts",
              "line": 149,
              "column": 5
            },
            {
              "title": "should sort errors by date",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 230,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:26.532Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-0d3d3686d739149d20ea",
              "file": "e2e/dashboard.test.ts",
              "line": 162,
              "column": 5
            },
            {
              "title": "should export errors to CSV",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 231,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:26.948Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-ff76b8e5bf34af971baf",
              "file": "e2e/dashboard.test.ts",
              "line": 175,
              "column": 5
            },
            {
              "title": "should export errors to Excel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 232,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:27.376Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-b67b1244be0258591c41",
              "file": "e2e/dashboard.test.ts",
              "line": 184,
              "column": 5
            },
            {
              "title": "should display error details on click",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 233,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:27.956Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-8e2478f7d883efee1e6f",
              "file": "e2e/dashboard.test.ts",
              "line": 193,
              "column": 5
            },
            {
              "title": "should mark error as resolved",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 234,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:28.416Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-14a7efe71003112f3c01",
              "file": "e2e/dashboard.test.ts",
              "line": 201,
              "column": 5
            },
            {
              "title": "should display real-time updates",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 235,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:28.910Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-6e96424f8cb789e98cf2",
              "file": "e2e/dashboard.test.ts",
              "line": 210,
              "column": 5
            },
            {
              "title": "should display dashboard with error statistics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 291,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:04.808Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-f46aa9119c3cad8cc042",
              "file": "e2e/dashboard.test.ts",
              "line": 15,
              "column": 5
            },
            {
              "title": "should display error severity breakdown",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 292,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.039Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-d2184c5a1fe1dcd10f16",
              "file": "e2e/dashboard.test.ts",
              "line": 22,
              "column": 5
            },
            {
              "title": "should filter errors by store",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 293,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.242Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-ac2e9b9bd8c1f6da5038",
              "file": "e2e/dashboard.test.ts",
              "line": 29,
              "column": 5
            },
            {
              "title": "should filter errors by kiosk",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 294,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.281Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-a860d6ef7dd17521778e",
              "file": "e2e/dashboard.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should filter errors by severity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 295,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.366Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-6b54333a3360d5da9be9",
              "file": "e2e/dashboard.test.ts",
              "line": 57,
              "column": 5
            },
            {
              "title": "should filter errors by date range",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 296,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.604Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-d79481ad8269da3ad78a",
              "file": "e2e/dashboard.test.ts",
              "line": 67,
              "column": 5
            },
            {
              "title": "should apply multiple filters together",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 297,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.788Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-b33c055f1c9ef8ce44f8",
              "file": "e2e/dashboard.test.ts",
              "line": 82,
              "column": 5
            },
            {
              "title": "should clear all filters",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 298,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:05.999Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-8846963240c2b7c84020",
              "file": "e2e/dashboard.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should search errors by keyword",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 299,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.050Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-5cb722b4e150d3510242",
              "file": "e2e/dashboard.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "should paginate through error results",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 300,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.111Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-0b8efd45671e0da4dc40",
              "file": "e2e/dashboard.test.ts",
              "line": 127,
              "column": 5
            },
            {
              "title": "should change items per page",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 301,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.372Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-e9973cdacc9f20017111",
              "file": "e2e/dashboard.test.ts",
              "line": 139,
              "column": 5
            },
            {
              "title": "should sort errors by severity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 302,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.539Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-07051b18b6f474512d68",
              "file": "e2e/dashboard.test.ts",
              "line": 149,
              "column": 5
            },
            {
              "title": "should sort errors by date",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 303,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.742Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-f861bbbabfc65308e83d",
              "file": "e2e/dashboard.test.ts",
              "line": 162,
              "column": 5
            },
            {
              "title": "should export errors to CSV",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 304,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.782Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-618ea668bc398ccc7c0e",
              "file": "e2e/dashboard.test.ts",
              "line": 175,
              "column": 5
            },
            {
              "title": "should export errors to Excel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 305,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:06.851Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-f3be03b3280ce9cce861",
              "file": "e2e/dashboard.test.ts",
              "line": 184,
              "column": 5
            },
            {
              "title": "should display error details on click",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 306,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:07.127Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-b7d5c32a28df568834bf",
              "file": "e2e/dashboard.test.ts",
              "line": 193,
              "column": 5
            },
            {
              "title": "should mark error as resolved",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 307,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:07.276Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-305bf1febebdb463c5ec",
              "file": "e2e/dashboard.test.ts",
              "line": 201,
              "column": 5
            },
            {
              "title": "should display real-time updates",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 308,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:07.531Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e0ba9c440050f50f3237-c021d5d1af59e35161f7",
              "file": "e2e/dashboard.test.ts",
              "line": 210,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/enhanced.test.ts",
      "file": "e2e/enhanced.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Enhanced E2E Tests - Multi-User Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "concurrent users editing same error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 163,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 188,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:13:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 21,
                          "line": 13
                        },
                        "snippet": "\u001b[0m \u001b[90m 11 |\u001b[39m\n \u001b[90m 12 |\u001b[39m         \u001b[90m// Both users login\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 21,
                            "line": 13
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 11 |\u001b[39m\n \u001b[90m 12 |\u001b[39m         \u001b[90m// Both users login\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:13:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:02.075Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-chromium/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-chromium/test-failed-1.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 21,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-9ddcbeb2e8b26c40c284",
              "file": "e2e/enhanced.test.ts",
              "line": 4,
              "column": 5
            },
            {
              "title": "collaborative analysis workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 164,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 242,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:61:23",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 23,
                          "line": 61
                        },
                        "snippet": "\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[90m// Analyst uploads and analyzes\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 23,
                            "line": 61
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[90m// Analyst uploads and analyzes\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:61:23\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:02.308Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-chromium/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-chromium/test-failed-1.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 23,
                        "line": 61
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-7464cb47eed01cd6444d",
              "file": "e2e/enhanced.test.ts",
              "line": 53,
              "column": 5
            },
            {
              "title": "concurrent users editing same error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 236,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1528,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:13:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 21,
                          "line": 13
                        },
                        "snippet": "\u001b[0m \u001b[90m 11 |\u001b[39m\n \u001b[90m 12 |\u001b[39m         \u001b[90m// Both users login\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 21,
                            "line": 13
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 11 |\u001b[39m\n \u001b[90m 12 |\u001b[39m         \u001b[90m// Both users login\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:13:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:29.338Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-firefox/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 21,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-a16dcc938dc4ec2d4be5",
              "file": "e2e/enhanced.test.ts",
              "line": 4,
              "column": 5
            },
            {
              "title": "collaborative analysis workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 237,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1436,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:61:23",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 23,
                          "line": 61
                        },
                        "snippet": "\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[90m// Analyst uploads and analyzes\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 23,
                            "line": 61
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[90m// Analyst uploads and analyzes\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:61:23\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:29.880Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-firefox/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 23,
                        "line": 61
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-865909a73d96d3da728e",
              "file": "e2e/enhanced.test.ts",
              "line": 53,
              "column": 5
            },
            {
              "title": "concurrent users editing same error",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 309,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 585,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:13:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 21,
                          "line": 13
                        },
                        "snippet": "\u001b[0m \u001b[90m 11 |\u001b[39m\n \u001b[90m 12 |\u001b[39m         \u001b[90m// Both users login\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 21,
                            "line": 13
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 11 |\u001b[39m\n \u001b[90m 12 |\u001b[39m         \u001b[90m// Both users login\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:13:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:07.535Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3d83-nt-users-editing-same-error-e2e-webkit/test-failed-2.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 21,
                        "line": 13
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-5afd08bd476d520fdca6",
              "file": "e2e/enhanced.test.ts",
              "line": 4,
              "column": 5
            },
            {
              "title": "collaborative analysis workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 310,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 532,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:61:23",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 23,
                          "line": 61
                        },
                        "snippet": "\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[90m// Analyst uploads and analyzes\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 23,
                            "line": 61
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 59 |\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[90m// Analyst uploads and analyzes\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 63 |\u001b[39m         \u001b[36mawait\u001b[39m analyst\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 64 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:61:23\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:07.599Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-webkit/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0fca-aborative-analysis-workflow-e2e-webkit/test-failed-1.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 23,
                        "line": 61
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-294a9b2f73ab72e887dd",
              "file": "e2e/enhanced.test.ts",
              "line": 53,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Error Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 115,
          "column": 6,
          "specs": [
            {
              "title": "handle network failures gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 165,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 227,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:117:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 117
                        },
                        "snippet": "\u001b[0m \u001b[90m 115 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Error Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 116 |\u001b[39m     test(\u001b[32m'handle network failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 117
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 115 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Error Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 116 |\u001b[39m     test(\u001b[32m'handle network failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:117:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:02.330Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 117
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-33415e50bd2b55e57e9a",
              "file": "e2e/enhanced.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "handle API errors and retry",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 166,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 220,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:143:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 143
                        },
                        "snippet": "\u001b[0m \u001b[90m 141 |\u001b[39m\n \u001b[90m 142 |\u001b[39m     test(\u001b[32m'handle API errors and retry'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 143 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 144 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 145 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 146 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 143
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 141 |\u001b[39m\n \u001b[90m 142 |\u001b[39m     test(\u001b[32m'handle API errors and retry'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 143 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 144 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 145 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 146 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:143:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:02.312Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 143
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-2554dc46b8ef76cb9c9e",
              "file": "e2e/enhanced.test.ts",
              "line": 142,
              "column": 5
            },
            {
              "title": "handle session timeout",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 167,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 176,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:179:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 179
                        },
                        "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     test(\u001b[32m'handle session timeout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 179
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     test(\u001b[32m'handle session timeout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:179:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:03.040Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 179
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-c5363b1b835f132e03d4",
              "file": "e2e/enhanced.test.ts",
              "line": 178,
              "column": 5
            },
            {
              "title": "handle upload errors and validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 168,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 214,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:201:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 201
                        },
                        "snippet": "\u001b[0m \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     test(\u001b[32m'handle upload errors and validation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 202 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 204 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 201
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     test(\u001b[32m'handle upload errors and validation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 202 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 204 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:201:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:03.240Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 201
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-82950d83f8902085bc3e",
              "file": "e2e/enhanced.test.ts",
              "line": 200,
              "column": 5
            },
            {
              "title": "handle ML training failures",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 169,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 230,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:238:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 238
                        },
                        "snippet": "\u001b[0m \u001b[90m 236 |\u001b[39m\n \u001b[90m 237 |\u001b[39m     test(\u001b[32m'handle ML training failures'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 238 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 239 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 241 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 238
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 236 |\u001b[39m\n \u001b[90m 237 |\u001b[39m     test(\u001b[32m'handle ML training failures'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 238 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 239 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 241 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:238:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:03.249Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 238
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e3a4b2d5e2ab6f3ef0de",
              "file": "e2e/enhanced.test.ts",
              "line": 237,
              "column": 5
            },
            {
              "title": "handle network failures gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 238,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1479,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:117:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 117
                        },
                        "snippet": "\u001b[0m \u001b[90m 115 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Error Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 116 |\u001b[39m     test(\u001b[32m'handle network failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 117
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 115 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Error Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 116 |\u001b[39m     test(\u001b[32m'handle network failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:117:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:30.388Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 117
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-ca10caddcfd1863d7cc6",
              "file": "e2e/enhanced.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "handle API errors and retry",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 239,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1461,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:143:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 143
                        },
                        "snippet": "\u001b[0m \u001b[90m 141 |\u001b[39m\n \u001b[90m 142 |\u001b[39m     test(\u001b[32m'handle API errors and retry'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 143 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 144 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 145 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 146 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 143
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 141 |\u001b[39m\n \u001b[90m 142 |\u001b[39m     test(\u001b[32m'handle API errors and retry'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 143 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 144 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 145 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 146 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:143:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:30.804Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 143
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-af7824355af17074fbb5",
              "file": "e2e/enhanced.test.ts",
              "line": 142,
              "column": 5
            },
            {
              "title": "handle session timeout",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 240,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1362,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:179:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 179
                        },
                        "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     test(\u001b[32m'handle session timeout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 179
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     test(\u001b[32m'handle session timeout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:179:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:31.348Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 179
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-7cdb3e60f2717c9a54ab",
              "file": "e2e/enhanced.test.ts",
              "line": 178,
              "column": 5
            },
            {
              "title": "handle upload errors and validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 241,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1253,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:201:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 201
                        },
                        "snippet": "\u001b[0m \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     test(\u001b[32m'handle upload errors and validation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 202 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 204 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 201
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     test(\u001b[32m'handle upload errors and validation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 202 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 204 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:201:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:33.439Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 201
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-345a49477d2f8c4b6d23",
              "file": "e2e/enhanced.test.ts",
              "line": 200,
              "column": 5
            },
            {
              "title": "handle ML training failures",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 242,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1323,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:238:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 238
                        },
                        "snippet": "\u001b[0m \u001b[90m 236 |\u001b[39m\n \u001b[90m 237 |\u001b[39m     test(\u001b[32m'handle ML training failures'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 238 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 239 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 241 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 238
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 236 |\u001b[39m\n \u001b[90m 237 |\u001b[39m     test(\u001b[32m'handle ML training failures'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 238 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 239 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 241 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:238:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:33.900Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 238
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-581390ffdf2104ff81fb",
              "file": "e2e/enhanced.test.ts",
              "line": 237,
              "column": 5
            },
            {
              "title": "handle network failures gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 311,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 528,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:117:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 117
                        },
                        "snippet": "\u001b[0m \u001b[90m 115 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Error Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 116 |\u001b[39m     test(\u001b[32m'handle network failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 117
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 115 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Error Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 116 |\u001b[39m     test(\u001b[32m'handle network failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page\u001b[33m,\u001b[39m context }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 117 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 118 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 119 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 120 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:117:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:07.969Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e27c1-network-failures-gracefully-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 117
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-deeee9bb97e56fd11ffd",
              "file": "e2e/enhanced.test.ts",
              "line": 116,
              "column": 5
            },
            {
              "title": "handle API errors and retry",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 312,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 450,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:143:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 143
                        },
                        "snippet": "\u001b[0m \u001b[90m 141 |\u001b[39m\n \u001b[90m 142 |\u001b[39m     test(\u001b[32m'handle API errors and retry'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 143 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 144 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 145 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 146 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 143
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 141 |\u001b[39m\n \u001b[90m 142 |\u001b[39m     test(\u001b[32m'handle API errors and retry'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 143 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 144 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 145 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 146 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:143:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:08.142Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--58667-handle-API-errors-and-retry-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 143
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-68daa71cf8c5bc6df927",
              "file": "e2e/enhanced.test.ts",
              "line": 142,
              "column": 5
            },
            {
              "title": "handle session timeout",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 313,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 445,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:179:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 179
                        },
                        "snippet": "\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     test(\u001b[32m'handle session timeout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 179
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 177 |\u001b[39m\n \u001b[90m 178 |\u001b[39m     test(\u001b[32m'handle session timeout'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 179 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 180 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 181 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 182 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:179:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:08.653Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4f68f-rios-handle-session-timeout-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 179
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-4ab62182d469231afa1f",
              "file": "e2e/enhanced.test.ts",
              "line": 178,
              "column": 5
            },
            {
              "title": "handle upload errors and validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 314,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 523,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:201:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 201
                        },
                        "snippet": "\u001b[0m \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     test(\u001b[32m'handle upload errors and validation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 202 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 204 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 201
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 199 |\u001b[39m\n \u001b[90m 200 |\u001b[39m     test(\u001b[32m'handle upload errors and validation'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 202 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 203 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 204 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:201:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:09.215Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fe960-pload-errors-and-validation-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 201
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-619756d6d0a619a13b73",
              "file": "e2e/enhanced.test.ts",
              "line": 200,
              "column": 5
            },
            {
              "title": "handle ML training failures",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 315,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 514,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:238:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 238
                        },
                        "snippet": "\u001b[0m \u001b[90m 236 |\u001b[39m\n \u001b[90m 237 |\u001b[39m     test(\u001b[32m'handle ML training failures'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 238 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 239 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 241 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 238
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 236 |\u001b[39m\n \u001b[90m 237 |\u001b[39m     test(\u001b[32m'handle ML training failures'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 238 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 239 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 240 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 241 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:238:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:09.217Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--1017e-handle-ML-training-failures-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 238
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-4a334f7cb325f5fa0a56",
              "file": "e2e/enhanced.test.ts",
              "line": 237,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Performance Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 269,
          "column": 6,
          "specs": [
            {
              "title": "handle large datasets efficiently",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 170,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 228,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:271:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 271
                        },
                        "snippet": "\u001b[0m \u001b[90m 269 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Performance Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 270 |\u001b[39m     test(\u001b[32m'handle large datasets efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 271
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 269 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Performance Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 270 |\u001b[39m     test(\u001b[32m'handle large datasets efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:271:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:03.284Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 271
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-575d056523ec9f9e921b",
              "file": "e2e/enhanced.test.ts",
              "line": 270,
              "column": 5
            },
            {
              "title": "handle rapid filter changes without lag",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 171,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 215,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:311:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 311
                        },
                        "snippet": "\u001b[0m \u001b[90m 309 |\u001b[39m\n \u001b[90m 310 |\u001b[39m     test(\u001b[32m'handle rapid filter changes without lag'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 311
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 309 |\u001b[39m\n \u001b[90m 310 |\u001b[39m     test(\u001b[32m'handle rapid filter changes without lag'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:311:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:03.989Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 311
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-af9570d8b0054b24d116",
              "file": "e2e/enhanced.test.ts",
              "line": 310,
              "column": 5
            },
            {
              "title": "handle concurrent API requests",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 172,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 215,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:335:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 335
                        },
                        "snippet": "\u001b[0m \u001b[90m 333 |\u001b[39m\n \u001b[90m 334 |\u001b[39m     test(\u001b[32m'handle concurrent API requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 335
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 333 |\u001b[39m\n \u001b[90m 334 |\u001b[39m     test(\u001b[32m'handle concurrent API requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:335:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:04.174Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-c5ac3ef0f8407dff6f71",
              "file": "e2e/enhanced.test.ts",
              "line": 334,
              "column": 5
            },
            {
              "title": "handle large datasets efficiently",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 243,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1379,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:271:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 271
                        },
                        "snippet": "\u001b[0m \u001b[90m 269 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Performance Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 270 |\u001b[39m     test(\u001b[32m'handle large datasets efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 271
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 269 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Performance Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 270 |\u001b[39m     test(\u001b[32m'handle large datasets efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:271:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:34.278Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 271
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e96848c2c17c482aab5c",
              "file": "e2e/enhanced.test.ts",
              "line": 270,
              "column": 5
            },
            {
              "title": "handle rapid filter changes without lag",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 244,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1364,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:311:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 311
                        },
                        "snippet": "\u001b[0m \u001b[90m 309 |\u001b[39m\n \u001b[90m 310 |\u001b[39m     test(\u001b[32m'handle rapid filter changes without lag'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 311
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 309 |\u001b[39m\n \u001b[90m 310 |\u001b[39m     test(\u001b[32m'handle rapid filter changes without lag'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:311:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:34.830Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 311
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-73497c05ded5227943de",
              "file": "e2e/enhanced.test.ts",
              "line": 310,
              "column": 5
            },
            {
              "title": "handle concurrent API requests",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 245,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1474,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:335:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 335
                        },
                        "snippet": "\u001b[0m \u001b[90m 333 |\u001b[39m\n \u001b[90m 334 |\u001b[39m     test(\u001b[32m'handle concurrent API requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 335
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 333 |\u001b[39m\n \u001b[90m 334 |\u001b[39m     test(\u001b[32m'handle concurrent API requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:335:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:35.371Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-0f38a436f0a2b6081dc3",
              "file": "e2e/enhanced.test.ts",
              "line": 334,
              "column": 5
            },
            {
              "title": "handle large datasets efficiently",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 316,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 515,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:271:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 271
                        },
                        "snippet": "\u001b[0m \u001b[90m 269 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Performance Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 270 |\u001b[39m     test(\u001b[32m'handle large datasets efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 271
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 269 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Performance Scenarios'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 270 |\u001b[39m     test(\u001b[32m'handle large datasets efficiently'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 271 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 272 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 273 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 274 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:271:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:09.504Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--a6d25--large-datasets-efficiently-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 271
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-ef0bfc5e2eb445fffb9c",
              "file": "e2e/enhanced.test.ts",
              "line": 270,
              "column": 5
            },
            {
              "title": "handle rapid filter changes without lag",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 317,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 442,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:311:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 311
                        },
                        "snippet": "\u001b[0m \u001b[90m 309 |\u001b[39m\n \u001b[90m 310 |\u001b[39m     test(\u001b[32m'handle rapid filter changes without lag'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 311
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 309 |\u001b[39m\n \u001b[90m 310 |\u001b[39m     test(\u001b[32m'handle rapid filter changes without lag'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 311 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 312 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 313 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 314 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:311:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:09.717Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--056fc--filter-changes-without-lag-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 311
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-4dc50de2fccc6d69380b",
              "file": "e2e/enhanced.test.ts",
              "line": 310,
              "column": 5
            },
            {
              "title": "handle concurrent API requests",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 318,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 419,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:335:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 335
                        },
                        "snippet": "\u001b[0m \u001b[90m 333 |\u001b[39m\n \u001b[90m 334 |\u001b[39m     test(\u001b[32m'handle concurrent API requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 335
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 333 |\u001b[39m\n \u001b[90m 334 |\u001b[39m     test(\u001b[32m'handle concurrent API requests'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 335 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 336 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 337 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 338 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:335:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:10.314Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--40746-dle-concurrent-API-requests-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-fe9d679721edde6b3534",
              "file": "e2e/enhanced.test.ts",
              "line": 334,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Security Scenarios",
          "file": "e2e/enhanced.test.ts",
          "line": 362,
          "column": 6,
          "specs": [
            {
              "title": "prevent unauthorized access to admin pages",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 173,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 213,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:365:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 365
                        },
                        "snippet": "\u001b[0m \u001b[90m 363 |\u001b[39m     test(\u001b[32m'prevent unauthorized access to admin pages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 364 |\u001b[39m         \u001b[90m// Login as regular user\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 368 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 365
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 363 |\u001b[39m     test(\u001b[32m'prevent unauthorized access to admin pages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 364 |\u001b[39m         \u001b[90m// Login as regular user\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 368 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:365:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:04.172Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 365
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-b167c3c883b2ed46086f",
              "file": "e2e/enhanced.test.ts",
              "line": 363,
              "column": 5
            },
            {
              "title": "sanitize user input to prevent XSS",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 174,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 234,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:378:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 378
                        },
                        "snippet": "\u001b[0m \u001b[90m 376 |\u001b[39m\n \u001b[90m 377 |\u001b[39m     test(\u001b[32m'sanitize user input to prevent XSS'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 379 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 380 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 378
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 376 |\u001b[39m\n \u001b[90m 377 |\u001b[39m     test(\u001b[32m'sanitize user input to prevent XSS'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 379 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 380 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:378:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:04.167Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 378
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-0cf319b8e7c52bc278b7",
              "file": "e2e/enhanced.test.ts",
              "line": 377,
              "column": 5
            },
            {
              "title": "validate CSRF protection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 175,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 266,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:403:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 403
                        },
                        "snippet": "\u001b[0m \u001b[90m 401 |\u001b[39m\n \u001b[90m 402 |\u001b[39m     test(\u001b[32m'validate CSRF protection'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 403 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 405 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 406 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 403
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 401 |\u001b[39m\n \u001b[90m 402 |\u001b[39m     test(\u001b[32m'validate CSRF protection'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 403 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 405 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 406 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:403:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:04.937Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 403
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-14992d151ecaf864e15e",
              "file": "e2e/enhanced.test.ts",
              "line": 402,
              "column": 5
            },
            {
              "title": "prevent unauthorized access to admin pages",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 246,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1288,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:365:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 365
                        },
                        "snippet": "\u001b[0m \u001b[90m 363 |\u001b[39m     test(\u001b[32m'prevent unauthorized access to admin pages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 364 |\u001b[39m         \u001b[90m// Login as regular user\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 368 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 365
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 363 |\u001b[39m     test(\u001b[32m'prevent unauthorized access to admin pages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 364 |\u001b[39m         \u001b[90m// Login as regular user\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 368 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:365:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:36.558Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 365
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e45c801b8f1a17da0ede",
              "file": "e2e/enhanced.test.ts",
              "line": 363,
              "column": 5
            },
            {
              "title": "sanitize user input to prevent XSS",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 247,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1375,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:378:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 378
                        },
                        "snippet": "\u001b[0m \u001b[90m 376 |\u001b[39m\n \u001b[90m 377 |\u001b[39m     test(\u001b[32m'sanitize user input to prevent XSS'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 379 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 380 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 378
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 376 |\u001b[39m\n \u001b[90m 377 |\u001b[39m     test(\u001b[32m'sanitize user input to prevent XSS'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 379 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 380 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:378:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:37.276Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 378
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-d1939738363029002c17",
              "file": "e2e/enhanced.test.ts",
              "line": 377,
              "column": 5
            },
            {
              "title": "validate CSRF protection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 248,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1431,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:403:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 403
                        },
                        "snippet": "\u001b[0m \u001b[90m 401 |\u001b[39m\n \u001b[90m 402 |\u001b[39m     test(\u001b[32m'validate CSRF protection'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 403 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 405 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 406 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 403
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 401 |\u001b[39m\n \u001b[90m 402 |\u001b[39m     test(\u001b[32m'validate CSRF protection'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 403 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 405 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 406 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:403:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:37.972Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 403
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-1b35068e1d4cc13da080",
              "file": "e2e/enhanced.test.ts",
              "line": 402,
              "column": 5
            },
            {
              "title": "prevent unauthorized access to admin pages",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 319,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 548,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:365:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 365
                        },
                        "snippet": "\u001b[0m \u001b[90m 363 |\u001b[39m     test(\u001b[32m'prevent unauthorized access to admin pages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 364 |\u001b[39m         \u001b[90m// Login as regular user\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 368 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 365
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 363 |\u001b[39m     test(\u001b[32m'prevent unauthorized access to admin pages'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 364 |\u001b[39m         \u001b[90m// Login as regular user\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 365 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 366 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 367 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 368 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:365:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:10.778Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6df8d-rized-access-to-admin-pages-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 365
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-cd27cefc223fe941fe04",
              "file": "e2e/enhanced.test.ts",
              "line": 363,
              "column": 5
            },
            {
              "title": "sanitize user input to prevent XSS",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 320,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 541,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:378:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 378
                        },
                        "snippet": "\u001b[0m \u001b[90m 376 |\u001b[39m\n \u001b[90m 377 |\u001b[39m     test(\u001b[32m'sanitize user input to prevent XSS'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 379 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 380 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 378
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 376 |\u001b[39m\n \u001b[90m 377 |\u001b[39m     test(\u001b[32m'sanitize user input to prevent XSS'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 378 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 379 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 380 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 381 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:378:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:10.784Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--26599-e-user-input-to-prevent-XSS-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 378
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-bfb246388b9c5b15d25a",
              "file": "e2e/enhanced.test.ts",
              "line": 377,
              "column": 5
            },
            {
              "title": "validate CSRF protection",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 321,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 509,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:403:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 403
                        },
                        "snippet": "\u001b[0m \u001b[90m 401 |\u001b[39m\n \u001b[90m 402 |\u001b[39m     test(\u001b[32m'validate CSRF protection'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 403 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 405 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 406 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 403
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 401 |\u001b[39m\n \u001b[90m 402 |\u001b[39m     test(\u001b[32m'validate CSRF protection'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 403 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 404 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 405 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 406 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:403:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:11.055Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--9a31d-os-validate-CSRF-protection-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 403
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-01e8dfc2bdc16fd8c7a5",
              "file": "e2e/enhanced.test.ts",
              "line": 402,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Data Integrity",
          "file": "e2e/enhanced.test.ts",
          "line": 431,
          "column": 6,
          "specs": [
            {
              "title": "verify data consistency across operations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 176,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 231,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:433:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 433
                        },
                        "snippet": "\u001b[0m \u001b[90m 431 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Data Integrity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 432 |\u001b[39m     test(\u001b[32m'verify data consistency across operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 433 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 434 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 436 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 433
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 431 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Data Integrity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 432 |\u001b[39m     test(\u001b[32m'verify data consistency across operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 433 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 434 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 436 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:433:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:05.051Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 433
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-f4d333f82ab6e54ef77f",
              "file": "e2e/enhanced.test.ts",
              "line": 432,
              "column": 5
            },
            {
              "title": "handle optimistic updates correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 177,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 230,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:463:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 463
                        },
                        "snippet": "\u001b[0m \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m     test(\u001b[32m'handle optimistic updates correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 463 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 464 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 466 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 463
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m     test(\u001b[32m'handle optimistic updates correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 463 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 464 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 466 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:463:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:05.057Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 463
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-b1a1d78f1322189d3846",
              "file": "e2e/enhanced.test.ts",
              "line": 462,
              "column": 5
            },
            {
              "title": "verify data consistency across operations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 249,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1459,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:433:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 433
                        },
                        "snippet": "\u001b[0m \u001b[90m 431 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Data Integrity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 432 |\u001b[39m     test(\u001b[32m'verify data consistency across operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 433 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 434 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 436 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 433
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 431 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Data Integrity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 432 |\u001b[39m     test(\u001b[32m'verify data consistency across operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 433 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 434 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 436 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:433:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:38.467Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 433
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-3065ce1dbf3c42e82293",
              "file": "e2e/enhanced.test.ts",
              "line": 432,
              "column": 5
            },
            {
              "title": "handle optimistic updates correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 250,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1380,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:463:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 463
                        },
                        "snippet": "\u001b[0m \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m     test(\u001b[32m'handle optimistic updates correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 463 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 464 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 466 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 463
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m     test(\u001b[32m'handle optimistic updates correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 463 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 464 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 466 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:463:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:39.155Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 463
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-ee707eeb10732d62e752",
              "file": "e2e/enhanced.test.ts",
              "line": 462,
              "column": 5
            },
            {
              "title": "verify data consistency across operations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 322,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 505,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:433:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 433
                        },
                        "snippet": "\u001b[0m \u001b[90m 431 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Data Integrity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 432 |\u001b[39m     test(\u001b[32m'verify data consistency across operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 433 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 434 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 436 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 433
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 431 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Data Integrity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 432 |\u001b[39m     test(\u001b[32m'verify data consistency across operations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 433 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 434 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 435 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 436 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:433:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:11.228Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--5a794-nsistency-across-operations-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 433
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-f5ae250486a1bbe4254e",
              "file": "e2e/enhanced.test.ts",
              "line": 432,
              "column": 5
            },
            {
              "title": "handle optimistic updates correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 323,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 453,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:463:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 463
                        },
                        "snippet": "\u001b[0m \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m     test(\u001b[32m'handle optimistic updates correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 463 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 464 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 466 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 463
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 461 |\u001b[39m\n \u001b[90m 462 |\u001b[39m     test(\u001b[32m'handle optimistic updates correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 463 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 464 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 465 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 466 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:463:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:11.886Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--57f63-ptimistic-updates-correctly-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 463
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-c04010690640173b016f",
              "file": "e2e/enhanced.test.ts",
              "line": 462,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Accessibility",
          "file": "e2e/enhanced.test.ts",
          "line": 495,
          "column": 6,
          "specs": [
            {
              "title": "keyboard navigation works correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 178,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 229,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:497:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 497
                        },
                        "snippet": "\u001b[0m \u001b[90m 495 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Accessibility'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 496 |\u001b[39m     test(\u001b[32m'keyboard navigation works correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 497 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 498 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 499 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 500 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 497
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 495 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Accessibility'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 496 |\u001b[39m     test(\u001b[32m'keyboard navigation works correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 497 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 498 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 499 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 500 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:497:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:05.065Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 497
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-913d2241de9e2070232a",
              "file": "e2e/enhanced.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "screen reader support",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 179,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 230,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:529:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 529
                        },
                        "snippet": "\u001b[0m \u001b[90m 527 |\u001b[39m\n \u001b[90m 528 |\u001b[39m     test(\u001b[32m'screen reader support'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 530 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 531 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 532 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 529
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 527 |\u001b[39m\n \u001b[90m 528 |\u001b[39m     test(\u001b[32m'screen reader support'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 530 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 531 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 532 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:529:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:05.912Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 529
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-5533e34d2b17f1e111fe",
              "file": "e2e/enhanced.test.ts",
              "line": 528,
              "column": 5
            },
            {
              "title": "color contrast meets WCAG standards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 180,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 225,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:552:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 552
                        },
                        "snippet": "\u001b[0m \u001b[90m 550 |\u001b[39m\n \u001b[90m 551 |\u001b[39m     test(\u001b[32m'color contrast meets WCAG standards'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 552 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 553 |\u001b[39m\n \u001b[90m 554 |\u001b[39m         \u001b[90m// Critical severity badge - should have high contrast\u001b[39m\n \u001b[90m 555 |\u001b[39m         \u001b[36mconst\u001b[39m criticalBadge \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-severity=\"critical\"]'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 552
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 550 |\u001b[39m\n \u001b[90m 551 |\u001b[39m     test(\u001b[32m'color contrast meets WCAG standards'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 552 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 553 |\u001b[39m\n \u001b[90m 554 |\u001b[39m         \u001b[90m// Critical severity badge - should have high contrast\u001b[39m\n \u001b[90m 555 |\u001b[39m         \u001b[36mconst\u001b[39m criticalBadge \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-severity=\"critical\"]'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:552:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.003Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 552
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-803454c82dcbdc1452cc",
              "file": "e2e/enhanced.test.ts",
              "line": 551,
              "column": 5
            },
            {
              "title": "keyboard navigation works correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 251,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1320,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:497:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 497
                        },
                        "snippet": "\u001b[0m \u001b[90m 495 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Accessibility'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 496 |\u001b[39m     test(\u001b[32m'keyboard navigation works correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 497 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 498 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 499 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 500 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 497
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 495 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Accessibility'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 496 |\u001b[39m     test(\u001b[32m'keyboard navigation works correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 497 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 498 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 499 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 500 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:497:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:39.903Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 497
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-32fb6e5b01e123ab12d8",
              "file": "e2e/enhanced.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "screen reader support",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 252,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1308,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:529:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 529
                        },
                        "snippet": "\u001b[0m \u001b[90m 527 |\u001b[39m\n \u001b[90m 528 |\u001b[39m     test(\u001b[32m'screen reader support'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 530 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 531 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 532 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 529
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 527 |\u001b[39m\n \u001b[90m 528 |\u001b[39m     test(\u001b[32m'screen reader support'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 530 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 531 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 532 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:529:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:40.767Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 529
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-60e9bf9ebe3bf676a8cd",
              "file": "e2e/enhanced.test.ts",
              "line": 528,
              "column": 5
            },
            {
              "title": "color contrast meets WCAG standards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 253,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1342,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:552:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 552
                        },
                        "snippet": "\u001b[0m \u001b[90m 550 |\u001b[39m\n \u001b[90m 551 |\u001b[39m     test(\u001b[32m'color contrast meets WCAG standards'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 552 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 553 |\u001b[39m\n \u001b[90m 554 |\u001b[39m         \u001b[90m// Critical severity badge - should have high contrast\u001b[39m\n \u001b[90m 555 |\u001b[39m         \u001b[36mconst\u001b[39m criticalBadge \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-severity=\"critical\"]'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 552
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 550 |\u001b[39m\n \u001b[90m 551 |\u001b[39m     test(\u001b[32m'color contrast meets WCAG standards'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 552 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 553 |\u001b[39m\n \u001b[90m 554 |\u001b[39m         \u001b[90m// Critical severity badge - should have high contrast\u001b[39m\n \u001b[90m 555 |\u001b[39m         \u001b[36mconst\u001b[39m criticalBadge \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-severity=\"critical\"]'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:552:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:41.346Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 552
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-7a6fd6aac146b9abab33",
              "file": "e2e/enhanced.test.ts",
              "line": 551,
              "column": 5
            },
            {
              "title": "keyboard navigation works correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 324,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 580,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:497:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 497
                        },
                        "snippet": "\u001b[0m \u001b[90m 495 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Accessibility'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 496 |\u001b[39m     test(\u001b[32m'keyboard navigation works correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 497 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 498 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 499 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 500 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 497
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 495 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Accessibility'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 496 |\u001b[39m     test(\u001b[32m'keyboard navigation works correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 497 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 498 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 499 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 500 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:497:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:12.401Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--209f4--navigation-works-correctly-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 497
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e19b89f4b34b3c83ab4d",
              "file": "e2e/enhanced.test.ts",
              "line": 496,
              "column": 5
            },
            {
              "title": "screen reader support",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 325,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 639,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:529:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 529
                        },
                        "snippet": "\u001b[0m \u001b[90m 527 |\u001b[39m\n \u001b[90m 528 |\u001b[39m     test(\u001b[32m'screen reader support'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 530 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 531 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 532 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 529
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 527 |\u001b[39m\n \u001b[90m 528 |\u001b[39m     test(\u001b[32m'screen reader support'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 530 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 531 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 532 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:529:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:12.399Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--668ca-ility-screen-reader-support-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 529
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-eece1666f35d44c434f5",
              "file": "e2e/enhanced.test.ts",
              "line": 528,
              "column": 5
            },
            {
              "title": "color contrast meets WCAG standards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 326,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 545,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:552:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 552
                        },
                        "snippet": "\u001b[0m \u001b[90m 550 |\u001b[39m\n \u001b[90m 551 |\u001b[39m     test(\u001b[32m'color contrast meets WCAG standards'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 552 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 553 |\u001b[39m\n \u001b[90m 554 |\u001b[39m         \u001b[90m// Critical severity badge - should have high contrast\u001b[39m\n \u001b[90m 555 |\u001b[39m         \u001b[36mconst\u001b[39m criticalBadge \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-severity=\"critical\"]'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 552
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 550 |\u001b[39m\n \u001b[90m 551 |\u001b[39m     test(\u001b[32m'color contrast meets WCAG standards'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 552 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 553 |\u001b[39m\n \u001b[90m 554 |\u001b[39m         \u001b[90m// Critical severity badge - should have high contrast\u001b[39m\n \u001b[90m 555 |\u001b[39m         \u001b[36mconst\u001b[39m criticalBadge \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-severity=\"critical\"]'\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:552:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:12.584Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d530e-ntrast-meets-WCAG-standards-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 552
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-5bc5fdda6c938e79c20f",
              "file": "e2e/enhanced.test.ts",
              "line": 551,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Cross-Browser Compatibility",
          "file": "e2e/enhanced.test.ts",
          "line": 570,
          "column": 6,
          "specs": [
            {
              "title": "works in Chromium",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 181,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 222,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:574:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 574
                        },
                        "snippet": "\u001b[0m \u001b[90m 572 |\u001b[39m         test\u001b[33m.\u001b[39mskip(browserName \u001b[33m!==\u001b[39m \u001b[32m'chromium'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Chromium-only test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 573 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 574 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 575 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 576 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 577 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 574
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 572 |\u001b[39m         test\u001b[33m.\u001b[39mskip(browserName \u001b[33m!==\u001b[39m \u001b[32m'chromium'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Chromium-only test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 573 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 574 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 575 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 576 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 577 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:574:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.005Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3396-atibility-works-in-Chromium-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e3396-atibility-works-in-Chromium-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 574
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-4f20e3d089c7bf944a62",
              "file": "e2e/enhanced.test.ts",
              "line": 571,
              "column": 5
            },
            {
              "title": "works in Firefox",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Firefox-only test",
                      "location": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "line": 582,
                        "column": 14
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 182,
                      "parallelIndex": 2,
                      "status": "skipped",
                      "duration": 204,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.004Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Firefox-only test",
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "line": 582,
                            "column": 14
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-953c9b5ceeaa3cbc5e65",
              "file": "e2e/enhanced.test.ts",
              "line": 581,
              "column": 5
            },
            {
              "title": "works in WebKit/Safari",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "WebKit-only test",
                      "location": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "line": 592,
                        "column": 14
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 183,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 196,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.834Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "WebKit-only test",
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "line": 592,
                            "column": 14
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7d70f230c2f987afb17a",
              "file": "e2e/enhanced.test.ts",
              "line": 591,
              "column": 5
            },
            {
              "title": "handles CSS Grid across browsers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 182,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 164,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:602:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 602
                        },
                        "snippet": "\u001b[0m \u001b[90m 600 |\u001b[39m\n \u001b[90m 601 |\u001b[39m     test(\u001b[32m'handles CSS Grid across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 603 |\u001b[39m\n \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m grid \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"dashboard-grid\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 605 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m grid\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 602
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 600 |\u001b[39m\n \u001b[90m 601 |\u001b[39m     test(\u001b[32m'handles CSS Grid across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 603 |\u001b[39m\n \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m grid \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"dashboard-grid\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 605 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m grid\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:602:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.394Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 602
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-9de27f2ac53ce55febf2",
              "file": "e2e/enhanced.test.ts",
              "line": 601,
              "column": 5
            },
            {
              "title": "handles Flexbox across browsers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 184,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 214,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:613:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 613
                        },
                        "snippet": "\u001b[0m \u001b[90m 611 |\u001b[39m\n \u001b[90m 612 |\u001b[39m     test(\u001b[32m'handles Flexbox across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m\n \u001b[90m 615 |\u001b[39m         \u001b[36mconst\u001b[39m flex \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"header-nav\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m flex\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 613
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 611 |\u001b[39m\n \u001b[90m 612 |\u001b[39m     test(\u001b[32m'handles Flexbox across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m\n \u001b[90m 615 |\u001b[39m         \u001b[36mconst\u001b[39m flex \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"header-nav\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m flex\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:613:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.941Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 613
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-aa6748df0f92c2658990",
              "file": "e2e/enhanced.test.ts",
              "line": 612,
              "column": 5
            },
            {
              "title": "works in Chromium",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Chromium-only test",
                      "location": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "line": 572,
                        "column": 14
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 254,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 1040,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:42.093Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Chromium-only test",
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "line": 572,
                            "column": 14
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-7780a02b8bd9f96824fc",
              "file": "e2e/enhanced.test.ts",
              "line": 571,
              "column": 5
            },
            {
              "title": "works in Firefox",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 255,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1373,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:584:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 584
                        },
                        "snippet": "\u001b[0m \u001b[90m 582 |\u001b[39m         test\u001b[33m.\u001b[39mskip(browserName \u001b[33m!==\u001b[39m \u001b[32m'firefox'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Firefox-only test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 583 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 584 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 585 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 586 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 587 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 584
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 582 |\u001b[39m         test\u001b[33m.\u001b[39mskip(browserName \u001b[33m!==\u001b[39m \u001b[32m'firefox'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Firefox-only test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 583 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 584 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 585 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 586 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 587 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:584:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:42.623Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4b497-patibility-works-in-Firefox-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4b497-patibility-works-in-Firefox-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--4b497-patibility-works-in-Firefox-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 584
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-c9ab9bc1080604b49879",
              "file": "e2e/enhanced.test.ts",
              "line": 581,
              "column": 5
            },
            {
              "title": "works in WebKit/Safari",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "WebKit-only test",
                      "location": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "line": 592,
                        "column": 14
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 256,
                      "parallelIndex": 1,
                      "status": "skipped",
                      "duration": 1250,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:43.321Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "WebKit-only test",
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "line": 592,
                            "column": 14
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-f96a652cdfae8e4e4ce6",
              "file": "e2e/enhanced.test.ts",
              "line": 591,
              "column": 5
            },
            {
              "title": "handles CSS Grid across browsers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 257,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1357,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:602:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 602
                        },
                        "snippet": "\u001b[0m \u001b[90m 600 |\u001b[39m\n \u001b[90m 601 |\u001b[39m     test(\u001b[32m'handles CSS Grid across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 603 |\u001b[39m\n \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m grid \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"dashboard-grid\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 605 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m grid\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 602
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 600 |\u001b[39m\n \u001b[90m 601 |\u001b[39m     test(\u001b[32m'handles CSS Grid across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 603 |\u001b[39m\n \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m grid \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"dashboard-grid\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 605 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m grid\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:602:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:44.107Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 602
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-22c64f7ad56fdfeeb791",
              "file": "e2e/enhanced.test.ts",
              "line": 601,
              "column": 5
            },
            {
              "title": "handles Flexbox across browsers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 254,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 661,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:613:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 613
                        },
                        "snippet": "\u001b[0m \u001b[90m 611 |\u001b[39m\n \u001b[90m 612 |\u001b[39m     test(\u001b[32m'handles Flexbox across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m\n \u001b[90m 615 |\u001b[39m         \u001b[36mconst\u001b[39m flex \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"header-nav\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m flex\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 613
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 611 |\u001b[39m\n \u001b[90m 612 |\u001b[39m     test(\u001b[32m'handles Flexbox across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m\n \u001b[90m 615 |\u001b[39m         \u001b[36mconst\u001b[39m flex \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"header-nav\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m flex\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:613:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:44.028Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 613
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-25197833d919baba22f5",
              "file": "e2e/enhanced.test.ts",
              "line": 612,
              "column": 5
            },
            {
              "title": "works in Chromium",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Chromium-only test",
                      "location": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "line": 572,
                        "column": 14
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 327,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 439,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:12.647Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Chromium-only test",
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "line": 572,
                            "column": 14
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-fc489aa23c6876dbba5f",
              "file": "e2e/enhanced.test.ts",
              "line": 571,
              "column": 5
            },
            {
              "title": "works in Firefox",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Firefox-only test",
                      "location": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "line": 582,
                        "column": 14
                      }
                    }
                  ],
                  "expectedStatus": "skipped",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 328,
                      "parallelIndex": 1,
                      "status": "skipped",
                      "duration": 386,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:13.432Z",
                      "annotations": [
                        {
                          "type": "skip",
                          "description": "Firefox-only test",
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "line": 582,
                            "column": 14
                          }
                        }
                      ],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fe35319142fde9e497d-99cdf46c9b8f36db8730",
              "file": "e2e/enhanced.test.ts",
              "line": 581,
              "column": 5
            },
            {
              "title": "works in WebKit/Safari",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 329,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 545,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:594:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 594
                        },
                        "snippet": "\u001b[0m \u001b[90m 592 |\u001b[39m         test\u001b[33m.\u001b[39mskip(browserName \u001b[33m!==\u001b[39m \u001b[32m'webkit'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'WebKit-only test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 596 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 594
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 592 |\u001b[39m         test\u001b[33m.\u001b[39mskip(browserName \u001b[33m!==\u001b[39m \u001b[32m'webkit'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'WebKit-only test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 593 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 594 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 595 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 596 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 597 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:594:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:13.965Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--79de8-lity-works-in-WebKit-Safari-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--79de8-lity-works-in-WebKit-Safari-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 594
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-de2dfcbc2c8a0e24ed00",
              "file": "e2e/enhanced.test.ts",
              "line": 591,
              "column": 5
            },
            {
              "title": "handles CSS Grid across browsers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 330,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 580,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:602:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 602
                        },
                        "snippet": "\u001b[0m \u001b[90m 600 |\u001b[39m\n \u001b[90m 601 |\u001b[39m     test(\u001b[32m'handles CSS Grid across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 603 |\u001b[39m\n \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m grid \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"dashboard-grid\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 605 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m grid\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 602
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 600 |\u001b[39m\n \u001b[90m 601 |\u001b[39m     test(\u001b[32m'handles CSS Grid across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 602 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 603 |\u001b[39m\n \u001b[90m 604 |\u001b[39m         \u001b[36mconst\u001b[39m grid \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"dashboard-grid\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 605 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m grid\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:602:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:13.993Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d0f8f-es-CSS-Grid-across-browsers-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 602
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-ae847b57b45f8a1b169e",
              "file": "e2e/enhanced.test.ts",
              "line": 601,
              "column": 5
            },
            {
              "title": "handles Flexbox across browsers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 327,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 238,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:613:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 613
                        },
                        "snippet": "\u001b[0m \u001b[90m 611 |\u001b[39m\n \u001b[90m 612 |\u001b[39m     test(\u001b[32m'handles Flexbox across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m\n \u001b[90m 615 |\u001b[39m         \u001b[36mconst\u001b[39m flex \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"header-nav\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m flex\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 613
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 611 |\u001b[39m\n \u001b[90m 612 |\u001b[39m     test(\u001b[32m'handles Flexbox across browsers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 613 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 614 |\u001b[39m\n \u001b[90m 615 |\u001b[39m         \u001b[36mconst\u001b[39m flex \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"header-nav\"]'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 616 |\u001b[39m         \u001b[36mconst\u001b[39m display \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m flex\u001b[33m.\u001b[39mevaluate(el \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:613:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:13.441Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0c855-les-Flexbox-across-browsers-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 613
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-69507e60f871ef8ce6e9",
              "file": "e2e/enhanced.test.ts",
              "line": 612,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Mobile Viewport",
          "file": "e2e/enhanced.test.ts",
          "line": 624,
          "column": 6,
          "specs": [
            {
              "title": "iPhone SE viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 185,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 202,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:627:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 627
                        },
                        "snippet": "\u001b[0m \u001b[90m 625 |\u001b[39m     test(\u001b[32m'iPhone SE viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 626 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m375\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m667\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 627 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 628 |\u001b[39m\n \u001b[90m 629 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 630 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m)\u001b[33m.\u001b[39mcount())\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 627
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 625 |\u001b[39m     test(\u001b[32m'iPhone SE viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 626 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m375\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m667\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 627 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 628 |\u001b[39m\n \u001b[90m 629 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 630 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m)\u001b[33m.\u001b[39mcount())\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:627:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:06.942Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 627
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-0b29b07b07d0e5d5b08f",
              "file": "e2e/enhanced.test.ts",
              "line": 625,
              "column": 5
            },
            {
              "title": "iPhone 12 Pro viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 186,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 191,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:635:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 635
                        },
                        "snippet": "\u001b[0m \u001b[90m 633 |\u001b[39m     test(\u001b[32m'iPhone 12 Pro viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 634 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m390\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m844\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 635 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 636 |\u001b[39m\n \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m content \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 638 |\u001b[39m         \u001b[36mconst\u001b[39m box \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m content\u001b[33m.\u001b[39mboundingBox()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 635
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 633 |\u001b[39m     test(\u001b[32m'iPhone 12 Pro viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 634 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m390\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m844\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 635 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 636 |\u001b[39m\n \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m content \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 638 |\u001b[39m         \u001b[36mconst\u001b[39m box \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m content\u001b[33m.\u001b[39mboundingBox()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:635:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:07.106Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 635
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-9089b8461bf7e031a42c",
              "file": "e2e/enhanced.test.ts",
              "line": 633,
              "column": 5
            },
            {
              "title": "iPad viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 183,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 195,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:644:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 644
                        },
                        "snippet": "\u001b[0m \u001b[90m 642 |\u001b[39m     test(\u001b[32m'iPad viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 643 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m768\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 644 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 647 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 644
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 642 |\u001b[39m     test(\u001b[32m'iPad viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 643 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m768\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 644 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 647 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:644:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:07.159Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 644
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-1226f0e38e9140d1eb20",
              "file": "e2e/enhanced.test.ts",
              "line": 642,
              "column": 5
            },
            {
              "title": "iPad Pro viewport (landscape)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 187,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 241,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:651:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 651
                        },
                        "snippet": "\u001b[0m \u001b[90m 649 |\u001b[39m     test(\u001b[32m'iPad Pro viewport (landscape)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 650 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m1366\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 651 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 652 |\u001b[39m\n \u001b[90m 653 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"desktop-nav\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 654 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 651
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 649 |\u001b[39m     test(\u001b[32m'iPad Pro viewport (landscape)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 650 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m1366\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 651 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 652 |\u001b[39m\n \u001b[90m 653 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"desktop-nav\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 654 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:651:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:07.828Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 651
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-2ded886a8868fa3ab799",
              "file": "e2e/enhanced.test.ts",
              "line": 649,
              "column": 5
            },
            {
              "title": "Android phone viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 188,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 210,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:658:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 658
                        },
                        "snippet": "\u001b[0m \u001b[90m 656 |\u001b[39m     test(\u001b[32m'Android phone viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 657 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m360\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m640\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 658 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 659 |\u001b[39m\n \u001b[90m 660 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 661 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 658
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/dashboard\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 656 |\u001b[39m     test(\u001b[32m'Android phone viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 657 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m360\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m640\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 658 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 659 |\u001b[39m\n \u001b[90m 660 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 661 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:658:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:07.829Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 658
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-70ae2e62f67cdaa85fde",
              "file": "e2e/enhanced.test.ts",
              "line": 656,
              "column": 5
            },
            {
              "title": "iPhone SE viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 258,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1307,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:627:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 627
                        },
                        "snippet": "\u001b[0m \u001b[90m 625 |\u001b[39m     test(\u001b[32m'iPhone SE viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 626 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m375\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m667\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 627 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 628 |\u001b[39m\n \u001b[90m 629 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 630 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m)\u001b[33m.\u001b[39mcount())\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 627
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 625 |\u001b[39m     test(\u001b[32m'iPhone SE viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 626 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m375\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m667\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 627 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 628 |\u001b[39m\n \u001b[90m 629 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 630 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m)\u001b[33m.\u001b[39mcount())\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:627:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:44.859Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 627
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-cc44d2896f88bfd3cf08",
              "file": "e2e/enhanced.test.ts",
              "line": 625,
              "column": 5
            },
            {
              "title": "iPhone 12 Pro viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 259,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1349,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:635:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 635
                        },
                        "snippet": "\u001b[0m \u001b[90m 633 |\u001b[39m     test(\u001b[32m'iPhone 12 Pro viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 634 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m390\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m844\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 635 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 636 |\u001b[39m\n \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m content \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 638 |\u001b[39m         \u001b[36mconst\u001b[39m box \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m content\u001b[33m.\u001b[39mboundingBox()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 635
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 633 |\u001b[39m     test(\u001b[32m'iPhone 12 Pro viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 634 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m390\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m844\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 635 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 636 |\u001b[39m\n \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m content \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 638 |\u001b[39m         \u001b[36mconst\u001b[39m box \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m content\u001b[33m.\u001b[39mboundingBox()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:635:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:45.865Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 635
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-df0cb91fcb8c5093cacf",
              "file": "e2e/enhanced.test.ts",
              "line": 633,
              "column": 5
            },
            {
              "title": "iPad viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 256,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 677,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:644:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 644
                        },
                        "snippet": "\u001b[0m \u001b[90m 642 |\u001b[39m     test(\u001b[32m'iPad viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 643 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m768\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 644 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 647 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 644
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 642 |\u001b[39m     test(\u001b[32m'iPad viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 643 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m768\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 644 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 647 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:644:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:45.459Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 644
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e1b9d38e4a1e3e8f5a83",
              "file": "e2e/enhanced.test.ts",
              "line": 642,
              "column": 5
            },
            {
              "title": "iPad Pro viewport (landscape)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 260,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1493,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:651:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 651
                        },
                        "snippet": "\u001b[0m \u001b[90m 649 |\u001b[39m     test(\u001b[32m'iPad Pro viewport (landscape)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 650 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m1366\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 651 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 652 |\u001b[39m\n \u001b[90m 653 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"desktop-nav\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 654 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 651
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 649 |\u001b[39m     test(\u001b[32m'iPad Pro viewport (landscape)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 650 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m1366\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 651 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 652 |\u001b[39m\n \u001b[90m 653 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"desktop-nav\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 654 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:651:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:46.118Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 651
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-97a34818f92fc833581d",
              "file": "e2e/enhanced.test.ts",
              "line": 649,
              "column": 5
            },
            {
              "title": "Android phone viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 261,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1429,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:658:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 658
                        },
                        "snippet": "\u001b[0m \u001b[90m 656 |\u001b[39m     test(\u001b[32m'Android phone viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 657 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m360\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m640\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 658 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 659 |\u001b[39m\n \u001b[90m 660 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 661 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 658
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 656 |\u001b[39m     test(\u001b[32m'Android phone viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 657 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m360\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m640\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 658 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 659 |\u001b[39m\n \u001b[90m 660 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 661 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:658:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:47.260Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 658
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-bbcb210df1689d1d4f5b",
              "file": "e2e/enhanced.test.ts",
              "line": 656,
              "column": 5
            },
            {
              "title": "iPhone SE viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 331,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 483,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:627:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 627
                        },
                        "snippet": "\u001b[0m \u001b[90m 625 |\u001b[39m     test(\u001b[32m'iPhone SE viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 626 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m375\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m667\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 627 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 628 |\u001b[39m\n \u001b[90m 629 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 630 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m)\u001b[33m.\u001b[39mcount())\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 627
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 625 |\u001b[39m     test(\u001b[32m'iPhone SE viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 626 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m375\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m667\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 627 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 628 |\u001b[39m\n \u001b[90m 629 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 630 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m))\u001b[33m.\u001b[39mtoHaveCount(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'table, [data-testid=\"error-card\"]'\u001b[39m)\u001b[33m.\u001b[39mcount())\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:627:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:14.179Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--0e9c0-Viewport-iPhone-SE-viewport-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 627
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-0e48562bcd4e2c46fe74",
              "file": "e2e/enhanced.test.ts",
              "line": 625,
              "column": 5
            },
            {
              "title": "iPhone 12 Pro viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 332,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 442,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:635:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 635
                        },
                        "snippet": "\u001b[0m \u001b[90m 633 |\u001b[39m     test(\u001b[32m'iPhone 12 Pro viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 634 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m390\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m844\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 635 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 636 |\u001b[39m\n \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m content \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 638 |\u001b[39m         \u001b[36mconst\u001b[39m box \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m content\u001b[33m.\u001b[39mboundingBox()\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 635
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 633 |\u001b[39m     test(\u001b[32m'iPhone 12 Pro viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 634 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m390\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m844\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 635 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 636 |\u001b[39m\n \u001b[90m 637 |\u001b[39m         \u001b[36mconst\u001b[39m content \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'main'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 638 |\u001b[39m         \u001b[36mconst\u001b[39m box \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m content\u001b[33m.\u001b[39mboundingBox()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:635:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:14.505Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--fba33-port-iPhone-12-Pro-viewport-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 635
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-b7fcfab281ab3417327a",
              "file": "e2e/enhanced.test.ts",
              "line": 633,
              "column": 5
            },
            {
              "title": "iPad viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 328,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 328,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:644:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 644
                        },
                        "snippet": "\u001b[0m \u001b[90m 642 |\u001b[39m     test(\u001b[32m'iPad viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 643 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m768\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 644 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 647 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 644
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 642 |\u001b[39m     test(\u001b[32m'iPad viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 643 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m768\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 644 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 645 |\u001b[39m\n \u001b[90m 646 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'table'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 647 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:644:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:14.080Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--537b9-bile-Viewport-iPad-viewport-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 644
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-05e92f0259ea22d13eba",
              "file": "e2e/enhanced.test.ts",
              "line": 642,
              "column": 5
            },
            {
              "title": "iPad Pro viewport (landscape)",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 333,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 547,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:651:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 651
                        },
                        "snippet": "\u001b[0m \u001b[90m 649 |\u001b[39m     test(\u001b[32m'iPad Pro viewport (landscape)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 650 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m1366\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 651 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 652 |\u001b[39m\n \u001b[90m 653 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"desktop-nav\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 654 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 651
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 649 |\u001b[39m     test(\u001b[32m'iPad Pro viewport (landscape)'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 650 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m1366\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m1024\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 651 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 652 |\u001b[39m\n \u001b[90m 653 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"desktop-nav\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 654 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:651:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:15.282Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--d4f6d-Pad-Pro-viewport-landscape--e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 651
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-ccc2f3c7260a530bbd64",
              "file": "e2e/enhanced.test.ts",
              "line": 649,
              "column": 5
            },
            {
              "title": "Android phone viewport",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 334,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 564,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:658:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 658
                        },
                        "snippet": "\u001b[0m \u001b[90m 656 |\u001b[39m     test(\u001b[32m'Android phone viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 657 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m360\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m640\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 658 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 659 |\u001b[39m\n \u001b[90m 660 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 661 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 658
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/dashboard\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 656 |\u001b[39m     test(\u001b[32m'Android phone viewport'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n \u001b[90m 657 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39msetViewportSize({ width\u001b[33m:\u001b[39m \u001b[35m360\u001b[39m\u001b[33m,\u001b[39m height\u001b[33m:\u001b[39m \u001b[35m640\u001b[39m })\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 658 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 659 |\u001b[39m\n \u001b[90m 660 |\u001b[39m         \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'[data-testid=\"mobile-menu-button\"]'\u001b[39m))\u001b[33m.\u001b[39mtoBeVisible()\u001b[33m;\u001b[39m\n \u001b[90m 661 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:658:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:15.498Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e0159-port-Android-phone-viewport-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 658
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-7ef4d3d96b846c491fed",
              "file": "e2e/enhanced.test.ts",
              "line": 656,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - File Operations",
          "file": "e2e/enhanced.test.ts",
          "line": 664,
          "column": 6,
          "specs": [
            {
              "title": "download error report as PDF",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 189,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 211,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:666:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 666
                        },
                        "snippet": "\u001b[0m \u001b[90m 664 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - File Operations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 665 |\u001b[39m     test(\u001b[32m'download error report as PDF'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 667 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 668 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 669 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 666
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 664 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - File Operations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 665 |\u001b[39m     test(\u001b[32m'download error report as PDF'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 667 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 668 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 669 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:666:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:07.886Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 666
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e14d3c75856e1a4027dc",
              "file": "e2e/enhanced.test.ts",
              "line": 665,
              "column": 5
            },
            {
              "title": "download error log as text file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 190,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 195,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:684:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 684
                        },
                        "snippet": "\u001b[0m \u001b[90m 682 |\u001b[39m\n \u001b[90m 683 |\u001b[39m     test(\u001b[32m'download error log as text file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 684 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 685 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 686 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 687 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 684
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 682 |\u001b[39m\n \u001b[90m 683 |\u001b[39m     test(\u001b[32m'download error log as text file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 684 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 685 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 686 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 687 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:684:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:07.990Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 684
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-0b8599bc3d95c436293a",
              "file": "e2e/enhanced.test.ts",
              "line": 683,
              "column": 5
            },
            {
              "title": "export multiple errors to Excel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 191,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 244,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:700:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 700
                        },
                        "snippet": "\u001b[0m \u001b[90m 698 |\u001b[39m\n \u001b[90m 699 |\u001b[39m     test(\u001b[32m'export multiple errors to Excel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 700 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 701 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 702 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 703 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 700
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 698 |\u001b[39m\n \u001b[90m 699 |\u001b[39m     test(\u001b[32m'export multiple errors to Excel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 700 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 701 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 702 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 703 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:700:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:08.748Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 700
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-97b1ed50aea036a0c266",
              "file": "e2e/enhanced.test.ts",
              "line": 699,
              "column": 5
            },
            {
              "title": "upload and process CSV file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 192,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 236,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:718:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 718
                        },
                        "snippet": "\u001b[0m \u001b[90m 716 |\u001b[39m\n \u001b[90m 717 |\u001b[39m     test(\u001b[32m'upload and process CSV file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 718 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 719 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 720 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 721 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 718
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 716 |\u001b[39m\n \u001b[90m 717 |\u001b[39m     test(\u001b[32m'upload and process CSV file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 718 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 719 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 720 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 721 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:718:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:08.752Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 718
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-6f7320ca48bd817c3e4b",
              "file": "e2e/enhanced.test.ts",
              "line": 717,
              "column": 5
            },
            {
              "title": "handle file upload errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 193,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 244,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/upload\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/upload\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:741:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 741
                        },
                        "snippet": "\u001b[0m \u001b[90m 739 |\u001b[39m\n \u001b[90m 740 |\u001b[39m     test(\u001b[32m'handle file upload errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 741 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/upload'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 742 |\u001b[39m\n \u001b[90m 743 |\u001b[39m         \u001b[90m// Upload invalid file type\u001b[39m\n \u001b[90m 744 |\u001b[39m         \u001b[36mconst\u001b[39m fileInput \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'input[type=\"file\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 741
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/upload\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 739 |\u001b[39m\n \u001b[90m 740 |\u001b[39m     test(\u001b[32m'handle file upload errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 741 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/upload'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 742 |\u001b[39m\n \u001b[90m 743 |\u001b[39m         \u001b[90m// Upload invalid file type\u001b[39m\n \u001b[90m 744 |\u001b[39m         \u001b[36mconst\u001b[39m fileInput \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'input[type=\"file\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:741:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:08.790Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 741
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-029cee655799fafbd870",
              "file": "e2e/enhanced.test.ts",
              "line": 740,
              "column": 5
            },
            {
              "title": "download error report as PDF",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 262,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1440,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:666:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 666
                        },
                        "snippet": "\u001b[0m \u001b[90m 664 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - File Operations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 665 |\u001b[39m     test(\u001b[32m'download error report as PDF'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 667 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 668 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 669 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 666
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 664 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - File Operations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 665 |\u001b[39m     test(\u001b[32m'download error report as PDF'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 667 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 668 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 669 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:666:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:47.434Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 666
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-80d189166ce24f477855",
              "file": "e2e/enhanced.test.ts",
              "line": 665,
              "column": 5
            },
            {
              "title": "download error log as text file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 263,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1494,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:684:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 684
                        },
                        "snippet": "\u001b[0m \u001b[90m 682 |\u001b[39m\n \u001b[90m 683 |\u001b[39m     test(\u001b[32m'download error log as text file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 684 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 685 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 686 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 687 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 684
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 682 |\u001b[39m\n \u001b[90m 683 |\u001b[39m     test(\u001b[32m'download error log as text file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 684 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 685 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 686 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 687 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:684:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:48.133Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 684
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-17ce0c4038ec3d616bec",
              "file": "e2e/enhanced.test.ts",
              "line": 683,
              "column": 5
            },
            {
              "title": "export multiple errors to Excel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 264,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1266,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:700:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 700
                        },
                        "snippet": "\u001b[0m \u001b[90m 698 |\u001b[39m\n \u001b[90m 699 |\u001b[39m     test(\u001b[32m'export multiple errors to Excel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 700 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 701 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 702 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 703 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 700
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 698 |\u001b[39m\n \u001b[90m 699 |\u001b[39m     test(\u001b[32m'export multiple errors to Excel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 700 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 701 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 702 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 703 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:700:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:49.224Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 700
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-914cf314b39180af83ac",
              "file": "e2e/enhanced.test.ts",
              "line": 699,
              "column": 5
            },
            {
              "title": "upload and process CSV file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 265,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1224,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:718:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 718
                        },
                        "snippet": "\u001b[0m \u001b[90m 716 |\u001b[39m\n \u001b[90m 717 |\u001b[39m     test(\u001b[32m'upload and process CSV file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 718 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 719 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 720 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 721 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 718
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 716 |\u001b[39m\n \u001b[90m 717 |\u001b[39m     test(\u001b[32m'upload and process CSV file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 718 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 719 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 720 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 721 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:718:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:50.003Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 718
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-c1019d8a032380c324dc",
              "file": "e2e/enhanced.test.ts",
              "line": 717,
              "column": 5
            },
            {
              "title": "handle file upload errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 266,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1261,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:741:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 741
                        },
                        "snippet": "\u001b[0m \u001b[90m 739 |\u001b[39m\n \u001b[90m 740 |\u001b[39m     test(\u001b[32m'handle file upload errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 741 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/upload'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 742 |\u001b[39m\n \u001b[90m 743 |\u001b[39m         \u001b[90m// Upload invalid file type\u001b[39m\n \u001b[90m 744 |\u001b[39m         \u001b[36mconst\u001b[39m fileInput \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'input[type=\"file\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 741
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 739 |\u001b[39m\n \u001b[90m 740 |\u001b[39m     test(\u001b[32m'handle file upload errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 741 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/upload'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 742 |\u001b[39m\n \u001b[90m 743 |\u001b[39m         \u001b[90m// Upload invalid file type\u001b[39m\n \u001b[90m 744 |\u001b[39m         \u001b[36mconst\u001b[39m fileInput \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'input[type=\"file\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:741:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:50.686Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 741
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-e1b91691ae483ba390d9",
              "file": "e2e/enhanced.test.ts",
              "line": 740,
              "column": 5
            },
            {
              "title": "download error report as PDF",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 335,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 606,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:666:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 666
                        },
                        "snippet": "\u001b[0m \u001b[90m 664 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - File Operations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 665 |\u001b[39m     test(\u001b[32m'download error report as PDF'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 667 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 668 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 669 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 666
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 664 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - File Operations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 665 |\u001b[39m     test(\u001b[32m'download error report as PDF'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 666 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 667 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 668 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 669 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:666:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:15.522Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--ad685-ownload-error-report-as-PDF-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 666
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-c1623bf9c34183c9b8c1",
              "file": "e2e/enhanced.test.ts",
              "line": 665,
              "column": 5
            },
            {
              "title": "download error log as text file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 336,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 547,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:684:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 684
                        },
                        "snippet": "\u001b[0m \u001b[90m 682 |\u001b[39m\n \u001b[90m 683 |\u001b[39m     test(\u001b[32m'download error log as text file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 684 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 685 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 686 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 687 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 684
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 682 |\u001b[39m\n \u001b[90m 683 |\u001b[39m     test(\u001b[32m'download error log as text file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 684 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 685 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 686 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 687 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:684:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:15.655Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--54063-load-error-log-as-text-file-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 684
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-5d7aca34b27a89b02cb7",
              "file": "e2e/enhanced.test.ts",
              "line": 683,
              "column": 5
            },
            {
              "title": "export multiple errors to Excel",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 337,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 462,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:700:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 700
                        },
                        "snippet": "\u001b[0m \u001b[90m 698 |\u001b[39m\n \u001b[90m 699 |\u001b[39m     test(\u001b[32m'export multiple errors to Excel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 700 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 701 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 702 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 703 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 700
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 698 |\u001b[39m\n \u001b[90m 699 |\u001b[39m     test(\u001b[32m'export multiple errors to Excel'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 700 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 701 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 702 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 703 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:700:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:16.011Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--f594e-rt-multiple-errors-to-Excel-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 700
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-2b7c9867cc638a6ea2b9",
              "file": "e2e/enhanced.test.ts",
              "line": 699,
              "column": 5
            },
            {
              "title": "upload and process CSV file",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 338,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 535,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:718:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 718
                        },
                        "snippet": "\u001b[0m \u001b[90m 716 |\u001b[39m\n \u001b[90m 717 |\u001b[39m     test(\u001b[32m'upload and process CSV file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 718 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 719 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 720 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 721 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 718
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 716 |\u001b[39m\n \u001b[90m 717 |\u001b[39m     test(\u001b[32m'upload and process CSV file'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 718 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 719 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 720 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 721 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:718:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:16.914Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--6bf2a-upload-and-process-CSV-file-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 718
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-38c883d595b28b5b7f54",
              "file": "e2e/enhanced.test.ts",
              "line": 717,
              "column": 5
            },
            {
              "title": "handle file upload errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 339,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 543,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:741:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 741
                        },
                        "snippet": "\u001b[0m \u001b[90m 739 |\u001b[39m\n \u001b[90m 740 |\u001b[39m     test(\u001b[32m'handle file upload errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 741 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/upload'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 742 |\u001b[39m\n \u001b[90m 743 |\u001b[39m         \u001b[90m// Upload invalid file type\u001b[39m\n \u001b[90m 744 |\u001b[39m         \u001b[36mconst\u001b[39m fileInput \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'input[type=\"file\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 741
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/upload\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 739 |\u001b[39m\n \u001b[90m 740 |\u001b[39m     test(\u001b[32m'handle file upload errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 741 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/upload'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 742 |\u001b[39m\n \u001b[90m 743 |\u001b[39m         \u001b[90m// Upload invalid file type\u001b[39m\n \u001b[90m 744 |\u001b[39m         \u001b[36mconst\u001b[39m fileInput \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'input[type=\"file\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:741:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:17.088Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--e909e-le-upload-errors-gracefully-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 741
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-32c72b43d0f67381c89c",
              "file": "e2e/enhanced.test.ts",
              "line": 740,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Media and Assets",
          "file": "e2e/enhanced.test.ts",
          "line": 755,
          "column": 6,
          "specs": [
            {
              "title": "display error screenshots",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 194,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 201,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:757:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 757
                        },
                        "snippet": "\u001b[0m \u001b[90m 755 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Media and Assets'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 756 |\u001b[39m     test(\u001b[32m'display error screenshots'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 757 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 758 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 759 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 760 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 757
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 755 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Media and Assets'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 756 |\u001b[39m     test(\u001b[32m'display error screenshots'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 757 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 758 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 759 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 760 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:757:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:08.875Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 757
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-64da7f5886ffb81bc8e7",
              "file": "e2e/enhanced.test.ts",
              "line": 756,
              "column": 5
            },
            {
              "title": "lazy load images in gallery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 195,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 256,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/gallery\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/gallery\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:772:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 772
                        },
                        "snippet": "\u001b[0m \u001b[90m 770 |\u001b[39m\n \u001b[90m 771 |\u001b[39m     test(\u001b[32m'lazy load images in gallery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 772 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/gallery'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 773 |\u001b[39m\n \u001b[90m 774 |\u001b[39m         \u001b[90m// Images outside viewport should not be loaded\u001b[39m\n \u001b[90m 775 |\u001b[39m         \u001b[36mconst\u001b[39m images \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'img[loading=\"lazy\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 772
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/gallery\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 770 |\u001b[39m\n \u001b[90m 771 |\u001b[39m     test(\u001b[32m'lazy load images in gallery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 772 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/gallery'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 773 |\u001b[39m\n \u001b[90m 774 |\u001b[39m         \u001b[90m// Images outside viewport should not be loaded\u001b[39m\n \u001b[90m 775 |\u001b[39m         \u001b[36mconst\u001b[39m images \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'img[loading=\"lazy\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:772:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:09.731Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 772
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-f35eb1aa8e1661f43f63",
              "file": "e2e/enhanced.test.ts",
              "line": 771,
              "column": 5
            },
            {
              "title": "display chart visualizations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 196,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 248,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:791:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 791
                        },
                        "snippet": "\u001b[0m \u001b[90m 789 |\u001b[39m\n \u001b[90m 790 |\u001b[39m     test(\u001b[32m'display chart visualizations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 791 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 792 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 793 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 794 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 791
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 789 |\u001b[39m\n \u001b[90m 790 |\u001b[39m     test(\u001b[32m'display chart visualizations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 791 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 792 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 793 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 794 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:791:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:09.750Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 791
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-7652743206f2578bd000",
              "file": "e2e/enhanced.test.ts",
              "line": 790,
              "column": 5
            },
            {
              "title": "display error screenshots",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 267,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1348,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:757:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 757
                        },
                        "snippet": "\u001b[0m \u001b[90m 755 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Media and Assets'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 756 |\u001b[39m     test(\u001b[32m'display error screenshots'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 757 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 758 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 759 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 760 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 757
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 755 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Media and Assets'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 756 |\u001b[39m     test(\u001b[32m'display error screenshots'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 757 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 758 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 759 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 760 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:757:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:51.333Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 757
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-088f36cb35cfec636c13",
              "file": "e2e/enhanced.test.ts",
              "line": 756,
              "column": 5
            },
            {
              "title": "lazy load images in gallery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 268,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1341,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:772:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 772
                        },
                        "snippet": "\u001b[0m \u001b[90m 770 |\u001b[39m\n \u001b[90m 771 |\u001b[39m     test(\u001b[32m'lazy load images in gallery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 772 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/gallery'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 773 |\u001b[39m\n \u001b[90m 774 |\u001b[39m         \u001b[90m// Images outside viewport should not be loaded\u001b[39m\n \u001b[90m 775 |\u001b[39m         \u001b[36mconst\u001b[39m images \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'img[loading=\"lazy\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 772
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 770 |\u001b[39m\n \u001b[90m 771 |\u001b[39m     test(\u001b[32m'lazy load images in gallery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 772 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/gallery'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 773 |\u001b[39m\n \u001b[90m 774 |\u001b[39m         \u001b[90m// Images outside viewport should not be loaded\u001b[39m\n \u001b[90m 775 |\u001b[39m         \u001b[36mconst\u001b[39m images \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'img[loading=\"lazy\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:772:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:51.823Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 772
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-a820802318912136c8d8",
              "file": "e2e/enhanced.test.ts",
              "line": 771,
              "column": 5
            },
            {
              "title": "display chart visualizations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 269,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1449,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:791:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 791
                        },
                        "snippet": "\u001b[0m \u001b[90m 789 |\u001b[39m\n \u001b[90m 790 |\u001b[39m     test(\u001b[32m'display chart visualizations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 791 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 792 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 793 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 794 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 791
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 789 |\u001b[39m\n \u001b[90m 790 |\u001b[39m     test(\u001b[32m'display chart visualizations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 791 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 792 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 793 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 794 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:791:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:52.474Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 791
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-25e13ec62341882dd440",
              "file": "e2e/enhanced.test.ts",
              "line": 790,
              "column": 5
            },
            {
              "title": "display error screenshots",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 340,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 546,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:757:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 757
                        },
                        "snippet": "\u001b[0m \u001b[90m 755 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Media and Assets'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 756 |\u001b[39m     test(\u001b[32m'display error screenshots'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 757 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 758 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 759 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 760 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 757
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 755 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Media and Assets'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 756 |\u001b[39m     test(\u001b[32m'display error screenshots'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 757 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 758 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 759 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 760 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:757:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:17.100Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--030f1-s-display-error-screenshots-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 757
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-dbbc0d3f9f070882bff4",
              "file": "e2e/enhanced.test.ts",
              "line": 756,
              "column": 5
            },
            {
              "title": "lazy load images in gallery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 341,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 648,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:772:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 772
                        },
                        "snippet": "\u001b[0m \u001b[90m 770 |\u001b[39m\n \u001b[90m 771 |\u001b[39m     test(\u001b[32m'lazy load images in gallery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 772 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/gallery'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 773 |\u001b[39m\n \u001b[90m 774 |\u001b[39m         \u001b[90m// Images outside viewport should not be loaded\u001b[39m\n \u001b[90m 775 |\u001b[39m         \u001b[36mconst\u001b[39m images \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'img[loading=\"lazy\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 772
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/gallery\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 770 |\u001b[39m\n \u001b[90m 771 |\u001b[39m     test(\u001b[32m'lazy load images in gallery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 772 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/gallery'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 773 |\u001b[39m\n \u001b[90m 774 |\u001b[39m         \u001b[90m// Images outside viewport should not be loaded\u001b[39m\n \u001b[90m 775 |\u001b[39m         \u001b[36mconst\u001b[39m images \u001b[33m=\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m'img[loading=\"lazy\"]'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:772:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:17.157Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--70b29-lazy-load-images-in-gallery-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 772
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-4f45691fa3ca249c0988",
              "file": "e2e/enhanced.test.ts",
              "line": 771,
              "column": 5
            },
            {
              "title": "display chart visualizations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 342,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 489,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:791:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 791
                        },
                        "snippet": "\u001b[0m \u001b[90m 789 |\u001b[39m\n \u001b[90m 790 |\u001b[39m     test(\u001b[32m'display chart visualizations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 791 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 792 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 793 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 794 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 791
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 789 |\u001b[39m\n \u001b[90m 790 |\u001b[39m     test(\u001b[32m'display chart visualizations'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 791 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 792 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 793 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 794 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:791:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:17.581Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--90147-isplay-chart-visualizations-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 791
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-945ad581b51c9297525e",
              "file": "e2e/enhanced.test.ts",
              "line": 790,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Print and Export",
          "file": "e2e/enhanced.test.ts",
          "line": 806,
          "column": 6,
          "specs": [
            {
              "title": "print error report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 197,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 247,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:808:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 808
                        },
                        "snippet": "\u001b[0m \u001b[90m 806 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Print and Export'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 807 |\u001b[39m     test(\u001b[32m'print error report'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 808 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 809 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 810 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 808
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 806 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Print and Export'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 807 |\u001b[39m     test(\u001b[32m'print error report'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 808 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 809 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 810 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:808:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:09.737Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 808
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-135ff561c212880fe065",
              "file": "e2e/enhanced.test.ts",
              "line": 807,
              "column": 5
            },
            {
              "title": "generate shareable link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 198,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 193,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:831:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 831
                        },
                        "snippet": "\u001b[0m \u001b[90m 829 |\u001b[39m\n \u001b[90m 830 |\u001b[39m     test(\u001b[32m'generate shareable link'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 831 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 832 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 833 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 834 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 831
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 829 |\u001b[39m\n \u001b[90m 830 |\u001b[39m     test(\u001b[32m'generate shareable link'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 831 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 832 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 833 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 834 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:831:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:09.869Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-chromium/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 831
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-b6e3efaf5e8d33d321ca",
              "file": "e2e/enhanced.test.ts",
              "line": 830,
              "column": 5
            },
            {
              "title": "print error report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 270,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1353,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:808:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 808
                        },
                        "snippet": "\u001b[0m \u001b[90m 806 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Print and Export'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 807 |\u001b[39m     test(\u001b[32m'print error report'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 808 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 809 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 810 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 808
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 806 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Print and Export'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 807 |\u001b[39m     test(\u001b[32m'print error report'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 808 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 809 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 810 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:808:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:53.265Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 808
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-9a4fb8bc0b34679770dd",
              "file": "e2e/enhanced.test.ts",
              "line": 807,
              "column": 5
            },
            {
              "title": "generate shareable link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 271,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1363,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:831:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 831
                        },
                        "snippet": "\u001b[0m \u001b[90m 829 |\u001b[39m\n \u001b[90m 830 |\u001b[39m     test(\u001b[32m'generate shareable link'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 831 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 832 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 833 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 834 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 831
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 829 |\u001b[39m\n \u001b[90m 830 |\u001b[39m     test(\u001b[32m'generate shareable link'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 831 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 832 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 833 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 834 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:831:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:53.967Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 831
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-99ccdfa02ac2f17ecb04",
              "file": "e2e/enhanced.test.ts",
              "line": 830,
              "column": 5
            },
            {
              "title": "print error report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 343,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 742,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:808:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 808
                        },
                        "snippet": "\u001b[0m \u001b[90m 806 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Print and Export'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 807 |\u001b[39m     test(\u001b[32m'print error report'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 808 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 809 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 810 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 808
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 806 |\u001b[39m test\u001b[33m.\u001b[39mdescribe(\u001b[32m'Enhanced E2E Tests - Print and Export'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m 807 |\u001b[39m     test(\u001b[32m'print error report'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 808 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 809 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 810 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 811 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:808:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:18.472Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--65eeb-d-Export-print-error-report-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 808
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-ee7567cfb96334c3fa80",
              "file": "e2e/enhanced.test.ts",
              "line": 807,
              "column": 5
            },
            {
              "title": "generate shareable link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 344,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 778,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:831:20",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 20,
                          "line": 831
                        },
                        "snippet": "\u001b[0m \u001b[90m 829 |\u001b[39m\n \u001b[90m 830 |\u001b[39m     test(\u001b[32m'generate shareable link'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 831 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 832 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 833 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 834 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 20,
                            "line": 831
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 829 |\u001b[39m\n \u001b[90m 830 |\u001b[39m     test(\u001b[32m'generate shareable link'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 831 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 832 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 833 |\u001b[39m         \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 834 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:831:20\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:18.603Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--59d31-ort-generate-shareable-link-e2e-webkit/video.webm"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 20,
                        "line": 831
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-cb258856fd62f34674d2",
              "file": "e2e/enhanced.test.ts",
              "line": 830,
              "column": 5
            }
          ]
        },
        {
          "title": "Enhanced E2E Tests - Real-time Features",
          "file": "e2e/enhanced.test.ts",
          "line": 851,
          "column": 6,
          "specs": [
            {
              "title": "receive real-time error notifications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 200,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 221,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:860:25",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 25,
                          "line": 860
                        },
                        "snippet": "\u001b[0m \u001b[90m 858 |\u001b[39m\n \u001b[90m 859 |\u001b[39m         \u001b[90m// Admin creates error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in as Admin\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 863 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 25,
                            "line": 860
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 858 |\u001b[39m\n \u001b[90m 859 |\u001b[39m         \u001b[90m// Admin creates error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in as Admin\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 863 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:860:25\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:10.716Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-chromium/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-chromium/test-failed-1.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 25,
                        "line": 860
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-6e36314221c407e93f20",
              "file": "e2e/enhanced.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "sync status updates across sessions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 199,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 220,
                      "error": {
                        "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:897:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 21,
                          "line": 897
                        },
                        "snippet": "\u001b[0m \u001b[90m 895 |\u001b[39m\n \u001b[90m 896 |\u001b[39m         \u001b[90m// Both users view same error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 897 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 898 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 899 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 900 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 21,
                            "line": 897
                          },
                          "message": "Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/login\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 895 |\u001b[39m\n \u001b[90m 896 |\u001b[39m         \u001b[90m// Both users view same error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 897 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 898 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 899 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 900 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:897:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:10.698Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-chromium/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-chromium/test-failed-1.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 21,
                        "line": 897
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-fe2ad1c0627c4b129237",
              "file": "e2e/enhanced.test.ts",
              "line": 889,
              "column": 5
            },
            {
              "title": "receive real-time error notifications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 272,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1692,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:860:25",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 25,
                          "line": 860
                        },
                        "snippet": "\u001b[0m \u001b[90m 858 |\u001b[39m\n \u001b[90m 859 |\u001b[39m         \u001b[90m// Admin creates error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in as Admin\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 863 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 25,
                            "line": 860
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 858 |\u001b[39m\n \u001b[90m 859 |\u001b[39m         \u001b[90m// Admin creates error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in as Admin\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 863 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:860:25\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:54.783Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-firefox/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 25,
                        "line": 860
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-7d0eb72511dabcc293ff",
              "file": "e2e/enhanced.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "sync status updates across sessions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 273,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1864,
                      "error": {
                        "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:897:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 21,
                          "line": 897
                        },
                        "snippet": "\u001b[0m \u001b[90m 895 |\u001b[39m\n \u001b[90m 896 |\u001b[39m         \u001b[90m// Both users view same error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 897 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 898 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 899 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 900 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 21,
                            "line": 897
                          },
                          "message": "Error: page.goto: NS_ERROR_CONNECTION_REFUSED\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 895 |\u001b[39m\n \u001b[90m 896 |\u001b[39m         \u001b[90m// Both users view same error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 897 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 898 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 899 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 900 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:897:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:55.237Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-firefox/test-failed-2.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-firefox/test-failed-1.png"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 21,
                        "line": 897
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-a9c18d31953d7cd882da",
              "file": "e2e/enhanced.test.ts",
              "line": 889,
              "column": 5
            },
            {
              "title": "receive real-time error notifications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 345,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 845,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:860:25",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 25,
                          "line": 860
                        },
                        "snippet": "\u001b[0m \u001b[90m 858 |\u001b[39m\n \u001b[90m 859 |\u001b[39m         \u001b[90m// Admin creates error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in as Admin\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 863 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 25,
                            "line": 860
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 858 |\u001b[39m\n \u001b[90m 859 |\u001b[39m         \u001b[90m// Admin creates error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 860 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 861 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in as Admin\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 862 |\u001b[39m         \u001b[36mawait\u001b[39m adminPage\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 863 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:860:25\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:18.603Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--29fe6-al-time-error-notifications-e2e-webkit/test-failed-2.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 25,
                        "line": 860
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-b2e3e74d657650987d15",
              "file": "e2e/enhanced.test.ts",
              "line": 852,
              "column": 5
            },
            {
              "title": "sync status updates across sessions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 346,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 778,
                      "error": {
                        "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n",
                        "stack": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:897:21",
                        "location": {
                          "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                          "column": 21,
                          "line": 897
                        },
                        "snippet": "\u001b[0m \u001b[90m 895 |\u001b[39m\n \u001b[90m 896 |\u001b[39m         \u001b[90m// Both users view same error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 897 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 898 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 899 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 900 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                            "column": 21,
                            "line": 897
                          },
                          "message": "Error: page.goto: Could not connect to the server.\nCall log:\n\u001b[2m  - navigating to \"http://localhost:5173/login\", waiting until \"load\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 895 |\u001b[39m\n \u001b[90m 896 |\u001b[39m         \u001b[90m// Both users view same error\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 897 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mgoto(\u001b[32m'http://localhost:5173/login'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 898 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mclick(\u001b[32m'button:has-text(\"Sign in with Google\")'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 899 |\u001b[39m         \u001b[36mawait\u001b[39m page1\u001b[33m.\u001b[39mwaitForURL(\u001b[32m'**/dashboard'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 900 |\u001b[39m\u001b[0m\n\u001b[2m    at /Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts:897:21\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:18.697Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-webkit/test-failed-1.png"
                        },
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/test-results/e2e-enhanced-Enhanced-E2E--c9cf9-tus-updates-across-sessions-e2e-webkit/test-failed-2.png"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/deepak/Downloads/Projects/StackLens-AI-Deploy/tests/e2e/enhanced.test.ts",
                        "column": 21,
                        "line": 897
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fe35319142fde9e497d-985c06af9003cdda8810",
              "file": "e2e/enhanced.test.ts",
              "line": 889,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "e2e/upload.test.ts",
      "file": "e2e/upload.test.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "File Upload and Analysis",
          "file": "e2e/upload.test.ts",
          "line": 9,
          "column": 6,
          "specs": [
            {
              "title": "should upload Excel file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 201,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:10.703Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-583a8b487bfc6196d41f",
              "file": "e2e/upload.test.ts",
              "line": 16,
              "column": 5
            },
            {
              "title": "should upload CSV file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 202,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:10.812Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-ee2317bb6c49a2ee282c",
              "file": "e2e/upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "should upload log file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 203,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:11.464Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6f656aad67182b5e94de",
              "file": "e2e/upload.test.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should reject invalid file types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 204,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:11.554Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-0bcbee1692580b963745",
              "file": "e2e/upload.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should reject files larger than limit",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 205,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:11.623Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-f054a85c589561c58fd5",
              "file": "e2e/upload.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should trigger AI analysis after upload",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 206,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:11.637Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-710a4c0d3686a65552ed",
              "file": "e2e/upload.test.ts",
              "line": 66,
              "column": 5
            },
            {
              "title": "should display error detection results",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 207,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:12.187Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-929415f4cc86e2350427",
              "file": "e2e/upload.test.ts",
              "line": 84,
              "column": 5
            },
            {
              "title": "should display AI suggestions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 208,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:12.285Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6f8e2429a73fc1917d87",
              "file": "e2e/upload.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should display ML predictions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 209,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:12.323Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-66b7e715a6153c8c8a43",
              "file": "e2e/upload.test.ts",
              "line": 111,
              "column": 5
            },
            {
              "title": "should navigate to error details",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 210,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:12.344Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-2ff0038f43fa1647afd8",
              "file": "e2e/upload.test.ts",
              "line": 122,
              "column": 5
            },
            {
              "title": "should handle upload errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-chromium",
                  "projectName": "e2e-chromium",
                  "results": [
                    {
                      "workerIndex": 211,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:12.861Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-7c85cf0f3e63f0aebca5",
              "file": "e2e/upload.test.ts",
              "line": 136,
              "column": 5
            },
            {
              "title": "should upload Excel file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 274,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:55.890Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-d225ab8592b7c849ebd2",
              "file": "e2e/upload.test.ts",
              "line": 16,
              "column": 5
            },
            {
              "title": "should upload CSV file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 275,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:56.792Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-42a997af937481bb8287",
              "file": "e2e/upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "should upload log file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 276,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:57.471Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-4f912bd9b970522eb3f4",
              "file": "e2e/upload.test.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should reject invalid file types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 277,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:58.618Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-1506e5302ce83973cf92",
              "file": "e2e/upload.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should reject files larger than limit",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 278,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:58.658Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-0a1f399262ddb8ad7e22",
              "file": "e2e/upload.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should trigger AI analysis after upload",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 279,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:59.139Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-7252ff5830825fadab79",
              "file": "e2e/upload.test.ts",
              "line": 66,
              "column": 5
            },
            {
              "title": "should display error detection results",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 280,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:59.266Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-53b4b52dbfbc36781433",
              "file": "e2e/upload.test.ts",
              "line": 84,
              "column": 5
            },
            {
              "title": "should display AI suggestions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 281,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:07:59.657Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-db82c8eed7794a53b8c7",
              "file": "e2e/upload.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should display ML predictions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 282,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:00.522Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-3bab2e1304f1cf3c81ec",
              "file": "e2e/upload.test.ts",
              "line": 111,
              "column": 5
            },
            {
              "title": "should navigate to error details",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 283,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:00.996Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-147b2fad910ca48cf08e",
              "file": "e2e/upload.test.ts",
              "line": 122,
              "column": 5
            },
            {
              "title": "should handle upload errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-firefox",
                  "projectName": "e2e-firefox",
                  "results": [
                    {
                      "workerIndex": 284,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:01.429Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6c703ea17fb8d51fdad3",
              "file": "e2e/upload.test.ts",
              "line": 136,
              "column": 5
            },
            {
              "title": "should upload Excel file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 347,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:19.129Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-3b0a64e3b146cdfa75b8",
              "file": "e2e/upload.test.ts",
              "line": 16,
              "column": 5
            },
            {
              "title": "should upload CSV file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 348,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:20.521Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-64ac067ab99af7e72a19",
              "file": "e2e/upload.test.ts",
              "line": 27,
              "column": 5
            },
            {
              "title": "should upload log file successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 349,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:20.702Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-fedf2080fb70f8b80dfc",
              "file": "e2e/upload.test.ts",
              "line": 36,
              "column": 5
            },
            {
              "title": "should reject invalid file types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 350,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:20.669Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-c407f669f8c437f20a5e",
              "file": "e2e/upload.test.ts",
              "line": 44,
              "column": 5
            },
            {
              "title": "should reject files larger than limit",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 351,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:20.669Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-3dd5215196ab11175317",
              "file": "e2e/upload.test.ts",
              "line": 55,
              "column": 5
            },
            {
              "title": "should trigger AI analysis after upload",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 352,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:20.763Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-6c0622049438c89cb45f",
              "file": "e2e/upload.test.ts",
              "line": 66,
              "column": 5
            },
            {
              "title": "should display error detection results",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 353,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:21.448Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-cebc4e032dce4bf50280",
              "file": "e2e/upload.test.ts",
              "line": 84,
              "column": 5
            },
            {
              "title": "should display AI suggestions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 354,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:21.538Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-9ee0943f009d48809f5a",
              "file": "e2e/upload.test.ts",
              "line": 100,
              "column": 5
            },
            {
              "title": "should display ML predictions",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 355,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:21.547Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-8ea6186064d75dabcf4d",
              "file": "e2e/upload.test.ts",
              "line": 111,
              "column": 5
            },
            {
              "title": "should navigate to error details",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 356,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:21.545Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-cf5675a4b5336f8b30db",
              "file": "e2e/upload.test.ts",
              "line": 122,
              "column": 5
            },
            {
              "title": "should handle upload errors gracefully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "e2e-webkit",
                  "projectName": "e2e-webkit",
                  "results": [
                    {
                      "workerIndex": 357,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 4,
                      "error": {
                        "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'",
                        "stack": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                      },
                      "errors": [
                        {
                          "message": "Error: Error reading storage state from tests/.auth/user.json:\nENOENT: no such file or directory, open 'tests/.auth/user.json'"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-07T05:08:21.622Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1e8161d9b382aed29dfc-af3c7ed79da49f7a5155",
              "file": "e2e/upload.test.ts",
              "line": 136,
              "column": 5
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-07T05:06:40.902Z",
    "duration": 100993.261,
    "expected": 58,
    "skipped": 6,
    "unexpected": 350,
    "flaky": 0
  }
}