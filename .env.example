# ========================================
# StackLens v0.9.5 - Phase 5: Advanced Security & Performance Configuration
# ========================================
# 
# IMPORTANT: This is a template file.
# Copy this to .env and fill in your actual values.
# Never commit .env with real secrets!
#
# Command: cp .env.example .env
# ========================================

# ========================================
# SERVER CONFIGURATION
# ========================================
SERVER_IP=localhost
PORT=4000
NODE_ENV=development
HOST=0.0.0.0

# ========================================
# SECURITY CONFIGURATION
# ========================================
# JWT Configuration
JWT_SECRET=your-super-secure-jwt-secret-key-here
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# API Keys and Secrets
API_KEY_SECRET=your-api-key-secret-here
ENCRYPTION_KEY=your-32-char-encryption-key-here

# CORS Settings
CLIENT_URL=http://localhost:5173
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# Rate Limiting (requests per window)
RATE_LIMIT_API_MAX=1000
RATE_LIMIT_API_WINDOW=900000
RATE_LIMIT_AUTH_MAX=5
RATE_LIMIT_AUTH_WINDOW=900000
RATE_LIMIT_UPLOAD_MAX=10
RATE_LIMIT_UPLOAD_WINDOW=60000
RATE_LIMIT_AI_MAX=50
RATE_LIMIT_AI_WINDOW=300000

# ========================================
# DATABASE CONFIGURATION
# ========================================
DATABASE_URL=./db/stacklens.db
DB_HOST=localhost
DB_PORT=5432
DB_NAME=stacklens
DB_USER=postgres
DB_PASSWORD=password
DB_MAX_CONNECTIONS=20
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=10000
DB_STATEMENT_TIMEOUT=30000
DB_SLOW_QUERY_THRESHOLD=1000

# ========================================
# PERFORMANCE & MONITORING CONFIGURATION
# ========================================
# Performance Thresholds
SLOW_REQUEST_THRESHOLD=1000
SLOW_QUERY_THRESHOLD=500
HIGH_CPU_THRESHOLD=80
HIGH_MEMORY_THRESHOLD=85

# Cache Configuration
CACHE_MAX_SIZE=10000
CACHE_DEFAULT_TTL=3600
CACHE_CLEANUP_INTERVAL=300000

# Performance Monitoring
PERFORMANCE_MONITORING_ENABLED=true
SYSTEM_METRICS_INTERVAL=60000
METRICS_RETENTION_DAYS=7

# ========================================
# LOGGING CONFIGURATION
# ========================================
# Log Levels: TRACE=0, DEBUG=1, INFO=2, WARN=3, ERROR=4, FATAL=5
LOG_LEVEL=2
LOG_FORMAT=json
LOG_PATH=./logs
LOG_TO_CONSOLE=true
LOG_TO_FILE=true
LOG_MAX_FILE_SIZE=10485760
LOG_MAX_FILES=10
LOG_INCLUDE_STACK_TRACE=false
LOG_SENSITIVE_FIELDS=password,token,apiKey,secret,authorization,jwt

# ========================================
# AI/ML SERVICE CONFIGURATION
# ========================================
# Get your Gemini API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# ========================================
# CLIENT API CONFIGURATION
# ========================================
# For development, use localhost
# For production, use your actual domain
VITE_API_URL=http://localhost:4000

# ========================================
# FIREBASE AUTHENTICATION CONFIGURATION
# ========================================
# Get these values from: https://console.firebase.google.com/
# Project Settings → General → Your apps → Web app config
#
# IMPORTANT: These VITE_ variables are exposed to the browser.
# Ensure Firebase Security Rules are properly configured!

VITE_FIREBASE_API_KEY=your_firebase_api_key_here
VITE_FIREBASE_PROJECT_ID=your_firebase_project_id
VITE_FIREBASE_APP_ID=your_firebase_app_id
VITE_FIREBASE_MESSAGING_SENDER_ID=your_firebase_sender_id
VITE_FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
VITE_FIREBASE_STORAGE_BUCKET=your_project.firebasestorage.app
VITE_FIREBASE_MEASUREMENT_ID=your_measurement_id

# ========================================
# OPTIONAL: PYTHON ML SERVICES
# ========================================
# Only needed if using optional Python microservices
# PYTHON_ML_SERVICE_URL=http://localhost:8001

# ========================================
# SECURITY NOTES
# ========================================
# 1. Never commit .env file to git
# 2. Rotate API keys regularly (every 90 days recommended)
# 3. Use different keys for dev/staging/production
# 4. Enable Firebase Security Rules
# 5. Restrict API keys by IP/domain in production
# ========================================
